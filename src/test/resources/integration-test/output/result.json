{
  "collection": {
    "_": {
      "postman_id": "14aeea16-40c2-4ae8-bfa9-4015bae6dacd",
      "exporter_id": "25309445"
    },
    "item": [
      {
        "id": "4b88e356-3ecd-456c-aa2c-19fa32a2ee64",
        "name": "Start process - CREATED",
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "c97c646b-1c99-4636-89bd-8e66560985ab",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 201\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "78e9ac6c-05fb-4cc9-adb9-c4a39e1f712e"
            }
          }
        ]
      },
      {
        "id": "201370af-b504-48b4-bc80-3504c5fe3d98",
        "name": "Start process - END PROCESS",
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "2d57d839-02f8-4b11-a363-7bf92bbbc525",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "ae526123-27e4-4533-88e4-8c4caf68604d"
            }
          }
        ]
      },
      {
        "id": "a243844f-8ba0-401d-ba60-65792b4c3c1e",
        "name": "Start process - PROCESSING",
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "fa54b64b-636c-4989-b357-49885672293c",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 202\", function () {",
                "    pm.response.to.have.status(202);",
                "});"
              ],
              "_lastExecutionId": "388988b2-10d8-4bb8-868d-495295a88c8b"
            }
          }
        ]
      },
      {
        "id": "c335dfaf-1f36-4b13-b45e-833a4fd0a0e2",
        "name": "Start process - ERROR ON PROCESS",
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "e2a7c8a4-625e-4bbd-b8bd-436eb8feae8f",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 209\", function () {",
                "    pm.response.to.have.status(209);",
                "});"
              ],
              "_lastExecutionId": "b1ca315b-5c15-4966-9514-c95cc49ea1ec"
            }
          }
        ]
      },
      {
        "id": "f8ca3d8e-fceb-4977-bfef-68f71d249834",
        "name": "Start process - EXCEPTION ON PROCESS",
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "1b62971a-808b-46fd-8af9-717e4020a281",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 500\", function () {",
                "    pm.response.to.have.status(500);",
                "});"
              ],
              "_lastExecutionId": "b2960aee-e0a5-46dc-802e-c065bb05b37d"
            }
          }
        ]
      },
      {
        "id": "22ddde57-c11b-4ffa-8d30-7f03cb6ec97a",
        "name": "Next - CREATED",
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "06789-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "8b686e19-0ee0-4727-92a5-b6512badcfe9",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 201\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "2cb1d2c9-16ef-4830-867d-803940131d1c"
            }
          }
        ]
      },
      {
        "id": "2cc2854b-487f-41d8-8280-e8670729fe54",
        "name": "Next - END PROCESS",
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00001-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "eef4c226-2479-485e-a5ed-7ffcd17f46f0",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "042f409f-f07b-4a00-aa22-8e06a291f1d1"
            }
          }
        ]
      },
      {
        "id": "90d7e090-f14a-4eb5-8a2b-037183e8fa71",
        "name": "Next - PROCESSING",
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00002-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "7c5cb65e-9195-4694-99de-6a133a95bd76",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 202\", function () {",
                "    pm.response.to.have.status(202);",
                "});"
              ],
              "_lastExecutionId": "e5217a61-a3b8-4217-937c-68a94faf1f57"
            }
          }
        ]
      },
      {
        "id": "3fae4397-2341-4764-a062-10eefe0a603b",
        "name": "Next - ERROR ON PROCESS",
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00003-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "18345c97-2450-4035-af65-1577bf517a6d",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 209\", function () {",
                "    pm.response.to.have.status(209);",
                "});"
              ],
              "_lastExecutionId": "832b8b16-2e75-443c-a255-cba9ccd35c75"
            }
          }
        ]
      },
      {
        "id": "9fda50a2-fba5-4807-a8b0-286011148baf",
        "name": "Next - EXCEPTION ON PROCESS",
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00004-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "70306daf-4df8-48e4-b6c1-ee69f89705d0",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 500\", function () {",
                "    pm.response.to.have.status(500);",
                "});"
              ],
              "_lastExecutionId": "c050dc77-5865-4916-8b75-a94321e7ad16"
            }
          }
        ]
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "f9446346-240d-4d1f-b3e5-14abe3e37728",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "a6de782c-1cbb-4999-9dfd-bbd57f47afb2"
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "acc417be-ade0-498a-ae88-012ca6fa260e",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "7d4b079e-8e16-4ac2-9b06-f577a5a7a85c"
        }
      }
    ],
    "variable": [
      {
        "type": "any",
        "value": "",
        "key": "token"
      },
      {
        "type": "any",
        "value": "https://postman-integration-testing.glitch.me/",
        "key": "baseUrl"
      }
    ],
    "info": {
      "_postman_id": "14aeea16-40c2-4ae8-bfa9-4015bae6dacd",
      "name": "integration_test_task",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "# ⛓️ Get started here\n\nPostman allows you to test your APIs using simple [Javascript code](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/). You can evaluate your response body, headers, cookies, and more using the [ChaiJS BDD](https://www.chaijs.com/api/bdd/) syntax.\n\nThis template guides you through the process of setting up an integration test to ensure that all individual components of an API function together seamlessly.\n\nThe API under test in this collection includes three endpoints for registering and receiving a token, accessing your unique generated name, and unregistering a token:\n\n- POST `/register`\n- POST `/unregister`\n- GET `/my-name`\n    \n\nBy setting up requests in the order of the operation, we can test the flow of data to and from the endpoints and ensure they work together as expected. We also verify that the data persists between requests on the back end.\n\n## 🔖 **How to use this template**\n\n**Step 1:** Check out the requests' documentation to learn more about -\n\n- what each request is meant to do.\n- the tests we've added against each one.\n    \n\n**Step 2:** Run this collection by clicking on \"Run\" or the by using the [Collection Runner](https://learning.postman.com/docs/collections/running-collections/intro-to-collection-runs/).\n\n<img src=\"https://content.pstmn.io/84019b0f-69c8-4c5f-98b9-2c90a6f9a0b1/Y29sbGVjdGlvbi1ydW5uZXItYnV0dG9uLmpwZWc=\" width=\"266\" height=\"103\">\n\n**Step 3:** To customize this template, replace the request URLs with your API endpoints and add or edit the tests if needed.\n\n## 💡Related templates\n\n[Regression testing](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=7ab0f80e-a964-46ee-b948-4a4e3a85809c&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)  \n[Performance testing](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=3302192d-87dd-4612-b381-61894de21203&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)  \n[Contract testing](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=42247877-8529-429d-acba-4de20c3b5b3b&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)  \n[Conditional workflow](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=78475d97-9a36-4731-ab24-9adf6a94d0fb&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)  \n[Mock data generation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=da8ceebc-d4da-478c-ab8a-37634faefc74&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)  \n[Common API vulnerabilities check](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e1edbae8-6429-453d-890e-00385eea1811&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "id": "b50427fb-c572-478e-aa5f-260ee607607a",
    "values": [
      {
        "type": "any",
        "value": "http://host.testcontainers.internal:8086",
        "key": "baseUrl"
      }
    ]
  },
  "globals": {
    "id": "d630af05-d824-4d15-8d44-508220b88e25",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 30,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 20,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 10,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 67.6,
      "responseMin": 20,
      "responseMax": 455,
      "responseSd": 129.19148578757037,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1713456947497,
      "completed": 1713456948408
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 10,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d9761868-7ba9-4a78-b467-7ad2ab308e36",
          "httpRequestId": "f93bb801-a1b9-4f80-99ae-6a315b9b10b1"
        },
        "item": {
          "id": "4b88e356-3ecd-456c-aa2c-19fa32a2ee64",
          "name": "Start process - CREATED",
          "request": {
            "description": {
              "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "main"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c97c646b-1c99-4636-89bd-8e66560985ab",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ],
                "_lastExecutionId": "78e9ac6c-05fb-4cc9-adb9-c4a39e1f712e"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "aec5bb26-440c-4bbc-a363-7523cf3372c0",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "494",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "351b4411-81e8-4d6e-8f68-86e678e1ad22",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "content-length",
              "value": "2144"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              97,
              115,
              107,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              116,
              101,
              115,
              116,
              49,
              34,
              58,
              34,
              100,
              97,
              116,
              97,
              49,
              34,
              44,
              34,
              114,
              101,
              99,
              101,
              105,
              112,
              116,
              95,
              116,
              101,
              109,
              112,
              108,
              97,
              116,
              101,
              34,
              58,
              34,
              114,
              105,
              101,
              112,
              105,
              108,
              111,
              103,
              111,
              67,
              111,
              109,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              105,
              46,
              104,
              116,
              109,
              108,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              98,
              108,
              101,
              49,
              34,
              58,
              34,
              49,
              49,
              46,
              53,
              48,
              34,
              44,
              34,
              97,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              101,
              34,
              58,
              34,
              49,
              49,
              46,
              53,
              34,
              44,
              34,
              102,
              101,
              101,
              34,
              58,
              34,
              50,
              46,
              51,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              122,
              105,
              111,
              110,
              101,
              34,
              44,
              34,
              99,
              111,
              109,
              112,
              97,
              110,
              121,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              44,
              34,
              98,
              117,
              116,
              116,
              111,
              110,
              49,
              34,
              58,
              34,
              123,
              101,
              114,
              114,
              111,
              114,
              61,
              65,
              117,
              114,
              105,
              103,
              97,
              125,
              34,
              125,
              44,
              34,
              111,
              110,
              69,
              114,
              114,
              111,
              114,
              34,
              58,
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              44,
              34,
              116,
              105,
              109,
              101,
              111,
              117,
              116,
              34,
              58,
              53,
              48,
              44,
              34,
              111,
              110,
              84,
              105,
              109,
              101,
              111,
              117,
              116,
              34,
              58,
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              44,
              34,
              116,
              101,
              109,
              112,
              108,
              97,
              116,
              101,
              34,
              58,
              123,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              68,
              57,
              52,
              98,
              87,
              119,
              103,
              100,
              109,
              86,
              121,
              99,
              50,
              108,
              118,
              98,
              106,
              48,
              105,
              77,
              83,
              52,
              119,
              73,
              105,
              66,
              108,
              98,
              109,
              78,
              118,
              90,
              71,
              108,
              117,
              90,
              122,
              48,
              105,
              97,
              88,
              78,
              118,
              76,
              84,
              103,
              52,
              78,
              84,
              107,
              116,
              77,
              83,
              73,
              47,
              80,
              103,
              111,
              56,
              73,
              85,
              82,
              80,
              81,
              49,
              82,
              90,
              85,
              69,
              85,
              103,
              97,
              72,
              82,
              116,
              98,
              67,
              66,
              81,
              86,
              85,
              74,
              77,
              83,
              85,
              77,
              103,
              73,
              105,
              48,
              118,
              76,
              49,
              99,
              122,
              81,
              121,
              56,
              118,
              82,
              70,
              82,
              69,
              73,
              70,
              104,
              73,
              86,
              69,
              49,
              77,
              73,
              68,
              69,
              117,
              77,
              67,
              66,
              85,
              99,
              109,
              70,
              117,
              99,
              50,
              108,
              48,
              97,
              87,
              57,
              117,
              89,
              87,
              119,
              118,
              76,
              48,
              86,
              79,
              73,
              105,
              65,
              105,
              97,
              72,
              82,
              48,
              99,
              68,
              111,
              118,
              76,
              51,
              100,
              51,
              100,
              121,
              53,
              51,
              77,
              121,
              53,
              118,
              99,
              109,
              99,
              118,
              86,
              70,
              73,
              118,
              101,
              71,
              104,
              48,
              98,
              87,
              119,
              120,
              76,
              48,
              82,
              85,
              82,
              67,
              57,
              52,
              97,
              72,
              82,
              116,
              98,
              68,
              69,
              116,
              100,
              72,
              74,
              104,
              98,
              110,
              78,
              112,
              100,
              71,
              108,
              118,
              98,
              109,
              70,
              115,
              76,
              109,
              82,
              48,
              90,
              67,
              73,
              43,
              67,
              106,
              120,
              111,
              100,
              71,
              49,
              115,
              73,
              72,
              104,
              116,
              98,
              71,
              53,
              122,
              80,
              83,
              74,
              111,
              100,
              72,
              82,
              119,
              79,
              105,
              56,
              118,
              100,
              51,
              100,
              51,
              76,
              110,
              99,
              122,
              76,
              109,
              57,
              121,
              90,
              121,
              56,
              120,
              79,
              84,
              107,
              53,
              76,
              51,
              104,
              111,
              100,
              71,
              49,
              115,
              73,
              106,
              52,
              75,
              80,
              71,
              104,
              108,
              89,
              87,
              81,
              43,
              80,
              71,
              120,
              112,
              98,
              109,
              115,
              103,
              99,
              109,
              86,
              115,
              80,
              83,
              74,
              122,
              100,
              72,
              108,
              115,
              90,
              88,
              78,
              111,
              90,
              87,
              86,
              48,
              73,
              105,
              66,
              111,
              99,
              109,
              86,
              109,
              80,
              83,
              74,
              106,
              99,
              51,
              77,
              118,
              90,
              87,
              49,
              49,
              98,
              71,
              70,
              48,
              98,
              51,
              74,
              108,
              76,
              109,
              78,
              122,
              99,
              121,
              73,
              103,
              76,
              122,
              52,
              56,
              76,
              50,
              104,
              108,
              89,
              87,
              81,
              43,
              67,
              106,
              120,
              105,
              98,
              50,
              82,
              53,
              80,
              103,
              111,
              74,
              80,
              71,
              108,
              116,
              90,
              121,
              66,
              112,
              90,
              68,
              48,
              105,
              98,
              71,
              57,
              110,
              98,
              121,
              73,
              103,
              99,
              51,
              74,
              106,
              80,
              83,
              74,
              111,
              100,
              72,
              82,
              119,
              99,
              122,
              111,
              118,
              76,
              50,
              81,
              121,
              101,
              71,
              82,
              49,
              101,
              84,
              100,
              48,
              89,
              109,
              100,
              49,
              77,
              109,
              81,
              122,
              76,
              109,
              78,
              115,
              98,
              51,
              86,
              107,
              90,
              110,
              74,
              118,
              98,
              110,
              81,
              117,
              98,
              109,
              86,
              48,
              76,
              50,
              90,
              112,
              98,
              71,
              86,
              122,
              76,
              48,
              108,
              68,
              84,
              48,
              52,
              118,
              90,
              71,
              86,
              109,
              89,
              88,
              86,
              115,
              100,
              70,
              57,
              115,
              98,
              50,
              100,
              118,
              76,
              110,
              78,
              50,
              90,
              121,
              73,
              103,
              76,
              122,
              52,
              75,
              67,
              84,
              120,
              111,
              77,
              84,
              53,
              84,
              90,
              88,
              74,
              50,
              97,
              88,
              112,
              112,
              73,
              71,
              82,
              112,
              73,
              72,
              66,
              49,
              89,
              109,
              74,
              115,
              97,
              87,
              78,
              104,
              73,
              72,
              86,
              48,
              97,
              87,
              120,
              112,
              100,
              67,
              89,
              106,
              77,
              106,
              73,
              48,
              79,
              122,
              119,
              118,
              97,
              68,
              69,
              43,
              67,
              81,
              111,
              74,
              67,
              103,
              107,
              56,
              97,
              68,
              73,
              43,
              85,
              109,
              108,
              108,
              99,
              71,
              108,
              115,
              98,
              50,
              100,
              118,
              73,
              71,
              82,
              108,
              98,
              67,
              66,
              119,
              89,
              87,
              100,
              104,
              98,
              87,
              86,
              117,
              100,
              71,
              56,
              56,
              76,
              50,
              103,
              121,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              56,
              100,
              71,
              70,
              105,
              98,
              71,
              85,
              103,
              97,
              87,
              81,
              57,
              73,
              110,
              82,
              104,
              89,
              109,
              120,
              108,
              73,
              106,
              52,
              75,
              67,
              84,
              120,
              48,
              97,
              71,
              86,
              104,
              90,
              68,
              52,
              75,
              67,
              83,
              65,
              56,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              74,
              80,
              72,
              82,
              111,
              80,
              103,
              111,
              74,
              67,
              81,
              107,
              56,
              99,
              51,
              66,
              104,
              98,
              106,
              53,
              66,
              100,
              88,
              74,
              112,
              90,
              50,
              69,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              103,
              107,
              74,
              80,
              67,
              57,
              48,
              97,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              103,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              110,
              74,
              112,
              90,
              50,
              104,
              48,
              73,
              106,
              52,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              77,
              84,
              65,
              119,
              77,
              68,
              65,
              103,
              74,
              105,
              77,
              52,
              77,
              122,
              89,
              48,
              79,
              122,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              67,
              81,
              107,
              56,
              76,
              51,
              82,
              111,
              80,
              103,
              107,
              74,
              67,
              103,
              107,
              103,
              73,
              68,
              119,
              118,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              56,
              76,
              51,
              82,
              111,
              90,
              87,
              70,
              107,
              80,
              103,
              111,
              75,
              67,
              84,
              120,
              48,
              89,
              109,
              57,
              107,
              101,
              84,
              52,
              74,
              67,
              103,
              107,
              103,
              73,
              68,
              120,
              48,
              99,
              106,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              81,
              43,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              81,
              50,
              57,
              116,
              98,
              87,
              108,
              122,
              99,
              50,
              108,
              118,
              98,
              109,
              107,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              81,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              110,
              74,
              112,
              90,
              50,
              104,
              48,
              73,
              106,
              52,
              74,
              67,
              81,
              107,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              77,
              105,
              52,
              122,
              73,
              67,
              89,
              106,
              79,
              68,
              77,
              50,
              78,
              68,
              115,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              103,
              107,
              74,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              74,
              67,
              81,
              111,
              74,
              73,
              67,
              65,
              56,
              76,
              51,
              82,
              121,
              80,
              103,
              107,
              103,
              73,
              65,
              111,
              74,
              73,
              68,
              119,
              118,
              100,
              71,
              74,
              118,
              90,
              72,
              107,
              43,
              67,
              81,
              111,
              74,
              73,
              68,
              120,
              48,
              90,
              109,
              57,
              118,
              100,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              74,
              67,
              84,
              120,
              48,
              90,
              68,
              52,
              56,
              99,
              51,
              66,
              104,
              98,
              105,
              66,
              106,
              98,
              71,
              70,
              122,
              99,
              122,
              48,
              105,
              98,
              71,
              70,
              121,
              90,
              50,
              85,
              105,
              80,
              108,
              82,
              118,
              100,
              71,
              70,
              115,
              90,
              84,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              74,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              82,
              107,
              73,
              71,
              78,
              115,
              89,
              88,
              78,
              122,
              80,
              83,
              74,
              121,
              97,
              87,
              100,
              111,
              100,
              67,
              73,
              43,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              109,
              120,
              104,
              99,
              109,
              100,
              108,
              73,
              106,
              52,
              120,
              77,
              83,
              52,
              49,
              73,
              67,
              89,
              106,
              79,
              68,
              77,
              50,
              78,
              68,
              115,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              74,
              67,
              81,
              111,
              74,
              67,
              84,
              119,
              118,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              103,
              73,
              68,
              119,
              118,
              100,
              71,
              90,
              118,
              98,
              51,
              81,
              43,
              67,
              103,
              111,
              74,
              73,
              65,
              111,
              74,
              80,
              67,
              57,
              48,
              89,
              87,
              74,
              115,
              90,
              84,
              52,
              74,
              67,
              105,
              65,
              75,
              73,
              67,
              65,
              103,
              73,
              68,
              120,
              105,
              100,
              88,
              82,
              48,
              98,
              50,
              52,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              109,
              53,
              108,
              90,
              50,
              70,
              48,
              97,
              88,
              90,
              108,
              73,
              105,
              66,
              107,
              89,
              88,
              82,
              104,
              76,
              87,
              90,
              107,
              97,
              122,
              48,
              105,
              85,
              122,
              81,
              105,
              73,
              71,
              108,
              107,
              80,
              83,
              74,
              105,
              89,
              87,
              78,
              114,
              73,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              67,
              65,
              103,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              83,
              87,
              53,
              107,
              97,
              87,
              86,
              48,
              99,
              109,
              56,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              105,
              65,
              103,
              73,
              67,
              65,
              56,
              76,
              50,
              74,
              49,
              100,
              72,
              82,
              118,
              98,
              106,
              52,
              75,
              67,
              81,
              111,
              74,
              80,
              71,
              74,
              49,
              100,
              72,
              82,
              118,
              98,
              105,
              66,
              106,
              98,
              71,
              70,
              122,
              99,
              122,
              48,
              105,
              98,
              109,
              86,
              110,
              89,
              88,
              82,
              112,
              100,
              109,
              85,
              105,
              73,
              71,
              108,
              107,
              80,
              83,
              74,
              108,
              101,
              71,
              108,
              48,
              73,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              67,
              65,
              103,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              82,
              88,
              78,
              106,
              97,
              84,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              68,
              119,
              118,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              56,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              73,
              71,
              78,
              115,
              89,
              88,
              78,
              122,
              80,
              83,
              74,
              119,
              98,
              51,
              78,
              112,
              100,
              71,
              108,
              50,
              90,
              83,
              73,
              103,
              90,
              71,
              70,
              48,
              89,
              83,
              49,
              109,
              90,
              71,
              115,
              57,
              73,
              108,
              77,
              52,
              73,
              105,
              66,
              112,
              90,
              68,
              48,
              105,
              89,
              50,
              57,
              117,
              90,
              109,
              108,
              121,
              98,
              83,
              73,
              43,
              67,
              105,
              65,
              103,
              73,
              67,
              65,
              103,
              73,
              68,
              120,
              122,
              99,
              71,
              70,
              117,
              80,
              108,
              66,
              104,
              90,
              50,
              69,
              103,
              73,
              68,
              69,
              120,
              76,
              106,
              85,
              103,
              74,
              105,
              77,
              52,
              77,
              122,
              89,
              48,
              79,
              122,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              67,
              84,
              119,
              118,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              75,
              67,
              103,
              107,
              56,
              76,
              50,
              74,
              118,
              90,
              72,
              107,
              43,
              67,
              103,
              107,
              75,
              80,
              67,
              57,
              111,
              100,
              71,
              49,
              115,
              80,
              103,
              61,
              61,
              34,
              125,
              44,
              34,
              99,
              111,
              109,
              109,
              97,
              110,
              100,
              34,
              58,
              34,
              80,
              82,
              73,
              78,
              84,
              95,
              82,
              69,
              67,
              69,
              73,
              80,
              84,
              34,
              44,
              34,
              98,
              117,
              116,
              116,
              111,
              110,
              115,
              34,
              58,
              91,
              93,
              125,
              44,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              54,
              55,
              56,
              57,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              48,
              48,
              50,
              99,
              97,
              50,
              49,
              98,
              45,
              102,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              79,
              75,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              111,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              32,
              99,
              111,
              109,
              112,
              108,
              101,
              116,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 455,
          "responseSize": 2144
        },
        "id": "4b88e356-3ecd-456c-aa2c-19fa32a2ee64",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "da233fa8-0094-4e3c-904d-de0b9249cab3",
          "length": 10,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4798dedb-d418-4dbd-ab24-cf411f683e23"
        },
        "item": {
          "id": "201370af-b504-48b4-bc80-3504c5fe3d98",
          "name": "Start process - END PROCESS",
          "request": {
            "description": {
              "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "main"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2d57d839-02f8-4b11-a363-7bf92bbbc525",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "ae526123-27e4-4533-88e4-8c4caf68604d"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7532d08a-c73b-46fb-8dd5-a96f7d57c941",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "494",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "cb94e25d-5dc6-4bdd-a347-5417398b756b",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "content-length",
              "value": "139"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              48,
              48,
              48,
              49,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              52,
              55,
              53,
              55,
              57,
              100,
              51,
              53,
              45,
              53,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              69,
              78,
              68,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              105,
              115,
              32,
              116,
              101,
              114,
              109,
              105,
              110,
              97,
              116,
              101,
              100,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 29,
          "responseSize": 139
        },
        "id": "201370af-b504-48b4-bc80-3504c5fe3d98",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "402a2dba-49da-461b-8a28-022fbaf552a0",
          "length": 10,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f38263ea-1953-45e6-b87b-8c214b7bd99a"
        },
        "item": {
          "id": "a243844f-8ba0-401d-ba60-65792b4c3c1e",
          "name": "Start process - PROCESSING",
          "request": {
            "description": {
              "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "main"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fa54b64b-636c-4989-b357-49885672293c",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 202\", function () {",
                  "    pm.response.to.have.status(202);",
                  "});"
                ],
                "_lastExecutionId": "388988b2-10d8-4bb8-868d-495295a88c8b"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "efd3a575-8f41-41de-8982-458d4bcf5419",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "494",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "f0ac974e-34b2-49f5-8f49-2638cc6b0286",
          "status": "Accepted",
          "code": 202,
          "header": [
            {
              "key": "content-length",
              "value": "155"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              48,
              48,
              48,
              50,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              48,
              100,
              51,
              54,
              55,
              99,
              99,
              53,
              45,
              54,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              80,
              82,
              79,
              67,
              69,
              83,
              83,
              73,
              78,
              71,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              80,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              115,
              116,
              105,
              108,
              108,
              32,
              114,
              117,
              110,
              110,
              105,
              110,
              103,
              44,
              32,
              114,
              101,
              116,
              114,
              121,
              32,
              108,
              97,
              116,
              101,
              114,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 27,
          "responseSize": 155
        },
        "id": "a243844f-8ba0-401d-ba60-65792b4c3c1e",
        "assertions": [
          {
            "assertion": "Status code is 202",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "892be92a-af3d-4ecb-9e7c-585b1d227332",
          "length": 10,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "aa081317-da59-4e9f-98d4-fbde247a6dca"
        },
        "item": {
          "id": "c335dfaf-1f36-4b13-b45e-833a4fd0a0e2",
          "name": "Start process - ERROR ON PROCESS",
          "request": {
            "description": {
              "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "main"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e2a7c8a4-625e-4bbd-b8bd-436eb8feae8f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 209\", function () {",
                  "    pm.response.to.have.status(209);",
                  "});"
                ],
                "_lastExecutionId": "b1ca315b-5c15-4966-9514-c95cc49ea1ec"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2ea057f7-8ae0-42a2-9a88-626719267c69",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "494",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "f1883295-6de7-487c-afbb-d9471a8f09ea",
          "status": "Success (209)",
          "code": 209,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            },
            {
              "key": "content-length",
              "value": "90"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              80,
              82,
              79,
              67,
              69,
              83,
              83,
              95,
              69,
              82,
              82,
              79,
              82,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              69,
              114,
              114,
              111,
              114,
              32,
              119,
              104,
              105,
              108,
              101,
              32,
              114,
              117,
              110,
              110,
              105,
              110,
              103,
              32,
              116,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              50,
              48,
              57,
              125
            ]
          },
          "cookie": [],
          "responseTime": 27,
          "responseSize": 90
        },
        "id": "c335dfaf-1f36-4b13-b45e-833a4fd0a0e2",
        "assertions": [
          {
            "assertion": "Status code is 209",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e6c461b1-d521-43d2-b230-c3f304a3abe4",
          "length": 10,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7a040cae-30ea-4b5d-b2c5-5e8b7b124d6c"
        },
        "item": {
          "id": "f8ca3d8e-fceb-4977-bfef-68f71d249834",
          "name": "Start process - EXCEPTION ON PROCESS",
          "request": {
            "description": {
              "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "main"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1b62971a-808b-46fd-8af9-717e4020a281",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 500\", function () {",
                  "    pm.response.to.have.status(500);",
                  "});"
                ],
                "_lastExecutionId": "b2960aee-e0a5-46dc-802e-c065bb05b37d"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f3aa0ce5-b1e5-4d73-ab5d-273031c8f060",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "494",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "5da0365e-7b9c-43bc-a62d-8361bc8f047d",
          "status": "Internal Server Error",
          "code": 500,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            },
            {
              "key": "content-length",
              "value": "80"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              84,
              65,
              83,
              75,
              95,
              69,
              82,
              82,
              79,
              82,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              69,
              114,
              114,
              111,
              114,
              32,
              114,
              101,
              116,
              114,
              105,
              101,
              118,
              101,
              32,
              110,
              101,
              120,
              116,
              32,
              115,
              116,
              101,
              112,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              53,
              48,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 23,
          "responseSize": 80
        },
        "id": "f8ca3d8e-fceb-4977-bfef-68f71d249834",
        "assertions": [
          {
            "assertion": "Status code is 500",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1fc8e2cc-4747-4e2a-bfca-19773d7dfbf4",
          "length": 10,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a594162d-eead-4499-9ff0-2994b739ed22"
        },
        "item": {
          "id": "22ddde57-c11b-4ffa-8d30-7f03cb6ec97a",
          "name": "Next - CREATED",
          "request": {
            "description": {
              "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "next",
                "trns",
                "06789-12345-0001-64874412-1698769800000-363cc36d-0"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8b686e19-0ee0-4727-92a5-b6512badcfe9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ],
                "_lastExecutionId": "2cb1d2c9-16ef-4830-867d-803940131d1c"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "06789-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "90551285-78d4-4809-b081-6bf660da5947",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "680",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "ba9caa6f-d29f-48fe-9a1a-ad3ea8ea1e9d",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "content-length",
              "value": "2144"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              97,
              115,
              107,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              116,
              101,
              115,
              116,
              49,
              34,
              58,
              34,
              100,
              97,
              116,
              97,
              49,
              34,
              44,
              34,
              114,
              101,
              99,
              101,
              105,
              112,
              116,
              95,
              116,
              101,
              109,
              112,
              108,
              97,
              116,
              101,
              34,
              58,
              34,
              114,
              105,
              101,
              112,
              105,
              108,
              111,
              103,
              111,
              67,
              111,
              109,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              105,
              46,
              104,
              116,
              109,
              108,
              34,
              44,
              34,
              98,
              117,
              116,
              116,
              111,
              110,
              49,
              34,
              58,
              34,
              123,
              101,
              114,
              114,
              111,
              114,
              61,
              65,
              117,
              114,
              105,
              103,
              97,
              125,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              98,
              108,
              101,
              49,
              34,
              58,
              34,
              49,
              49,
              46,
              53,
              48,
              34,
              44,
              34,
              97,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              101,
              34,
              58,
              34,
              49,
              49,
              46,
              53,
              34,
              44,
              34,
              102,
              101,
              101,
              34,
              58,
              34,
              50,
              46,
              51,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              122,
              105,
              111,
              110,
              101,
              34,
              44,
              34,
              99,
              111,
              109,
              112,
              97,
              110,
              121,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              44,
              34,
              111,
              110,
              69,
              114,
              114,
              111,
              114,
              34,
              58,
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              44,
              34,
              116,
              105,
              109,
              101,
              111,
              117,
              116,
              34,
              58,
              53,
              48,
              44,
              34,
              111,
              110,
              84,
              105,
              109,
              101,
              111,
              117,
              116,
              34,
              58,
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              44,
              34,
              116,
              101,
              109,
              112,
              108,
              97,
              116,
              101,
              34,
              58,
              123,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              68,
              57,
              52,
              98,
              87,
              119,
              103,
              100,
              109,
              86,
              121,
              99,
              50,
              108,
              118,
              98,
              106,
              48,
              105,
              77,
              83,
              52,
              119,
              73,
              105,
              66,
              108,
              98,
              109,
              78,
              118,
              90,
              71,
              108,
              117,
              90,
              122,
              48,
              105,
              97,
              88,
              78,
              118,
              76,
              84,
              103,
              52,
              78,
              84,
              107,
              116,
              77,
              83,
              73,
              47,
              80,
              103,
              111,
              56,
              73,
              85,
              82,
              80,
              81,
              49,
              82,
              90,
              85,
              69,
              85,
              103,
              97,
              72,
              82,
              116,
              98,
              67,
              66,
              81,
              86,
              85,
              74,
              77,
              83,
              85,
              77,
              103,
              73,
              105,
              48,
              118,
              76,
              49,
              99,
              122,
              81,
              121,
              56,
              118,
              82,
              70,
              82,
              69,
              73,
              70,
              104,
              73,
              86,
              69,
              49,
              77,
              73,
              68,
              69,
              117,
              77,
              67,
              66,
              85,
              99,
              109,
              70,
              117,
              99,
              50,
              108,
              48,
              97,
              87,
              57,
              117,
              89,
              87,
              119,
              118,
              76,
              48,
              86,
              79,
              73,
              105,
              65,
              105,
              97,
              72,
              82,
              48,
              99,
              68,
              111,
              118,
              76,
              51,
              100,
              51,
              100,
              121,
              53,
              51,
              77,
              121,
              53,
              118,
              99,
              109,
              99,
              118,
              86,
              70,
              73,
              118,
              101,
              71,
              104,
              48,
              98,
              87,
              119,
              120,
              76,
              48,
              82,
              85,
              82,
              67,
              57,
              52,
              97,
              72,
              82,
              116,
              98,
              68,
              69,
              116,
              100,
              72,
              74,
              104,
              98,
              110,
              78,
              112,
              100,
              71,
              108,
              118,
              98,
              109,
              70,
              115,
              76,
              109,
              82,
              48,
              90,
              67,
              73,
              43,
              67,
              106,
              120,
              111,
              100,
              71,
              49,
              115,
              73,
              72,
              104,
              116,
              98,
              71,
              53,
              122,
              80,
              83,
              74,
              111,
              100,
              72,
              82,
              119,
              79,
              105,
              56,
              118,
              100,
              51,
              100,
              51,
              76,
              110,
              99,
              122,
              76,
              109,
              57,
              121,
              90,
              121,
              56,
              120,
              79,
              84,
              107,
              53,
              76,
              51,
              104,
              111,
              100,
              71,
              49,
              115,
              73,
              106,
              52,
              75,
              80,
              71,
              104,
              108,
              89,
              87,
              81,
              43,
              80,
              71,
              120,
              112,
              98,
              109,
              115,
              103,
              99,
              109,
              86,
              115,
              80,
              83,
              74,
              122,
              100,
              72,
              108,
              115,
              90,
              88,
              78,
              111,
              90,
              87,
              86,
              48,
              73,
              105,
              66,
              111,
              99,
              109,
              86,
              109,
              80,
              83,
              74,
              106,
              99,
              51,
              77,
              118,
              90,
              87,
              49,
              49,
              98,
              71,
              70,
              48,
              98,
              51,
              74,
              108,
              76,
              109,
              78,
              122,
              99,
              121,
              73,
              103,
              76,
              122,
              52,
              56,
              76,
              50,
              104,
              108,
              89,
              87,
              81,
              43,
              67,
              106,
              120,
              105,
              98,
              50,
              82,
              53,
              80,
              103,
              111,
              74,
              80,
              71,
              108,
              116,
              90,
              121,
              66,
              112,
              90,
              68,
              48,
              105,
              98,
              71,
              57,
              110,
              98,
              121,
              73,
              103,
              99,
              51,
              74,
              106,
              80,
              83,
              74,
              111,
              100,
              72,
              82,
              119,
              99,
              122,
              111,
              118,
              76,
              50,
              81,
              121,
              101,
              71,
              82,
              49,
              101,
              84,
              100,
              48,
              89,
              109,
              100,
              49,
              77,
              109,
              81,
              122,
              76,
              109,
              78,
              115,
              98,
              51,
              86,
              107,
              90,
              110,
              74,
              118,
              98,
              110,
              81,
              117,
              98,
              109,
              86,
              48,
              76,
              50,
              90,
              112,
              98,
              71,
              86,
              122,
              76,
              48,
              108,
              68,
              84,
              48,
              52,
              118,
              90,
              71,
              86,
              109,
              89,
              88,
              86,
              115,
              100,
              70,
              57,
              115,
              98,
              50,
              100,
              118,
              76,
              110,
              78,
              50,
              90,
              121,
              73,
              103,
              76,
              122,
              52,
              75,
              67,
              84,
              120,
              111,
              77,
              84,
              53,
              84,
              90,
              88,
              74,
              50,
              97,
              88,
              112,
              112,
              73,
              71,
              82,
              112,
              73,
              72,
              66,
              49,
              89,
              109,
              74,
              115,
              97,
              87,
              78,
              104,
              73,
              72,
              86,
              48,
              97,
              87,
              120,
              112,
              100,
              67,
              89,
              106,
              77,
              106,
              73,
              48,
              79,
              122,
              119,
              118,
              97,
              68,
              69,
              43,
              67,
              81,
              111,
              74,
              67,
              103,
              107,
              56,
              97,
              68,
              73,
              43,
              85,
              109,
              108,
              108,
              99,
              71,
              108,
              115,
              98,
              50,
              100,
              118,
              73,
              71,
              82,
              108,
              98,
              67,
              66,
              119,
              89,
              87,
              100,
              104,
              98,
              87,
              86,
              117,
              100,
              71,
              56,
              56,
              76,
              50,
              103,
              121,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              56,
              100,
              71,
              70,
              105,
              98,
              71,
              85,
              103,
              97,
              87,
              81,
              57,
              73,
              110,
              82,
              104,
              89,
              109,
              120,
              108,
              73,
              106,
              52,
              75,
              67,
              84,
              120,
              48,
              97,
              71,
              86,
              104,
              90,
              68,
              52,
              75,
              67,
              83,
              65,
              56,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              74,
              80,
              72,
              82,
              111,
              80,
              103,
              111,
              74,
              67,
              81,
              107,
              56,
              99,
              51,
              66,
              104,
              98,
              106,
              53,
              66,
              100,
              88,
              74,
              112,
              90,
              50,
              69,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              103,
              107,
              74,
              80,
              67,
              57,
              48,
              97,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              103,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              110,
              74,
              112,
              90,
              50,
              104,
              48,
              73,
              106,
              52,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              77,
              84,
              65,
              119,
              77,
              68,
              65,
              103,
              74,
              105,
              77,
              52,
              77,
              122,
              89,
              48,
              79,
              122,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              67,
              81,
              107,
              56,
              76,
              51,
              82,
              111,
              80,
              103,
              107,
              74,
              67,
              103,
              107,
              103,
              73,
              68,
              119,
              118,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              56,
              76,
              51,
              82,
              111,
              90,
              87,
              70,
              107,
              80,
              103,
              111,
              75,
              67,
              84,
              120,
              48,
              89,
              109,
              57,
              107,
              101,
              84,
              52,
              74,
              67,
              103,
              107,
              103,
              73,
              68,
              120,
              48,
              99,
              106,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              81,
              43,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              81,
              50,
              57,
              116,
              98,
              87,
              108,
              122,
              99,
              50,
              108,
              118,
              98,
              109,
              107,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              81,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              110,
              74,
              112,
              90,
              50,
              104,
              48,
              73,
              106,
              52,
              74,
              67,
              81,
              107,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              77,
              105,
              52,
              122,
              73,
              67,
              89,
              106,
              79,
              68,
              77,
              50,
              78,
              68,
              115,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              103,
              107,
              74,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              74,
              67,
              81,
              111,
              74,
              73,
              67,
              65,
              56,
              76,
              51,
              82,
              121,
              80,
              103,
              107,
              103,
              73,
              65,
              111,
              74,
              73,
              68,
              119,
              118,
              100,
              71,
              74,
              118,
              90,
              72,
              107,
              43,
              67,
              81,
              111,
              74,
              73,
              68,
              120,
              48,
              90,
              109,
              57,
              118,
              100,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              74,
              67,
              84,
              120,
              48,
              90,
              68,
              52,
              56,
              99,
              51,
              66,
              104,
              98,
              105,
              66,
              106,
              98,
              71,
              70,
              122,
              99,
              122,
              48,
              105,
              98,
              71,
              70,
              121,
              90,
              50,
              85,
              105,
              80,
              108,
              82,
              118,
              100,
              71,
              70,
              115,
              90,
              84,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              74,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              82,
              107,
              73,
              71,
              78,
              115,
              89,
              88,
              78,
              122,
              80,
              83,
              74,
              121,
              97,
              87,
              100,
              111,
              100,
              67,
              73,
              43,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              109,
              120,
              104,
              99,
              109,
              100,
              108,
              73,
              106,
              52,
              120,
              77,
              83,
              52,
              49,
              73,
              67,
              89,
              106,
              79,
              68,
              77,
              50,
              78,
              68,
              115,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              74,
              67,
              81,
              111,
              74,
              67,
              84,
              119,
              118,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              103,
              73,
              68,
              119,
              118,
              100,
              71,
              90,
              118,
              98,
              51,
              81,
              43,
              67,
              103,
              111,
              74,
              73,
              65,
              111,
              74,
              80,
              67,
              57,
              48,
              89,
              87,
              74,
              115,
              90,
              84,
              52,
              74,
              67,
              105,
              65,
              75,
              73,
              67,
              65,
              103,
              73,
              68,
              120,
              105,
              100,
              88,
              82,
              48,
              98,
              50,
              52,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              109,
              53,
              108,
              90,
              50,
              70,
              48,
              97,
              88,
              90,
              108,
              73,
              105,
              66,
              107,
              89,
              88,
              82,
              104,
              76,
              87,
              90,
              107,
              97,
              122,
              48,
              105,
              85,
              122,
              81,
              105,
              73,
              71,
              108,
              107,
              80,
              83,
              74,
              105,
              89,
              87,
              78,
              114,
              73,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              67,
              65,
              103,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              83,
              87,
              53,
              107,
              97,
              87,
              86,
              48,
              99,
              109,
              56,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              105,
              65,
              103,
              73,
              67,
              65,
              56,
              76,
              50,
              74,
              49,
              100,
              72,
              82,
              118,
              98,
              106,
              52,
              75,
              67,
              81,
              111,
              74,
              80,
              71,
              74,
              49,
              100,
              72,
              82,
              118,
              98,
              105,
              66,
              106,
              98,
              71,
              70,
              122,
              99,
              122,
              48,
              105,
              98,
              109,
              86,
              110,
              89,
              88,
              82,
              112,
              100,
              109,
              85,
              105,
              73,
              71,
              108,
              107,
              80,
              83,
              74,
              108,
              101,
              71,
              108,
              48,
              73,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              67,
              65,
              103,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              82,
              88,
              78,
              106,
              97,
              84,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              68,
              119,
              118,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              56,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              73,
              71,
              78,
              115,
              89,
              88,
              78,
              122,
              80,
              83,
              74,
              119,
              98,
              51,
              78,
              112,
              100,
              71,
              108,
              50,
              90,
              83,
              73,
              103,
              90,
              71,
              70,
              48,
              89,
              83,
              49,
              109,
              90,
              71,
              115,
              57,
              73,
              108,
              77,
              52,
              73,
              105,
              66,
              112,
              90,
              68,
              48,
              105,
              89,
              50,
              57,
              117,
              90,
              109,
              108,
              121,
              98,
              83,
              73,
              43,
              67,
              105,
              65,
              103,
              73,
              67,
              65,
              103,
              73,
              68,
              120,
              122,
              99,
              71,
              70,
              117,
              80,
              108,
              66,
              104,
              90,
              50,
              69,
              103,
              73,
              68,
              69,
              120,
              76,
              106,
              85,
              103,
              74,
              105,
              77,
              52,
              77,
              122,
              89,
              48,
              79,
              122,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              67,
              84,
              119,
              118,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              75,
              67,
              103,
              107,
              56,
              76,
              50,
              74,
              118,
              90,
              72,
              107,
              43,
              67,
              103,
              107,
              75,
              80,
              67,
              57,
              111,
              100,
              71,
              49,
              115,
              80,
              103,
              61,
              61,
              34,
              125,
              44,
              34,
              99,
              111,
              109,
              109,
              97,
              110,
              100,
              34,
              58,
              34,
              80,
              82,
              73,
              78,
              84,
              95,
              82,
              69,
              67,
              69,
              73,
              80,
              84,
              34,
              44,
              34,
              98,
              117,
              116,
              116,
              111,
              110,
              115,
              34,
              58,
              91,
              93,
              125,
              44,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              54,
              55,
              56,
              57,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              51,
              54,
              51,
              99,
              99,
              51,
              54,
              100,
              45,
              48,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              79,
              75,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              111,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              32,
              99,
              111,
              109,
              112,
              108,
              101,
              116,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 32,
          "responseSize": 2144
        },
        "id": "22ddde57-c11b-4ffa-8d30-7f03cb6ec97a",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e9515794-37e7-4b7c-b597-370c704b0ef8",
          "length": 10,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "29337230-0af5-4498-ad9e-b044a8baf5ef"
        },
        "item": {
          "id": "2cc2854b-487f-41d8-8280-e8670729fe54",
          "name": "Next - END PROCESS",
          "request": {
            "description": {
              "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "next",
                "trns",
                "00001-12345-0001-64874412-1698769800000-363cc36d-0"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "eef4c226-2479-485e-a5ed-7ffcd17f46f0",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "042f409f-f07b-4a00-aa22-8e06a291f1d1"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00001-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "247836c0-a48f-4a47-828f-6c1311fab0c3",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "680",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "074a8c4a-fa6e-4a53-9eda-b04432d6cc9d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "content-length",
              "value": "139"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              48,
              48,
              48,
              49,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              51,
              54,
              51,
              99,
              99,
              51,
              54,
              100,
              45,
              48,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              69,
              78,
              68,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              105,
              115,
              32,
              116,
              101,
              114,
              109,
              105,
              110,
              97,
              116,
              101,
              100,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 22,
          "responseSize": 139
        },
        "id": "2cc2854b-487f-41d8-8280-e8670729fe54",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "57595685-5457-4296-879c-580f4fa8a24d",
          "length": 10,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0c29f0a7-c6a8-46f6-9337-82657570dc6c"
        },
        "item": {
          "id": "90d7e090-f14a-4eb5-8a2b-037183e8fa71",
          "name": "Next - PROCESSING",
          "request": {
            "description": {
              "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "next",
                "trns",
                "00002-12345-0001-64874412-1698769800000-363cc36d-0"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7c5cb65e-9195-4694-99de-6a133a95bd76",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 202\", function () {",
                  "    pm.response.to.have.status(202);",
                  "});"
                ],
                "_lastExecutionId": "e5217a61-a3b8-4217-937c-68a94faf1f57"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00002-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9df74cc0-53f0-4455-b958-02768adba654",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "680",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "09aa556d-a446-4384-989a-d459f4a5619f",
          "status": "Accepted",
          "code": 202,
          "header": [
            {
              "key": "content-length",
              "value": "155"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              48,
              48,
              48,
              50,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              51,
              54,
              51,
              99,
              99,
              51,
              54,
              100,
              45,
              48,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              80,
              82,
              79,
              67,
              69,
              83,
              83,
              73,
              78,
              71,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              80,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              115,
              116,
              105,
              108,
              108,
              32,
              114,
              117,
              110,
              110,
              105,
              110,
              103,
              44,
              32,
              114,
              101,
              116,
              114,
              121,
              32,
              108,
              97,
              116,
              101,
              114,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 20,
          "responseSize": 155
        },
        "id": "90d7e090-f14a-4eb5-8a2b-037183e8fa71",
        "assertions": [
          {
            "assertion": "Status code is 202",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "3828266b-f4c8-47b9-9090-cbd2e4404351",
          "length": 10,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "300f3105-ed2d-4c88-9c22-4c7c2a436424"
        },
        "item": {
          "id": "3fae4397-2341-4764-a062-10eefe0a603b",
          "name": "Next - ERROR ON PROCESS",
          "request": {
            "description": {
              "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "next",
                "trns",
                "00003-12345-0001-64874412-1698769800000-363cc36d-0"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "18345c97-2450-4035-af65-1577bf517a6d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 209\", function () {",
                  "    pm.response.to.have.status(209);",
                  "});"
                ],
                "_lastExecutionId": "832b8b16-2e75-443c-a255-cba9ccd35c75"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00003-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "12d84c0c-f1f0-489e-864b-4c0042872ada",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "680",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "ce349fcc-3d3a-4c4e-b24b-13f53e08a311",
          "status": "Success (209)",
          "code": 209,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            },
            {
              "key": "content-length",
              "value": "90"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              80,
              82,
              79,
              67,
              69,
              83,
              83,
              95,
              69,
              82,
              82,
              79,
              82,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              69,
              114,
              114,
              111,
              114,
              32,
              119,
              104,
              105,
              108,
              101,
              32,
              114,
              117,
              110,
              110,
              105,
              110,
              103,
              32,
              116,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              50,
              48,
              57,
              125
            ]
          },
          "cookie": [],
          "responseTime": 20,
          "responseSize": 90
        },
        "id": "3fae4397-2341-4764-a062-10eefe0a603b",
        "assertions": [
          {
            "assertion": "Status code is 209",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e1c4e548-ef3b-46a9-9110-535cc4539365",
          "length": 10,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d71fa82a-ff5e-46ac-a08a-18258fe4513a"
        },
        "item": {
          "id": "9fda50a2-fba5-4807-a8b0-286011148baf",
          "name": "Next - EXCEPTION ON PROCESS",
          "request": {
            "description": {
              "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "next",
                "trns",
                "00004-12345-0001-64874412-1698769800000-363cc36d-0"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "70306daf-4df8-48e4-b6c1-ee69f89705d0",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 500\", function () {",
                  "    pm.response.to.have.status(500);",
                  "});"
                ],
                "_lastExecutionId": "c050dc77-5865-4916-8b75-a94321e7ad16"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00004-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "15f6b289-6fd7-4c18-8065-e65812ec6476",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "680",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "c82874dc-75c9-4bc4-9926-9aa1d71afba9",
          "status": "Internal Server Error",
          "code": 500,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            },
            {
              "key": "content-length",
              "value": "80"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              84,
              65,
              83,
              75,
              95,
              69,
              82,
              82,
              79,
              82,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              69,
              114,
              114,
              111,
              114,
              32,
              114,
              101,
              116,
              114,
              105,
              101,
              118,
              101,
              32,
              110,
              101,
              120,
              116,
              32,
              115,
              116,
              101,
              112,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              53,
              48,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 21,
          "responseSize": 80
        },
        "id": "9fda50a2-fba5-4807-a8b0-286011148baf",
        "assertions": [
          {
            "assertion": "Status code is 500",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 5216
    },
    "failures": [],
    "error": null
  }
}