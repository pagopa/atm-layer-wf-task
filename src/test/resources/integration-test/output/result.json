{
  "collection": {
    "_": {
      "postman_id": "14aeea16-40c2-4ae8-bfa9-4015bae6dacd",
      "exporter_id": "25309445"
    },
    "item": [
      {
        "id": "1d1d6d26-f7b1-4edb-b0a9-c148d11e6f33",
        "name": "Start process - CREATED",
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "b5c6b88c-bdd8-4c97-b2d1-776489844e48",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 201\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "81f018f5-342e-4368-b06e-eff7c9ebb48e"
            }
          }
        ]
      },
      {
        "id": "87268681-c858-47c0-9480-1cb9dc0f3652",
        "name": "Start process - END PROCESS",
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "2a367b12-0e3d-4e99-aaed-65cd1df2af50",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "858c7f6d-d993-494b-abbb-ae69862fbded"
            }
          }
        ]
      },
      {
        "id": "118f1b4a-df80-4c48-a523-c22261e0d73c",
        "name": "Start process - PROCESSING",
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "981f94a8-d142-4fa7-9a86-5ca630b7e612",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 202\", function () {",
                "    pm.response.to.have.status(202);",
                "});"
              ],
              "_lastExecutionId": "f17143ed-7855-4137-967e-c7f9a2607b8c"
            }
          }
        ]
      },
      {
        "id": "2edf6d5c-5ca2-483c-aee1-a56ffebc7577",
        "name": "Start process - ERROR ON PROCESS",
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "c419e09e-2643-47d2-8207-ccf2aced6814",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 209\", function () {",
                "    pm.response.to.have.status(209);",
                "});"
              ],
              "_lastExecutionId": "482524bf-1c91-4123-a007-4c48f990dc53"
            }
          }
        ]
      },
      {
        "id": "f58333f5-78d3-46fe-ae8b-045d9aca3557",
        "name": "Start process - EXCEPTION ON PROCESS",
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "ca392eaf-edbb-483d-ac21-1a6d2b89eea7",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 500\", function () {",
                "    pm.response.to.have.status(500);",
                "});"
              ],
              "_lastExecutionId": "1fa03477-f44c-4018-8f44-c20fe3087d4d"
            }
          }
        ]
      },
      {
        "id": "2fe266a8-edd1-45ee-8d1b-7de27bea4c6d",
        "name": "Next - CREATED",
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "06789-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "6afdcd9d-372a-4725-9a26-14c3b12ed904",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 201\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "dbd643ab-baec-4479-b417-b33919fb0f85"
            }
          }
        ]
      },
      {
        "id": "415b98be-6c6d-4d5c-95b7-e565d12075af",
        "name": "Next - END PROCESS",
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00001-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "a41b6172-5051-46fa-bf5c-f463dad3152d",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "95f2acdf-bda1-40ee-8c59-611666b14347"
            }
          }
        ]
      },
      {
        "id": "36b45573-b7a3-4451-a9da-e23089744446",
        "name": "Next - PROCESSING",
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00002-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "82b6d4f1-bc45-4e76-a208-4a4cc9d9721c",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 202\", function () {",
                "    pm.response.to.have.status(202);",
                "});"
              ],
              "_lastExecutionId": "40c09eed-0c95-4166-a9b4-e7408852e81b"
            }
          }
        ]
      },
      {
        "id": "01dc93e5-fa6a-4c7e-b044-8c1df4272a35",
        "name": "Next - ERROR ON PROCESS",
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00003-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "b3c85737-3cb8-466e-b567-a43a255cb4a5",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 209\", function () {",
                "    pm.response.to.have.status(209);",
                "});"
              ],
              "_lastExecutionId": "855aa3e1-e65d-4d56-b507-c7f3cdfe13b7"
            }
          }
        ]
      },
      {
        "id": "1da443a9-bb3c-46dc-bd38-846d83d0fb5b",
        "name": "Next - EXCEPTION ON PROCESS",
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00004-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "61e7d10d-a167-466c-852b-65d7276adf34",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 500\", function () {",
                "    pm.response.to.have.status(500);",
                "});"
              ],
              "_lastExecutionId": "17061a36-1a97-45ff-9841-cb3fba6e5110"
            }
          }
        ]
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "dc4b40e6-04f3-45f7-8867-b58d5ab92ad9",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "fdcc967c-5064-4a0f-9a12-b06c4fe4b50f"
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "c190feaa-4d9e-440a-8d23-7f7023eface3",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "dffb73c2-c3e9-4ca2-89cc-9c8cde8db0bb"
        }
      }
    ],
    "variable": [
      {
        "type": "any",
        "value": "",
        "key": "token"
      },
      {
        "type": "any",
        "value": "https://postman-integration-testing.glitch.me/",
        "key": "baseUrl"
      }
    ],
    "info": {
      "_postman_id": "14aeea16-40c2-4ae8-bfa9-4015bae6dacd",
      "name": "integration_test_task",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "# ⛓️ Get started here\n\nPostman allows you to test your APIs using simple [Javascript code](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/). You can evaluate your response body, headers, cookies, and more using the [ChaiJS BDD](https://www.chaijs.com/api/bdd/) syntax.\n\nThis template guides you through the process of setting up an integration test to ensure that all individual components of an API function together seamlessly.\n\nThe API under test in this collection includes three endpoints for registering and receiving a token, accessing your unique generated name, and unregistering a token:\n\n- POST `/register`\n- POST `/unregister`\n- GET `/my-name`\n    \n\nBy setting up requests in the order of the operation, we can test the flow of data to and from the endpoints and ensure they work together as expected. We also verify that the data persists between requests on the back end.\n\n## 🔖 **How to use this template**\n\n**Step 1:** Check out the requests' documentation to learn more about -\n\n- what each request is meant to do.\n- the tests we've added against each one.\n    \n\n**Step 2:** Run this collection by clicking on \"Run\" or the by using the [Collection Runner](https://learning.postman.com/docs/collections/running-collections/intro-to-collection-runs/).\n\n<img src=\"https://content.pstmn.io/84019b0f-69c8-4c5f-98b9-2c90a6f9a0b1/Y29sbGVjdGlvbi1ydW5uZXItYnV0dG9uLmpwZWc=\" width=\"266\" height=\"103\">\n\n**Step 3:** To customize this template, replace the request URLs with your API endpoints and add or edit the tests if needed.\n\n## 💡Related templates\n\n[Regression testing](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=7ab0f80e-a964-46ee-b948-4a4e3a85809c&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)  \n[Performance testing](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=3302192d-87dd-4612-b381-61894de21203&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)  \n[Contract testing](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=42247877-8529-429d-acba-4de20c3b5b3b&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)  \n[Conditional workflow](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=78475d97-9a36-4731-ab24-9adf6a94d0fb&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)  \n[Mock data generation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=da8ceebc-d4da-478c-ab8a-37634faefc74&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)  \n[Common API vulnerabilities check](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e1edbae8-6429-453d-890e-00385eea1811&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "id": "f3bcabb2-4ca7-4629-b7c5-25a123ab8f91",
    "values": [
      {
        "type": "any",
        "value": "http://host.testcontainers.internal:8086",
        "key": "baseUrl"
      }
    ]
  },
  "globals": {
    "id": "f3fbacf6-1152-4af6-bd59-7b5d6cb78e68",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 30,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 20,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 10,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 61.2,
      "responseMin": 17,
      "responseMax": 397,
      "responseSd": 112.06230409910374,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1721999419937,
      "completed": 1721999420789
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 10,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8df9193f-4b94-46e3-aca3-1cae53b8d88a",
          "httpRequestId": "7c8e3bf7-4157-4ef7-b327-2e52655ebd36"
        },
        "item": {
          "id": "1d1d6d26-f7b1-4edb-b0a9-c148d11e6f33",
          "name": "Start process - CREATED",
          "request": {
            "description": {
              "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "main"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b5c6b88c-bdd8-4c97-b2d1-776489844e48",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ],
                "_lastExecutionId": "81f018f5-342e-4368-b06e-eff7c9ebb48e"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7616126d-294d-4a4c-8886-015d02d7ceec",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "494",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "034aa841-ccd8-43ac-88a1-5460312b8c8a",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "content-length",
              "value": "2112"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              97,
              115,
              107,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              116,
              101,
              115,
              116,
              49,
              34,
              58,
              34,
              100,
              97,
              116,
              97,
              49,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              98,
              108,
              101,
              49,
              34,
              58,
              34,
              49,
              49,
              46,
              53,
              48,
              34,
              44,
              34,
              97,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              101,
              34,
              58,
              34,
              49,
              49,
              46,
              53,
              34,
              44,
              34,
              102,
              101,
              101,
              34,
              58,
              34,
              50,
              46,
              51,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              122,
              105,
              111,
              110,
              101,
              34,
              44,
              34,
              99,
              111,
              109,
              112,
              97,
              110,
              121,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              44,
              34,
              111,
              110,
              69,
              114,
              114,
              111,
              114,
              34,
              58,
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              44,
              34,
              116,
              105,
              109,
              101,
              111,
              117,
              116,
              34,
              58,
              53,
              48,
              44,
              34,
              111,
              110,
              84,
              105,
              109,
              101,
              111,
              117,
              116,
              34,
              58,
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              44,
              34,
              116,
              101,
              109,
              112,
              108,
              97,
              116,
              101,
              34,
              58,
              123,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              68,
              57,
              52,
              98,
              87,
              119,
              103,
              100,
              109,
              86,
              121,
              99,
              50,
              108,
              118,
              98,
              106,
              48,
              105,
              77,
              83,
              52,
              119,
              73,
              105,
              66,
              108,
              98,
              109,
              78,
              118,
              90,
              71,
              108,
              117,
              90,
              122,
              48,
              105,
              97,
              88,
              78,
              118,
              76,
              84,
              103,
              52,
              78,
              84,
              107,
              116,
              77,
              83,
              73,
              47,
              80,
              103,
              111,
              56,
              73,
              85,
              82,
              80,
              81,
              49,
              82,
              90,
              85,
              69,
              85,
              103,
              97,
              72,
              82,
              116,
              98,
              67,
              66,
              81,
              86,
              85,
              74,
              77,
              83,
              85,
              77,
              103,
              73,
              105,
              48,
              118,
              76,
              49,
              99,
              122,
              81,
              121,
              56,
              118,
              82,
              70,
              82,
              69,
              73,
              70,
              104,
              73,
              86,
              69,
              49,
              77,
              73,
              68,
              69,
              117,
              77,
              67,
              66,
              85,
              99,
              109,
              70,
              117,
              99,
              50,
              108,
              48,
              97,
              87,
              57,
              117,
              89,
              87,
              119,
              118,
              76,
              48,
              86,
              79,
              73,
              105,
              65,
              105,
              97,
              72,
              82,
              48,
              99,
              68,
              111,
              118,
              76,
              51,
              100,
              51,
              100,
              121,
              53,
              51,
              77,
              121,
              53,
              118,
              99,
              109,
              99,
              118,
              86,
              70,
              73,
              118,
              101,
              71,
              104,
              48,
              98,
              87,
              119,
              120,
              76,
              48,
              82,
              85,
              82,
              67,
              57,
              52,
              97,
              72,
              82,
              116,
              98,
              68,
              69,
              116,
              100,
              72,
              74,
              104,
              98,
              110,
              78,
              112,
              100,
              71,
              108,
              118,
              98,
              109,
              70,
              115,
              76,
              109,
              82,
              48,
              90,
              67,
              73,
              43,
              67,
              106,
              120,
              111,
              100,
              71,
              49,
              115,
              73,
              72,
              104,
              116,
              98,
              71,
              53,
              122,
              80,
              83,
              74,
              111,
              100,
              72,
              82,
              119,
              79,
              105,
              56,
              118,
              100,
              51,
              100,
              51,
              76,
              110,
              99,
              122,
              76,
              109,
              57,
              121,
              90,
              121,
              56,
              120,
              79,
              84,
              107,
              53,
              76,
              51,
              104,
              111,
              100,
              71,
              49,
              115,
              73,
              106,
              52,
              75,
              80,
              71,
              104,
              108,
              89,
              87,
              81,
              43,
              80,
              71,
              120,
              112,
              98,
              109,
              115,
              103,
              99,
              109,
              86,
              115,
              80,
              83,
              74,
              122,
              100,
              72,
              108,
              115,
              90,
              88,
              78,
              111,
              90,
              87,
              86,
              48,
              73,
              105,
              66,
              111,
              99,
              109,
              86,
              109,
              80,
              83,
              74,
              106,
              99,
              51,
              77,
              118,
              90,
              87,
              49,
              49,
              98,
              71,
              70,
              48,
              98,
              51,
              74,
              108,
              76,
              109,
              78,
              122,
              99,
              121,
              73,
              103,
              76,
              122,
              52,
              56,
              76,
              50,
              104,
              108,
              89,
              87,
              81,
              43,
              67,
              106,
              120,
              105,
              98,
              50,
              82,
              53,
              80,
              103,
              111,
              74,
              80,
              71,
              108,
              116,
              90,
              121,
              66,
              112,
              90,
              68,
              48,
              105,
              98,
              71,
              57,
              110,
              98,
              121,
              73,
              103,
              99,
              51,
              74,
              106,
              80,
              83,
              74,
              111,
              100,
              72,
              82,
              119,
              99,
              122,
              111,
              118,
              76,
              50,
              81,
              121,
              101,
              71,
              82,
              49,
              101,
              84,
              100,
              48,
              89,
              109,
              100,
              49,
              77,
              109,
              81,
              122,
              76,
              109,
              78,
              115,
              98,
              51,
              86,
              107,
              90,
              110,
              74,
              118,
              98,
              110,
              81,
              117,
              98,
              109,
              86,
              48,
              76,
              50,
              90,
              112,
              98,
              71,
              86,
              122,
              76,
              48,
              108,
              68,
              84,
              48,
              52,
              118,
              90,
              71,
              86,
              109,
              89,
              88,
              86,
              115,
              100,
              70,
              57,
              115,
              98,
              50,
              100,
              118,
              76,
              110,
              78,
              50,
              90,
              121,
              73,
              103,
              76,
              122,
              52,
              75,
              67,
              84,
              120,
              111,
              77,
              84,
              53,
              84,
              90,
              88,
              74,
              50,
              97,
              88,
              112,
              112,
              73,
              71,
              82,
              112,
              73,
              72,
              66,
              49,
              89,
              109,
              74,
              115,
              97,
              87,
              78,
              104,
              73,
              72,
              86,
              48,
              97,
              87,
              120,
              112,
              100,
              67,
              89,
              106,
              77,
              106,
              73,
              48,
              79,
              122,
              119,
              118,
              97,
              68,
              69,
              43,
              67,
              81,
              111,
              74,
              67,
              103,
              107,
              56,
              97,
              68,
              73,
              43,
              85,
              109,
              108,
              108,
              99,
              71,
              108,
              115,
              98,
              50,
              100,
              118,
              73,
              71,
              82,
              108,
              98,
              67,
              66,
              119,
              89,
              87,
              100,
              104,
              98,
              87,
              86,
              117,
              100,
              71,
              56,
              56,
              76,
              50,
              103,
              121,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              56,
              100,
              71,
              70,
              105,
              98,
              71,
              85,
              103,
              97,
              87,
              81,
              57,
              73,
              110,
              82,
              104,
              89,
              109,
              120,
              108,
              73,
              106,
              52,
              75,
              67,
              84,
              120,
              48,
              97,
              71,
              86,
              104,
              90,
              68,
              52,
              75,
              67,
              83,
              65,
              56,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              74,
              80,
              72,
              82,
              111,
              80,
              103,
              111,
              74,
              67,
              81,
              107,
              56,
              99,
              51,
              66,
              104,
              98,
              106,
              53,
              66,
              100,
              88,
              74,
              112,
              90,
              50,
              69,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              103,
              107,
              74,
              80,
              67,
              57,
              48,
              97,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              103,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              110,
              74,
              112,
              90,
              50,
              104,
              48,
              73,
              106,
              52,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              77,
              84,
              65,
              119,
              77,
              68,
              65,
              103,
              74,
              105,
              77,
              52,
              77,
              122,
              89,
              48,
              79,
              122,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              67,
              81,
              107,
              56,
              76,
              51,
              82,
              111,
              80,
              103,
              107,
              74,
              67,
              103,
              107,
              103,
              73,
              68,
              119,
              118,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              56,
              76,
              51,
              82,
              111,
              90,
              87,
              70,
              107,
              80,
              103,
              111,
              75,
              67,
              84,
              120,
              48,
              89,
              109,
              57,
              107,
              101,
              84,
              52,
              74,
              67,
              103,
              107,
              103,
              73,
              68,
              120,
              48,
              99,
              106,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              81,
              43,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              81,
              50,
              57,
              116,
              98,
              87,
              108,
              122,
              99,
              50,
              108,
              118,
              98,
              109,
              107,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              81,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              110,
              74,
              112,
              90,
              50,
              104,
              48,
              73,
              106,
              52,
              74,
              67,
              81,
              107,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              77,
              105,
              52,
              122,
              73,
              67,
              89,
              106,
              79,
              68,
              77,
              50,
              78,
              68,
              115,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              103,
              107,
              74,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              74,
              67,
              81,
              111,
              74,
              73,
              67,
              65,
              56,
              76,
              51,
              82,
              121,
              80,
              103,
              107,
              103,
              73,
              65,
              111,
              74,
              73,
              68,
              119,
              118,
              100,
              71,
              74,
              118,
              90,
              72,
              107,
              43,
              67,
              81,
              111,
              74,
              73,
              68,
              120,
              48,
              90,
              109,
              57,
              118,
              100,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              74,
              67,
              84,
              120,
              48,
              90,
              68,
              52,
              56,
              99,
              51,
              66,
              104,
              98,
              105,
              66,
              106,
              98,
              71,
              70,
              122,
              99,
              122,
              48,
              105,
              98,
              71,
              70,
              121,
              90,
              50,
              85,
              105,
              80,
              108,
              82,
              118,
              100,
              71,
              70,
              115,
              90,
              84,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              74,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              82,
              107,
              73,
              71,
              78,
              115,
              89,
              88,
              78,
              122,
              80,
              83,
              74,
              121,
              97,
              87,
              100,
              111,
              100,
              67,
              73,
              43,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              109,
              120,
              104,
              99,
              109,
              100,
              108,
              73,
              106,
              52,
              120,
              77,
              83,
              52,
              49,
              73,
              67,
              89,
              106,
              79,
              68,
              77,
              50,
              78,
              68,
              115,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              74,
              67,
              81,
              111,
              74,
              67,
              84,
              119,
              118,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              103,
              73,
              68,
              119,
              118,
              100,
              71,
              90,
              118,
              98,
              51,
              81,
              43,
              67,
              103,
              111,
              74,
              73,
              65,
              111,
              74,
              80,
              67,
              57,
              48,
              89,
              87,
              74,
              115,
              90,
              84,
              52,
              74,
              67,
              105,
              65,
              75,
              73,
              67,
              65,
              103,
              73,
              68,
              120,
              105,
              100,
              88,
              82,
              48,
              98,
              50,
              52,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              109,
              53,
              108,
              90,
              50,
              70,
              48,
              97,
              88,
              90,
              108,
              73,
              105,
              66,
              107,
              89,
              88,
              82,
              104,
              76,
              87,
              90,
              107,
              97,
              122,
              48,
              105,
              85,
              122,
              81,
              105,
              73,
              71,
              108,
              107,
              80,
              83,
              74,
              105,
              89,
              87,
              78,
              114,
              73,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              67,
              65,
              103,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              83,
              87,
              53,
              107,
              97,
              87,
              86,
              48,
              99,
              109,
              56,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              105,
              65,
              103,
              73,
              67,
              65,
              56,
              76,
              50,
              74,
              49,
              100,
              72,
              82,
              118,
              98,
              106,
              52,
              75,
              67,
              81,
              111,
              74,
              80,
              71,
              74,
              49,
              100,
              72,
              82,
              118,
              98,
              105,
              66,
              106,
              98,
              71,
              70,
              122,
              99,
              122,
              48,
              105,
              98,
              109,
              86,
              110,
              89,
              88,
              82,
              112,
              100,
              109,
              85,
              105,
              73,
              71,
              108,
              107,
              80,
              83,
              74,
              108,
              101,
              71,
              108,
              48,
              73,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              67,
              65,
              103,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              82,
              88,
              78,
              106,
              97,
              84,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              68,
              119,
              118,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              56,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              73,
              71,
              78,
              115,
              89,
              88,
              78,
              122,
              80,
              83,
              74,
              119,
              98,
              51,
              78,
              112,
              100,
              71,
              108,
              50,
              90,
              83,
              73,
              103,
              90,
              71,
              70,
              48,
              89,
              83,
              49,
              109,
              90,
              71,
              115,
              57,
              73,
              108,
              77,
              52,
              73,
              105,
              66,
              112,
              90,
              68,
              48,
              105,
              89,
              50,
              57,
              117,
              90,
              109,
              108,
              121,
              98,
              83,
              73,
              43,
              67,
              105,
              65,
              103,
              73,
              67,
              65,
              103,
              73,
              68,
              120,
              122,
              99,
              71,
              70,
              117,
              80,
              108,
              66,
              104,
              90,
              50,
              69,
              103,
              73,
              68,
              69,
              120,
              76,
              106,
              85,
              103,
              74,
              105,
              77,
              52,
              77,
              122,
              89,
              48,
              79,
              122,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              67,
              84,
              119,
              118,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              75,
              67,
              103,
              107,
              56,
              76,
              50,
              74,
              118,
              90,
              72,
              107,
              43,
              67,
              103,
              107,
              75,
              80,
              67,
              57,
              111,
              100,
              71,
              49,
              115,
              80,
              103,
              61,
              61,
              34,
              125,
              44,
              34,
              99,
              111,
              109,
              109,
              97,
              110,
              100,
              34,
              58,
              34,
              80,
              82,
              73,
              78,
              84,
              95,
              82,
              69,
              67,
              69,
              73,
              80,
              84,
              34,
              44,
              34,
              98,
              117,
              116,
              116,
              111,
              110,
              115,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              98,
              117,
              116,
              116,
              111,
              110,
              49,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              125,
              93,
              125,
              44,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              54,
              55,
              56,
              57,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              56,
              101,
              100,
              99,
              54,
              48,
              99,
              97,
              45,
              101,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              79,
              75,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              111,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              32,
              99,
              111,
              109,
              112,
              108,
              101,
              116,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 397,
          "responseSize": 2112
        },
        "id": "1d1d6d26-f7b1-4edb-b0a9-c148d11e6f33",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b8bd4450-76d0-4645-87fe-18c194a6fade",
          "length": 10,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0a7ed37f-69dd-45ad-a9af-26e3ca4ed983"
        },
        "item": {
          "id": "87268681-c858-47c0-9480-1cb9dc0f3652",
          "name": "Start process - END PROCESS",
          "request": {
            "description": {
              "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "main"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2a367b12-0e3d-4e99-aaed-65cd1df2af50",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "858c7f6d-d993-494b-abbb-ae69862fbded"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c95bf6be-7074-4af6-8919-4df9a81381c4",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "494",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "818af7cc-dcf3-4d93-b33d-cda40ecfeb8d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "content-length",
              "value": "139"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              48,
              48,
              48,
              49,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              57,
              97,
              98,
              101,
              102,
              50,
              52,
              56,
              45,
              50,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              69,
              78,
              68,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              105,
              115,
              32,
              116,
              101,
              114,
              109,
              105,
              110,
              97,
              116,
              101,
              100,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 24,
          "responseSize": 139
        },
        "id": "87268681-c858-47c0-9480-1cb9dc0f3652",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "95d65fec-5ed4-4655-b69d-346fcd9a971a",
          "length": 10,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "40dda388-8cd1-4154-99a8-4bf050f227d7"
        },
        "item": {
          "id": "118f1b4a-df80-4c48-a523-c22261e0d73c",
          "name": "Start process - PROCESSING",
          "request": {
            "description": {
              "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "main"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "981f94a8-d142-4fa7-9a86-5ca630b7e612",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 202\", function () {",
                  "    pm.response.to.have.status(202);",
                  "});"
                ],
                "_lastExecutionId": "f17143ed-7855-4137-967e-c7f9a2607b8c"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d9377cc0-faad-4bae-ab17-7ecc93957a47",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "494",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "e2f85dbf-91c1-4a42-b579-e97eef472153",
          "status": "Accepted",
          "code": 202,
          "header": [
            {
              "key": "content-length",
              "value": "155"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              48,
              48,
              48,
              50,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              97,
              55,
              56,
              97,
              98,
              98,
              49,
              102,
              45,
              49,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              80,
              82,
              79,
              67,
              69,
              83,
              83,
              73,
              78,
              71,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              80,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              115,
              116,
              105,
              108,
              108,
              32,
              114,
              117,
              110,
              110,
              105,
              110,
              103,
              44,
              32,
              114,
              101,
              116,
              114,
              121,
              32,
              108,
              97,
              116,
              101,
              114,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 24,
          "responseSize": 155
        },
        "id": "118f1b4a-df80-4c48-a523-c22261e0d73c",
        "assertions": [
          {
            "assertion": "Status code is 202",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "87b9e6d9-79c5-4939-ae62-b99ef0751580",
          "length": 10,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ea0dc4ca-6f45-4b03-ab60-15400ea97e59"
        },
        "item": {
          "id": "2edf6d5c-5ca2-483c-aee1-a56ffebc7577",
          "name": "Start process - ERROR ON PROCESS",
          "request": {
            "description": {
              "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "main"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c419e09e-2643-47d2-8207-ccf2aced6814",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 209\", function () {",
                  "    pm.response.to.have.status(209);",
                  "});"
                ],
                "_lastExecutionId": "482524bf-1c91-4123-a007-4c48f990dc53"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "96d17aae-41b7-4189-957e-80a360a50e50",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "494",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "c5631228-6e52-4f62-9896-ffb9aa891654",
          "status": "Success (209)",
          "code": 209,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            },
            {
              "key": "content-length",
              "value": "90"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              80,
              82,
              79,
              67,
              69,
              83,
              83,
              95,
              69,
              82,
              82,
              79,
              82,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              69,
              114,
              114,
              111,
              114,
              32,
              119,
              104,
              105,
              108,
              101,
              32,
              114,
              117,
              110,
              110,
              105,
              110,
              103,
              32,
              116,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              50,
              48,
              57,
              125
            ]
          },
          "cookie": [],
          "responseTime": 28,
          "responseSize": 90
        },
        "id": "2edf6d5c-5ca2-483c-aee1-a56ffebc7577",
        "assertions": [
          {
            "assertion": "Status code is 209",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "497d5f9c-584f-4968-a1e4-b1070f33d8ee",
          "length": 10,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f3a9c866-178c-4ca0-9d20-ac9b9779a499"
        },
        "item": {
          "id": "f58333f5-78d3-46fe-ae8b-045d9aca3557",
          "name": "Start process - EXCEPTION ON PROCESS",
          "request": {
            "description": {
              "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "main"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ca392eaf-edbb-483d-ac21-1a6d2b89eea7",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 500\", function () {",
                  "    pm.response.to.have.status(500);",
                  "});"
                ],
                "_lastExecutionId": "1fa03477-f44c-4018-8f44-c20fe3087d4d"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b57f7d34-b5f4-4457-8537-5ca7edaf8fa2",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "494",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "04409af1-b2bc-4a9f-9053-b192509e74eb",
          "status": "Internal Server Error",
          "code": 500,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            },
            {
              "key": "content-length",
              "value": "80"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              84,
              65,
              83,
              75,
              95,
              69,
              82,
              82,
              79,
              82,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              69,
              114,
              114,
              111,
              114,
              32,
              114,
              101,
              116,
              114,
              105,
              101,
              118,
              101,
              32,
              110,
              101,
              120,
              116,
              32,
              115,
              116,
              101,
              112,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              53,
              48,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 25,
          "responseSize": 80
        },
        "id": "f58333f5-78d3-46fe-ae8b-045d9aca3557",
        "assertions": [
          {
            "assertion": "Status code is 500",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1003ca38-1950-496c-800e-8937b0b7e964",
          "length": 10,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e34f0959-7cc0-42a6-8af3-eb4b324d163e"
        },
        "item": {
          "id": "2fe266a8-edd1-45ee-8d1b-7de27bea4c6d",
          "name": "Next - CREATED",
          "request": {
            "description": {
              "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "next",
                "trns",
                "06789-12345-0001-64874412-1698769800000-363cc36d-0"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6afdcd9d-372a-4725-9a26-14c3b12ed904",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ],
                "_lastExecutionId": "dbd643ab-baec-4479-b417-b33919fb0f85"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "06789-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "8ff97903-752a-4adc-9066-fc512cb8fe84",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "680",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "97225473-f59d-4f8c-82f4-26c3a9d1ff85",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "content-length",
              "value": "2112"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              97,
              115,
              107,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              116,
              101,
              115,
              116,
              49,
              34,
              58,
              34,
              100,
              97,
              116,
              97,
              49,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              98,
              108,
              101,
              49,
              34,
              58,
              34,
              49,
              49,
              46,
              53,
              48,
              34,
              44,
              34,
              97,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              101,
              34,
              58,
              34,
              49,
              49,
              46,
              53,
              34,
              44,
              34,
              102,
              101,
              101,
              34,
              58,
              34,
              50,
              46,
              51,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              122,
              105,
              111,
              110,
              101,
              34,
              44,
              34,
              99,
              111,
              109,
              112,
              97,
              110,
              121,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              44,
              34,
              111,
              110,
              69,
              114,
              114,
              111,
              114,
              34,
              58,
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              44,
              34,
              116,
              105,
              109,
              101,
              111,
              117,
              116,
              34,
              58,
              53,
              48,
              44,
              34,
              111,
              110,
              84,
              105,
              109,
              101,
              111,
              117,
              116,
              34,
              58,
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              44,
              34,
              116,
              101,
              109,
              112,
              108,
              97,
              116,
              101,
              34,
              58,
              123,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              68,
              57,
              52,
              98,
              87,
              119,
              103,
              100,
              109,
              86,
              121,
              99,
              50,
              108,
              118,
              98,
              106,
              48,
              105,
              77,
              83,
              52,
              119,
              73,
              105,
              66,
              108,
              98,
              109,
              78,
              118,
              90,
              71,
              108,
              117,
              90,
              122,
              48,
              105,
              97,
              88,
              78,
              118,
              76,
              84,
              103,
              52,
              78,
              84,
              107,
              116,
              77,
              83,
              73,
              47,
              80,
              103,
              111,
              56,
              73,
              85,
              82,
              80,
              81,
              49,
              82,
              90,
              85,
              69,
              85,
              103,
              97,
              72,
              82,
              116,
              98,
              67,
              66,
              81,
              86,
              85,
              74,
              77,
              83,
              85,
              77,
              103,
              73,
              105,
              48,
              118,
              76,
              49,
              99,
              122,
              81,
              121,
              56,
              118,
              82,
              70,
              82,
              69,
              73,
              70,
              104,
              73,
              86,
              69,
              49,
              77,
              73,
              68,
              69,
              117,
              77,
              67,
              66,
              85,
              99,
              109,
              70,
              117,
              99,
              50,
              108,
              48,
              97,
              87,
              57,
              117,
              89,
              87,
              119,
              118,
              76,
              48,
              86,
              79,
              73,
              105,
              65,
              105,
              97,
              72,
              82,
              48,
              99,
              68,
              111,
              118,
              76,
              51,
              100,
              51,
              100,
              121,
              53,
              51,
              77,
              121,
              53,
              118,
              99,
              109,
              99,
              118,
              86,
              70,
              73,
              118,
              101,
              71,
              104,
              48,
              98,
              87,
              119,
              120,
              76,
              48,
              82,
              85,
              82,
              67,
              57,
              52,
              97,
              72,
              82,
              116,
              98,
              68,
              69,
              116,
              100,
              72,
              74,
              104,
              98,
              110,
              78,
              112,
              100,
              71,
              108,
              118,
              98,
              109,
              70,
              115,
              76,
              109,
              82,
              48,
              90,
              67,
              73,
              43,
              67,
              106,
              120,
              111,
              100,
              71,
              49,
              115,
              73,
              72,
              104,
              116,
              98,
              71,
              53,
              122,
              80,
              83,
              74,
              111,
              100,
              72,
              82,
              119,
              79,
              105,
              56,
              118,
              100,
              51,
              100,
              51,
              76,
              110,
              99,
              122,
              76,
              109,
              57,
              121,
              90,
              121,
              56,
              120,
              79,
              84,
              107,
              53,
              76,
              51,
              104,
              111,
              100,
              71,
              49,
              115,
              73,
              106,
              52,
              75,
              80,
              71,
              104,
              108,
              89,
              87,
              81,
              43,
              80,
              71,
              120,
              112,
              98,
              109,
              115,
              103,
              99,
              109,
              86,
              115,
              80,
              83,
              74,
              122,
              100,
              72,
              108,
              115,
              90,
              88,
              78,
              111,
              90,
              87,
              86,
              48,
              73,
              105,
              66,
              111,
              99,
              109,
              86,
              109,
              80,
              83,
              74,
              106,
              99,
              51,
              77,
              118,
              90,
              87,
              49,
              49,
              98,
              71,
              70,
              48,
              98,
              51,
              74,
              108,
              76,
              109,
              78,
              122,
              99,
              121,
              73,
              103,
              76,
              122,
              52,
              56,
              76,
              50,
              104,
              108,
              89,
              87,
              81,
              43,
              67,
              106,
              120,
              105,
              98,
              50,
              82,
              53,
              80,
              103,
              111,
              74,
              80,
              71,
              108,
              116,
              90,
              121,
              66,
              112,
              90,
              68,
              48,
              105,
              98,
              71,
              57,
              110,
              98,
              121,
              73,
              103,
              99,
              51,
              74,
              106,
              80,
              83,
              74,
              111,
              100,
              72,
              82,
              119,
              99,
              122,
              111,
              118,
              76,
              50,
              81,
              121,
              101,
              71,
              82,
              49,
              101,
              84,
              100,
              48,
              89,
              109,
              100,
              49,
              77,
              109,
              81,
              122,
              76,
              109,
              78,
              115,
              98,
              51,
              86,
              107,
              90,
              110,
              74,
              118,
              98,
              110,
              81,
              117,
              98,
              109,
              86,
              48,
              76,
              50,
              90,
              112,
              98,
              71,
              86,
              122,
              76,
              48,
              108,
              68,
              84,
              48,
              52,
              118,
              90,
              71,
              86,
              109,
              89,
              88,
              86,
              115,
              100,
              70,
              57,
              115,
              98,
              50,
              100,
              118,
              76,
              110,
              78,
              50,
              90,
              121,
              73,
              103,
              76,
              122,
              52,
              75,
              67,
              84,
              120,
              111,
              77,
              84,
              53,
              84,
              90,
              88,
              74,
              50,
              97,
              88,
              112,
              112,
              73,
              71,
              82,
              112,
              73,
              72,
              66,
              49,
              89,
              109,
              74,
              115,
              97,
              87,
              78,
              104,
              73,
              72,
              86,
              48,
              97,
              87,
              120,
              112,
              100,
              67,
              89,
              106,
              77,
              106,
              73,
              48,
              79,
              122,
              119,
              118,
              97,
              68,
              69,
              43,
              67,
              81,
              111,
              74,
              67,
              103,
              107,
              56,
              97,
              68,
              73,
              43,
              85,
              109,
              108,
              108,
              99,
              71,
              108,
              115,
              98,
              50,
              100,
              118,
              73,
              71,
              82,
              108,
              98,
              67,
              66,
              119,
              89,
              87,
              100,
              104,
              98,
              87,
              86,
              117,
              100,
              71,
              56,
              56,
              76,
              50,
              103,
              121,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              56,
              100,
              71,
              70,
              105,
              98,
              71,
              85,
              103,
              97,
              87,
              81,
              57,
              73,
              110,
              82,
              104,
              89,
              109,
              120,
              108,
              73,
              106,
              52,
              75,
              67,
              84,
              120,
              48,
              97,
              71,
              86,
              104,
              90,
              68,
              52,
              75,
              67,
              83,
              65,
              56,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              74,
              80,
              72,
              82,
              111,
              80,
              103,
              111,
              74,
              67,
              81,
              107,
              56,
              99,
              51,
              66,
              104,
              98,
              106,
              53,
              66,
              100,
              88,
              74,
              112,
              90,
              50,
              69,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              103,
              107,
              74,
              80,
              67,
              57,
              48,
              97,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              103,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              110,
              74,
              112,
              90,
              50,
              104,
              48,
              73,
              106,
              52,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              77,
              84,
              65,
              119,
              77,
              68,
              65,
              103,
              74,
              105,
              77,
              52,
              77,
              122,
              89,
              48,
              79,
              122,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              67,
              81,
              107,
              56,
              76,
              51,
              82,
              111,
              80,
              103,
              107,
              74,
              67,
              103,
              107,
              103,
              73,
              68,
              119,
              118,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              56,
              76,
              51,
              82,
              111,
              90,
              87,
              70,
              107,
              80,
              103,
              111,
              75,
              67,
              84,
              120,
              48,
              89,
              109,
              57,
              107,
              101,
              84,
              52,
              74,
              67,
              103,
              107,
              103,
              73,
              68,
              120,
              48,
              99,
              106,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              81,
              43,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              81,
              50,
              57,
              116,
              98,
              87,
              108,
              122,
              99,
              50,
              108,
              118,
              98,
              109,
              107,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              81,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              110,
              74,
              112,
              90,
              50,
              104,
              48,
              73,
              106,
              52,
              74,
              67,
              81,
              107,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              77,
              105,
              52,
              122,
              73,
              67,
              89,
              106,
              79,
              68,
              77,
              50,
              78,
              68,
              115,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              103,
              107,
              74,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              74,
              67,
              81,
              111,
              74,
              73,
              67,
              65,
              56,
              76,
              51,
              82,
              121,
              80,
              103,
              107,
              103,
              73,
              65,
              111,
              74,
              73,
              68,
              119,
              118,
              100,
              71,
              74,
              118,
              90,
              72,
              107,
              43,
              67,
              81,
              111,
              74,
              73,
              68,
              120,
              48,
              90,
              109,
              57,
              118,
              100,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              74,
              67,
              84,
              120,
              48,
              90,
              68,
              52,
              56,
              99,
              51,
              66,
              104,
              98,
              105,
              66,
              106,
              98,
              71,
              70,
              122,
              99,
              122,
              48,
              105,
              98,
              71,
              70,
              121,
              90,
              50,
              85,
              105,
              80,
              108,
              82,
              118,
              100,
              71,
              70,
              115,
              90,
              84,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              74,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              82,
              107,
              73,
              71,
              78,
              115,
              89,
              88,
              78,
              122,
              80,
              83,
              74,
              121,
              97,
              87,
              100,
              111,
              100,
              67,
              73,
              43,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              109,
              120,
              104,
              99,
              109,
              100,
              108,
              73,
              106,
              52,
              120,
              77,
              83,
              52,
              49,
              73,
              67,
              89,
              106,
              79,
              68,
              77,
              50,
              78,
              68,
              115,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              74,
              67,
              81,
              111,
              74,
              67,
              84,
              119,
              118,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              103,
              73,
              68,
              119,
              118,
              100,
              71,
              90,
              118,
              98,
              51,
              81,
              43,
              67,
              103,
              111,
              74,
              73,
              65,
              111,
              74,
              80,
              67,
              57,
              48,
              89,
              87,
              74,
              115,
              90,
              84,
              52,
              74,
              67,
              105,
              65,
              75,
              73,
              67,
              65,
              103,
              73,
              68,
              120,
              105,
              100,
              88,
              82,
              48,
              98,
              50,
              52,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              109,
              53,
              108,
              90,
              50,
              70,
              48,
              97,
              88,
              90,
              108,
              73,
              105,
              66,
              107,
              89,
              88,
              82,
              104,
              76,
              87,
              90,
              107,
              97,
              122,
              48,
              105,
              85,
              122,
              81,
              105,
              73,
              71,
              108,
              107,
              80,
              83,
              74,
              105,
              89,
              87,
              78,
              114,
              73,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              67,
              65,
              103,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              83,
              87,
              53,
              107,
              97,
              87,
              86,
              48,
              99,
              109,
              56,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              105,
              65,
              103,
              73,
              67,
              65,
              56,
              76,
              50,
              74,
              49,
              100,
              72,
              82,
              118,
              98,
              106,
              52,
              75,
              67,
              81,
              111,
              74,
              80,
              71,
              74,
              49,
              100,
              72,
              82,
              118,
              98,
              105,
              66,
              106,
              98,
              71,
              70,
              122,
              99,
              122,
              48,
              105,
              98,
              109,
              86,
              110,
              89,
              88,
              82,
              112,
              100,
              109,
              85,
              105,
              73,
              71,
              108,
              107,
              80,
              83,
              74,
              108,
              101,
              71,
              108,
              48,
              73,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              67,
              65,
              103,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              82,
              88,
              78,
              106,
              97,
              84,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              68,
              119,
              118,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              56,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              73,
              71,
              78,
              115,
              89,
              88,
              78,
              122,
              80,
              83,
              74,
              119,
              98,
              51,
              78,
              112,
              100,
              71,
              108,
              50,
              90,
              83,
              73,
              103,
              90,
              71,
              70,
              48,
              89,
              83,
              49,
              109,
              90,
              71,
              115,
              57,
              73,
              108,
              77,
              52,
              73,
              105,
              66,
              112,
              90,
              68,
              48,
              105,
              89,
              50,
              57,
              117,
              90,
              109,
              108,
              121,
              98,
              83,
              73,
              43,
              67,
              105,
              65,
              103,
              73,
              67,
              65,
              103,
              73,
              68,
              120,
              122,
              99,
              71,
              70,
              117,
              80,
              108,
              66,
              104,
              90,
              50,
              69,
              103,
              73,
              68,
              69,
              120,
              76,
              106,
              85,
              103,
              74,
              105,
              77,
              52,
              77,
              122,
              89,
              48,
              79,
              122,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              67,
              84,
              119,
              118,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              75,
              67,
              103,
              107,
              56,
              76,
              50,
              74,
              118,
              90,
              72,
              107,
              43,
              67,
              103,
              107,
              75,
              80,
              67,
              57,
              111,
              100,
              71,
              49,
              115,
              80,
              103,
              61,
              61,
              34,
              125,
              44,
              34,
              99,
              111,
              109,
              109,
              97,
              110,
              100,
              34,
              58,
              34,
              80,
              82,
              73,
              78,
              84,
              95,
              82,
              69,
              67,
              69,
              73,
              80,
              84,
              34,
              44,
              34,
              98,
              117,
              116,
              116,
              111,
              110,
              115,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              98,
              117,
              116,
              116,
              111,
              110,
              49,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              125,
              93,
              125,
              44,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              54,
              55,
              56,
              57,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              51,
              54,
              51,
              99,
              99,
              51,
              54,
              100,
              45,
              48,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              79,
              75,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              111,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              32,
              99,
              111,
              109,
              112,
              108,
              101,
              116,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 37,
          "responseSize": 2112
        },
        "id": "2fe266a8-edd1-45ee-8d1b-7de27bea4c6d",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "3e0083f6-6723-4b6b-a4c0-46c10289cc03",
          "length": 10,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "13db03c8-7db2-4f5e-9207-889bfbdb399c"
        },
        "item": {
          "id": "415b98be-6c6d-4d5c-95b7-e565d12075af",
          "name": "Next - END PROCESS",
          "request": {
            "description": {
              "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "next",
                "trns",
                "00001-12345-0001-64874412-1698769800000-363cc36d-0"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a41b6172-5051-46fa-bf5c-f463dad3152d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "95f2acdf-bda1-40ee-8c59-611666b14347"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00001-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "079445bf-b581-4e2d-8276-2bedfa9599fa",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "680",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "2c89d3f4-7616-4c54-8325-686356005c1a",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "content-length",
              "value": "139"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              48,
              48,
              48,
              49,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              51,
              54,
              51,
              99,
              99,
              51,
              54,
              100,
              45,
              48,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              69,
              78,
              68,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              105,
              115,
              32,
              116,
              101,
              114,
              109,
              105,
              110,
              97,
              116,
              101,
              100,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 22,
          "responseSize": 139
        },
        "id": "415b98be-6c6d-4d5c-95b7-e565d12075af",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "3b112c68-3bd3-4f52-a267-5316be55dde1",
          "length": 10,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1dd8454d-3e1f-47c6-a22c-0f746a63b00b"
        },
        "item": {
          "id": "36b45573-b7a3-4451-a9da-e23089744446",
          "name": "Next - PROCESSING",
          "request": {
            "description": {
              "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "next",
                "trns",
                "00002-12345-0001-64874412-1698769800000-363cc36d-0"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "82b6d4f1-bc45-4e76-a208-4a4cc9d9721c",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 202\", function () {",
                  "    pm.response.to.have.status(202);",
                  "});"
                ],
                "_lastExecutionId": "40c09eed-0c95-4166-a9b4-e7408852e81b"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00002-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "eefc026c-3878-4d9e-8ffd-ee63eb974161",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "680",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "e03aa2e3-f021-4a1b-8440-8a07d06758f4",
          "status": "Accepted",
          "code": 202,
          "header": [
            {
              "key": "content-length",
              "value": "155"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              48,
              48,
              48,
              50,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              51,
              54,
              51,
              99,
              99,
              51,
              54,
              100,
              45,
              48,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              80,
              82,
              79,
              67,
              69,
              83,
              83,
              73,
              78,
              71,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              80,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              115,
              116,
              105,
              108,
              108,
              32,
              114,
              117,
              110,
              110,
              105,
              110,
              103,
              44,
              32,
              114,
              101,
              116,
              114,
              121,
              32,
              108,
              97,
              116,
              101,
              114,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 17,
          "responseSize": 155
        },
        "id": "36b45573-b7a3-4451-a9da-e23089744446",
        "assertions": [
          {
            "assertion": "Status code is 202",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2099864b-10bc-4020-bb41-1ee5b7d7ea7a",
          "length": 10,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b904588a-f891-40dc-9817-c47f9a9633a8"
        },
        "item": {
          "id": "01dc93e5-fa6a-4c7e-b044-8c1df4272a35",
          "name": "Next - ERROR ON PROCESS",
          "request": {
            "description": {
              "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "next",
                "trns",
                "00003-12345-0001-64874412-1698769800000-363cc36d-0"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b3c85737-3cb8-466e-b567-a43a255cb4a5",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 209\", function () {",
                  "    pm.response.to.have.status(209);",
                  "});"
                ],
                "_lastExecutionId": "855aa3e1-e65d-4d56-b507-c7f3cdfe13b7"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00003-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "17f848eb-4565-4cf6-9102-247b91d1d35f",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "680",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "19ca4890-9efe-4644-915a-fd3c197e3a7a",
          "status": "Success (209)",
          "code": 209,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            },
            {
              "key": "content-length",
              "value": "90"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              80,
              82,
              79,
              67,
              69,
              83,
              83,
              95,
              69,
              82,
              82,
              79,
              82,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              69,
              114,
              114,
              111,
              114,
              32,
              119,
              104,
              105,
              108,
              101,
              32,
              114,
              117,
              110,
              110,
              105,
              110,
              103,
              32,
              116,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              50,
              48,
              57,
              125
            ]
          },
          "cookie": [],
          "responseTime": 19,
          "responseSize": 90
        },
        "id": "01dc93e5-fa6a-4c7e-b044-8c1df4272a35",
        "assertions": [
          {
            "assertion": "Status code is 209",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2f19496e-81b5-4b9b-8c41-94626a66c15f",
          "length": 10,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "77d50d21-3e78-4c28-8da6-443c63e91cec"
        },
        "item": {
          "id": "1da443a9-bb3c-46dc-bd38-846d83d0fb5b",
          "name": "Next - EXCEPTION ON PROCESS",
          "request": {
            "description": {
              "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "next",
                "trns",
                "00004-12345-0001-64874412-1698769800000-363cc36d-0"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "61e7d10d-a167-466c-852b-65d7276adf34",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 500\", function () {",
                  "    pm.response.to.have.status(500);",
                  "});"
                ],
                "_lastExecutionId": "17061a36-1a97-45ff-9841-cb3fba6e5110"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00004-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "bd0a8980-e605-40d0-aa31-96b0f35925c2",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "680",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "46e6a2c4-123a-4424-9c5d-18b7723ce39b",
          "status": "Internal Server Error",
          "code": 500,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            },
            {
              "key": "content-length",
              "value": "80"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              84,
              65,
              83,
              75,
              95,
              69,
              82,
              82,
              79,
              82,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              69,
              114,
              114,
              111,
              114,
              32,
              114,
              101,
              116,
              114,
              105,
              101,
              118,
              101,
              32,
              110,
              101,
              120,
              116,
              32,
              115,
              116,
              101,
              112,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              53,
              48,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 19,
          "responseSize": 80
        },
        "id": "1da443a9-bb3c-46dc-bd38-846d83d0fb5b",
        "assertions": [
          {
            "assertion": "Status code is 500",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 5152
    },
    "failures": [],
    "error": null
  }
}