{
  "collection": {
    "_": {
      "postman_id": "14aeea16-40c2-4ae8-bfa9-4015bae6dacd",
      "exporter_id": "25309445"
    },
    "item": [
      {
        "id": "e8d195a1-5403-46f4-9fa8-1d2e9f50ce2c",
        "name": "Start process - CREATED",
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "68637114-bd4c-4a03-a9aa-8f4b2371cf36",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 201\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "4f656bec-4138-4a52-9c3c-adfc3ce2369a"
            }
          }
        ]
      },
      {
        "id": "e4f94ed8-3841-40e0-b2bb-b222df8d6a08",
        "name": "Start process - END PROCESS",
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "41663c1d-38ac-4233-9dbd-7153d450ca84",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "5f1ee2ad-00f5-4145-a936-f9deb4e9d4af"
            }
          }
        ]
      },
      {
        "id": "179984a4-3c74-486e-9036-26a73808edfc",
        "name": "Start process - PROCESSING",
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "47a22494-2091-4b16-9760-394f25d43373",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 202\", function () {",
                "    pm.response.to.have.status(202);",
                "});"
              ],
              "_lastExecutionId": "1425e9ea-a378-4194-ae9d-0f4d4cba7f0f"
            }
          }
        ]
      },
      {
        "id": "c25835ab-75f1-44a7-b289-1be78c609eb1",
        "name": "Start process - ERROR ON PROCESS",
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "1b4704a5-3a89-4f14-a3f9-67bf819e2148",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 209\", function () {",
                "    pm.response.to.have.status(209);",
                "});"
              ],
              "_lastExecutionId": "2e93f9fa-4fcb-47e6-be12-4e5250fdbf1c"
            }
          }
        ]
      },
      {
        "id": "ebbd7e36-37dc-4a4b-9298-fd2f9b7f3731",
        "name": "Start process - EXCEPTION ON PROCESS",
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "150e1041-001d-4f1b-ac09-e5527775a899",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 500\", function () {",
                "    pm.response.to.have.status(500);",
                "});"
              ],
              "_lastExecutionId": "8ff27060-dc10-44fd-a926-36049ec95f7f"
            }
          }
        ]
      },
      {
        "id": "eb35dd93-36c9-43a2-9517-912ad546631c",
        "name": "Next - CREATED",
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "06789-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f545391b-9127-4998-a72d-2e721f6b5f7b",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 201\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "38eb4986-2033-4954-a42f-6cc1a6459bb8"
            }
          }
        ]
      },
      {
        "id": "a6bc31a3-83f5-4af5-87ba-85187103921d",
        "name": "Next - END PROCESS",
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00001-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "a77e3843-97ae-42e0-8cfc-b010552dec80",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "475b4a94-4b14-49f2-8519-d452f54e38d5"
            }
          }
        ]
      },
      {
        "id": "540b3c69-61ae-488f-9983-3d3df8afef51",
        "name": "Next - PROCESSING",
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00002-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f4117c02-77f4-4976-a049-1f34361da69e",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 202\", function () {",
                "    pm.response.to.have.status(202);",
                "});"
              ],
              "_lastExecutionId": "a567bb16-1e8b-4d91-82c1-0decbe56a9a8"
            }
          }
        ]
      },
      {
        "id": "bfed0593-c0d6-4a40-a452-79d978c1a328",
        "name": "Next - ERROR ON PROCESS",
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00003-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "1ead01d4-841d-47e4-903d-5249bb035fa0",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 209\", function () {",
                "    pm.response.to.have.status(209);",
                "});"
              ],
              "_lastExecutionId": "a47cc24b-b8c4-4693-a2c5-b18e52fd448c"
            }
          }
        ]
      },
      {
        "id": "d09aa8a1-8beb-4b86-8055-f7910fc9ecd0",
        "name": "Next - EXCEPTION ON PROCESS",
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00004-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "5d5e2a3a-de6a-4b6f-bfeb-89e03d31eda9",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 500\", function () {",
                "    pm.response.to.have.status(500);",
                "});"
              ],
              "_lastExecutionId": "f2c7038e-2f5c-4a2e-831f-90c13b421d90"
            }
          }
        ]
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "a28d94ff-7107-404b-bdbc-0a2282f065a5",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "4b793b59-eab9-4140-ada5-ab6231ea57d0"
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "2d4fe054-f069-49d9-8c85-decee0db397e",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "45e2db22-54eb-4617-9ef6-8386caf06795"
        }
      }
    ],
    "variable": [
      {
        "type": "any",
        "value": "",
        "key": "token"
      },
      {
        "type": "any",
        "value": "https://postman-integration-testing.glitch.me/",
        "key": "baseUrl"
      }
    ],
    "info": {
      "_postman_id": "14aeea16-40c2-4ae8-bfa9-4015bae6dacd",
      "name": "integration_test_task",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "# ⛓️ Get started here\n\nPostman allows you to test your APIs using simple [Javascript code](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/). You can evaluate your response body, headers, cookies, and more using the [ChaiJS BDD](https://www.chaijs.com/api/bdd/) syntax.\n\nThis template guides you through the process of setting up an integration test to ensure that all individual components of an API function together seamlessly.\n\nThe API under test in this collection includes three endpoints for registering and receiving a token, accessing your unique generated name, and unregistering a token:\n\n- POST `/register`\n- POST `/unregister`\n- GET `/my-name`\n    \n\nBy setting up requests in the order of the operation, we can test the flow of data to and from the endpoints and ensure they work together as expected. We also verify that the data persists between requests on the back end.\n\n## 🔖 **How to use this template**\n\n**Step 1:** Check out the requests' documentation to learn more about -\n\n- what each request is meant to do.\n- the tests we've added against each one.\n    \n\n**Step 2:** Run this collection by clicking on \"Run\" or the by using the [Collection Runner](https://learning.postman.com/docs/collections/running-collections/intro-to-collection-runs/).\n\n<img src=\"https://content.pstmn.io/84019b0f-69c8-4c5f-98b9-2c90a6f9a0b1/Y29sbGVjdGlvbi1ydW5uZXItYnV0dG9uLmpwZWc=\" width=\"266\" height=\"103\">\n\n**Step 3:** To customize this template, replace the request URLs with your API endpoints and add or edit the tests if needed.\n\n## 💡Related templates\n\n[Regression testing](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=7ab0f80e-a964-46ee-b948-4a4e3a85809c&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)  \n[Performance testing](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=3302192d-87dd-4612-b381-61894de21203&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)  \n[Contract testing](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=42247877-8529-429d-acba-4de20c3b5b3b&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)  \n[Conditional workflow](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=78475d97-9a36-4731-ab24-9adf6a94d0fb&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)  \n[Mock data generation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=da8ceebc-d4da-478c-ab8a-37634faefc74&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)  \n[Common API vulnerabilities check](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e1edbae8-6429-453d-890e-00385eea1811&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "id": "47a89856-930f-4c49-89a1-94182362ab17",
    "values": [
      {
        "type": "any",
        "value": "http://host.testcontainers.internal:8086",
        "key": "baseUrl"
      }
    ]
  },
  "globals": {
    "id": "e0b3c912-be36-4429-8bcb-6dbc5b07803a",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 30,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 20,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 10,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 54.7,
      "responseMin": 16,
      "responseMax": 363,
      "responseSd": 102.9155479021513,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1722519160744,
      "completed": 1722519161536
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 10,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2359d056-87b7-4c02-811b-9a480a8ca5ae",
          "httpRequestId": "0e19b11e-1b3d-4124-ad24-569f2f3751a2"
        },
        "item": {
          "id": "e8d195a1-5403-46f4-9fa8-1d2e9f50ce2c",
          "name": "Start process - CREATED",
          "request": {
            "description": {
              "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "main"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "68637114-bd4c-4a03-a9aa-8f4b2371cf36",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ],
                "_lastExecutionId": "4f656bec-4138-4a52-9c3c-adfc3ce2369a"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ccd249de-f41d-4457-a2d9-296eabc41217",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "494",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "476b5eea-108d-4ec5-8602-8412cc2a4b3c",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "content-length",
              "value": "2112"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              97,
              115,
              107,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              116,
              101,
              115,
              116,
              49,
              34,
              58,
              34,
              100,
              97,
              116,
              97,
              49,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              98,
              108,
              101,
              49,
              34,
              58,
              34,
              49,
              49,
              46,
              53,
              48,
              34,
              44,
              34,
              97,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              101,
              34,
              58,
              34,
              49,
              49,
              46,
              53,
              34,
              44,
              34,
              102,
              101,
              101,
              34,
              58,
              34,
              50,
              46,
              51,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              122,
              105,
              111,
              110,
              101,
              34,
              44,
              34,
              99,
              111,
              109,
              112,
              97,
              110,
              121,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              44,
              34,
              111,
              110,
              69,
              114,
              114,
              111,
              114,
              34,
              58,
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              44,
              34,
              116,
              105,
              109,
              101,
              111,
              117,
              116,
              34,
              58,
              53,
              48,
              44,
              34,
              111,
              110,
              84,
              105,
              109,
              101,
              111,
              117,
              116,
              34,
              58,
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              44,
              34,
              116,
              101,
              109,
              112,
              108,
              97,
              116,
              101,
              34,
              58,
              123,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              68,
              57,
              52,
              98,
              87,
              119,
              103,
              100,
              109,
              86,
              121,
              99,
              50,
              108,
              118,
              98,
              106,
              48,
              105,
              77,
              83,
              52,
              119,
              73,
              105,
              66,
              108,
              98,
              109,
              78,
              118,
              90,
              71,
              108,
              117,
              90,
              122,
              48,
              105,
              97,
              88,
              78,
              118,
              76,
              84,
              103,
              52,
              78,
              84,
              107,
              116,
              77,
              83,
              73,
              47,
              80,
              103,
              111,
              56,
              73,
              85,
              82,
              80,
              81,
              49,
              82,
              90,
              85,
              69,
              85,
              103,
              97,
              72,
              82,
              116,
              98,
              67,
              66,
              81,
              86,
              85,
              74,
              77,
              83,
              85,
              77,
              103,
              73,
              105,
              48,
              118,
              76,
              49,
              99,
              122,
              81,
              121,
              56,
              118,
              82,
              70,
              82,
              69,
              73,
              70,
              104,
              73,
              86,
              69,
              49,
              77,
              73,
              68,
              69,
              117,
              77,
              67,
              66,
              85,
              99,
              109,
              70,
              117,
              99,
              50,
              108,
              48,
              97,
              87,
              57,
              117,
              89,
              87,
              119,
              118,
              76,
              48,
              86,
              79,
              73,
              105,
              65,
              105,
              97,
              72,
              82,
              48,
              99,
              68,
              111,
              118,
              76,
              51,
              100,
              51,
              100,
              121,
              53,
              51,
              77,
              121,
              53,
              118,
              99,
              109,
              99,
              118,
              86,
              70,
              73,
              118,
              101,
              71,
              104,
              48,
              98,
              87,
              119,
              120,
              76,
              48,
              82,
              85,
              82,
              67,
              57,
              52,
              97,
              72,
              82,
              116,
              98,
              68,
              69,
              116,
              100,
              72,
              74,
              104,
              98,
              110,
              78,
              112,
              100,
              71,
              108,
              118,
              98,
              109,
              70,
              115,
              76,
              109,
              82,
              48,
              90,
              67,
              73,
              43,
              67,
              106,
              120,
              111,
              100,
              71,
              49,
              115,
              73,
              72,
              104,
              116,
              98,
              71,
              53,
              122,
              80,
              83,
              74,
              111,
              100,
              72,
              82,
              119,
              79,
              105,
              56,
              118,
              100,
              51,
              100,
              51,
              76,
              110,
              99,
              122,
              76,
              109,
              57,
              121,
              90,
              121,
              56,
              120,
              79,
              84,
              107,
              53,
              76,
              51,
              104,
              111,
              100,
              71,
              49,
              115,
              73,
              106,
              52,
              75,
              80,
              71,
              104,
              108,
              89,
              87,
              81,
              43,
              80,
              71,
              120,
              112,
              98,
              109,
              115,
              103,
              99,
              109,
              86,
              115,
              80,
              83,
              74,
              122,
              100,
              72,
              108,
              115,
              90,
              88,
              78,
              111,
              90,
              87,
              86,
              48,
              73,
              105,
              66,
              111,
              99,
              109,
              86,
              109,
              80,
              83,
              74,
              106,
              99,
              51,
              77,
              118,
              90,
              87,
              49,
              49,
              98,
              71,
              70,
              48,
              98,
              51,
              74,
              108,
              76,
              109,
              78,
              122,
              99,
              121,
              73,
              103,
              76,
              122,
              52,
              56,
              76,
              50,
              104,
              108,
              89,
              87,
              81,
              43,
              67,
              106,
              120,
              105,
              98,
              50,
              82,
              53,
              80,
              103,
              111,
              74,
              80,
              71,
              108,
              116,
              90,
              121,
              66,
              112,
              90,
              68,
              48,
              105,
              98,
              71,
              57,
              110,
              98,
              121,
              73,
              103,
              99,
              51,
              74,
              106,
              80,
              83,
              74,
              111,
              100,
              72,
              82,
              119,
              99,
              122,
              111,
              118,
              76,
              50,
              81,
              121,
              101,
              71,
              82,
              49,
              101,
              84,
              100,
              48,
              89,
              109,
              100,
              49,
              77,
              109,
              81,
              122,
              76,
              109,
              78,
              115,
              98,
              51,
              86,
              107,
              90,
              110,
              74,
              118,
              98,
              110,
              81,
              117,
              98,
              109,
              86,
              48,
              76,
              50,
              90,
              112,
              98,
              71,
              86,
              122,
              76,
              48,
              108,
              68,
              84,
              48,
              52,
              118,
              90,
              71,
              86,
              109,
              89,
              88,
              86,
              115,
              100,
              70,
              57,
              115,
              98,
              50,
              100,
              118,
              76,
              110,
              78,
              50,
              90,
              121,
              73,
              103,
              76,
              122,
              52,
              75,
              67,
              84,
              120,
              111,
              77,
              84,
              53,
              84,
              90,
              88,
              74,
              50,
              97,
              88,
              112,
              112,
              73,
              71,
              82,
              112,
              73,
              72,
              66,
              49,
              89,
              109,
              74,
              115,
              97,
              87,
              78,
              104,
              73,
              72,
              86,
              48,
              97,
              87,
              120,
              112,
              100,
              67,
              89,
              106,
              77,
              106,
              73,
              48,
              79,
              122,
              119,
              118,
              97,
              68,
              69,
              43,
              67,
              81,
              111,
              74,
              67,
              103,
              107,
              56,
              97,
              68,
              73,
              43,
              85,
              109,
              108,
              108,
              99,
              71,
              108,
              115,
              98,
              50,
              100,
              118,
              73,
              71,
              82,
              108,
              98,
              67,
              66,
              119,
              89,
              87,
              100,
              104,
              98,
              87,
              86,
              117,
              100,
              71,
              56,
              56,
              76,
              50,
              103,
              121,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              56,
              100,
              71,
              70,
              105,
              98,
              71,
              85,
              103,
              97,
              87,
              81,
              57,
              73,
              110,
              82,
              104,
              89,
              109,
              120,
              108,
              73,
              106,
              52,
              75,
              67,
              84,
              120,
              48,
              97,
              71,
              86,
              104,
              90,
              68,
              52,
              75,
              67,
              83,
              65,
              56,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              74,
              80,
              72,
              82,
              111,
              80,
              103,
              111,
              74,
              67,
              81,
              107,
              56,
              99,
              51,
              66,
              104,
              98,
              106,
              53,
              66,
              100,
              88,
              74,
              112,
              90,
              50,
              69,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              103,
              107,
              74,
              80,
              67,
              57,
              48,
              97,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              103,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              110,
              74,
              112,
              90,
              50,
              104,
              48,
              73,
              106,
              52,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              77,
              84,
              65,
              119,
              77,
              68,
              65,
              103,
              74,
              105,
              77,
              52,
              77,
              122,
              89,
              48,
              79,
              122,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              67,
              81,
              107,
              56,
              76,
              51,
              82,
              111,
              80,
              103,
              107,
              74,
              67,
              103,
              107,
              103,
              73,
              68,
              119,
              118,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              56,
              76,
              51,
              82,
              111,
              90,
              87,
              70,
              107,
              80,
              103,
              111,
              75,
              67,
              84,
              120,
              48,
              89,
              109,
              57,
              107,
              101,
              84,
              52,
              74,
              67,
              103,
              107,
              103,
              73,
              68,
              120,
              48,
              99,
              106,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              81,
              43,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              81,
              50,
              57,
              116,
              98,
              87,
              108,
              122,
              99,
              50,
              108,
              118,
              98,
              109,
              107,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              81,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              110,
              74,
              112,
              90,
              50,
              104,
              48,
              73,
              106,
              52,
              74,
              67,
              81,
              107,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              77,
              105,
              52,
              122,
              73,
              67,
              89,
              106,
              79,
              68,
              77,
              50,
              78,
              68,
              115,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              103,
              107,
              74,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              74,
              67,
              81,
              111,
              74,
              73,
              67,
              65,
              56,
              76,
              51,
              82,
              121,
              80,
              103,
              107,
              103,
              73,
              65,
              111,
              74,
              73,
              68,
              119,
              118,
              100,
              71,
              74,
              118,
              90,
              72,
              107,
              43,
              67,
              81,
              111,
              74,
              73,
              68,
              120,
              48,
              90,
              109,
              57,
              118,
              100,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              74,
              67,
              84,
              120,
              48,
              90,
              68,
              52,
              56,
              99,
              51,
              66,
              104,
              98,
              105,
              66,
              106,
              98,
              71,
              70,
              122,
              99,
              122,
              48,
              105,
              98,
              71,
              70,
              121,
              90,
              50,
              85,
              105,
              80,
              108,
              82,
              118,
              100,
              71,
              70,
              115,
              90,
              84,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              74,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              82,
              107,
              73,
              71,
              78,
              115,
              89,
              88,
              78,
              122,
              80,
              83,
              74,
              121,
              97,
              87,
              100,
              111,
              100,
              67,
              73,
              43,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              109,
              120,
              104,
              99,
              109,
              100,
              108,
              73,
              106,
              52,
              120,
              77,
              83,
              52,
              49,
              73,
              67,
              89,
              106,
              79,
              68,
              77,
              50,
              78,
              68,
              115,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              74,
              67,
              81,
              111,
              74,
              67,
              84,
              119,
              118,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              103,
              73,
              68,
              119,
              118,
              100,
              71,
              90,
              118,
              98,
              51,
              81,
              43,
              67,
              103,
              111,
              74,
              73,
              65,
              111,
              74,
              80,
              67,
              57,
              48,
              89,
              87,
              74,
              115,
              90,
              84,
              52,
              74,
              67,
              105,
              65,
              75,
              73,
              67,
              65,
              103,
              73,
              68,
              120,
              105,
              100,
              88,
              82,
              48,
              98,
              50,
              52,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              109,
              53,
              108,
              90,
              50,
              70,
              48,
              97,
              88,
              90,
              108,
              73,
              105,
              66,
              107,
              89,
              88,
              82,
              104,
              76,
              87,
              90,
              107,
              97,
              122,
              48,
              105,
              85,
              122,
              81,
              105,
              73,
              71,
              108,
              107,
              80,
              83,
              74,
              105,
              89,
              87,
              78,
              114,
              73,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              67,
              65,
              103,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              83,
              87,
              53,
              107,
              97,
              87,
              86,
              48,
              99,
              109,
              56,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              105,
              65,
              103,
              73,
              67,
              65,
              56,
              76,
              50,
              74,
              49,
              100,
              72,
              82,
              118,
              98,
              106,
              52,
              75,
              67,
              81,
              111,
              74,
              80,
              71,
              74,
              49,
              100,
              72,
              82,
              118,
              98,
              105,
              66,
              106,
              98,
              71,
              70,
              122,
              99,
              122,
              48,
              105,
              98,
              109,
              86,
              110,
              89,
              88,
              82,
              112,
              100,
              109,
              85,
              105,
              73,
              71,
              108,
              107,
              80,
              83,
              74,
              108,
              101,
              71,
              108,
              48,
              73,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              67,
              65,
              103,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              82,
              88,
              78,
              106,
              97,
              84,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              68,
              119,
              118,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              56,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              73,
              71,
              78,
              115,
              89,
              88,
              78,
              122,
              80,
              83,
              74,
              119,
              98,
              51,
              78,
              112,
              100,
              71,
              108,
              50,
              90,
              83,
              73,
              103,
              90,
              71,
              70,
              48,
              89,
              83,
              49,
              109,
              90,
              71,
              115,
              57,
              73,
              108,
              77,
              52,
              73,
              105,
              66,
              112,
              90,
              68,
              48,
              105,
              89,
              50,
              57,
              117,
              90,
              109,
              108,
              121,
              98,
              83,
              73,
              43,
              67,
              105,
              65,
              103,
              73,
              67,
              65,
              103,
              73,
              68,
              120,
              122,
              99,
              71,
              70,
              117,
              80,
              108,
              66,
              104,
              90,
              50,
              69,
              103,
              73,
              68,
              69,
              120,
              76,
              106,
              85,
              103,
              74,
              105,
              77,
              52,
              77,
              122,
              89,
              48,
              79,
              122,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              67,
              84,
              119,
              118,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              75,
              67,
              103,
              107,
              56,
              76,
              50,
              74,
              118,
              90,
              72,
              107,
              43,
              67,
              103,
              107,
              75,
              80,
              67,
              57,
              111,
              100,
              71,
              49,
              115,
              80,
              103,
              61,
              61,
              34,
              125,
              44,
              34,
              99,
              111,
              109,
              109,
              97,
              110,
              100,
              34,
              58,
              34,
              80,
              82,
              73,
              78,
              84,
              95,
              82,
              69,
              67,
              69,
              73,
              80,
              84,
              34,
              44,
              34,
              98,
              117,
              116,
              116,
              111,
              110,
              115,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              98,
              117,
              116,
              116,
              111,
              110,
              49,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              125,
              93,
              125,
              44,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              54,
              55,
              56,
              57,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              99,
              52,
              101,
              98,
              49,
              54,
              54,
              54,
              45,
              55,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              79,
              75,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              111,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              32,
              99,
              111,
              109,
              112,
              108,
              101,
              116,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 363,
          "responseSize": 2112
        },
        "id": "e8d195a1-5403-46f4-9fa8-1d2e9f50ce2c",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0188a352-2b18-4a4c-b565-8d5f56d44924",
          "length": 10,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c264d630-4ee1-4ece-901b-62e508212125"
        },
        "item": {
          "id": "e4f94ed8-3841-40e0-b2bb-b222df8d6a08",
          "name": "Start process - END PROCESS",
          "request": {
            "description": {
              "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "main"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "41663c1d-38ac-4233-9dbd-7153d450ca84",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "5f1ee2ad-00f5-4145-a936-f9deb4e9d4af"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ea1075b2-bd56-48ec-94c7-0b38182b7604",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "494",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "70946ec0-87c0-4c88-b854-f4ffa62bdb6d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "content-length",
              "value": "139"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              48,
              48,
              48,
              49,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              50,
              53,
              57,
              100,
              99,
              97,
              54,
              56,
              45,
              56,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              69,
              78,
              68,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              105,
              115,
              32,
              116,
              101,
              114,
              109,
              105,
              110,
              97,
              116,
              101,
              100,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 20,
          "responseSize": 139
        },
        "id": "e4f94ed8-3841-40e0-b2bb-b222df8d6a08",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "164e5002-034a-4664-9770-c60a701d58c0",
          "length": 10,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "667dad94-c74d-4422-b1c2-01c340c36218"
        },
        "item": {
          "id": "179984a4-3c74-486e-9036-26a73808edfc",
          "name": "Start process - PROCESSING",
          "request": {
            "description": {
              "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "main"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "47a22494-2091-4b16-9760-394f25d43373",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 202\", function () {",
                  "    pm.response.to.have.status(202);",
                  "});"
                ],
                "_lastExecutionId": "1425e9ea-a378-4194-ae9d-0f4d4cba7f0f"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3286b099-a904-4cee-a6f0-a757ab8d5059",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "494",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "6b0477fe-bddf-472b-ac33-587d1677fc4e",
          "status": "Accepted",
          "code": 202,
          "header": [
            {
              "key": "content-length",
              "value": "155"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              48,
              48,
              48,
              50,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              52,
              50,
              52,
              52,
              49,
              98,
              101,
              51,
              45,
              54,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              80,
              82,
              79,
              67,
              69,
              83,
              83,
              73,
              78,
              71,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              80,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              115,
              116,
              105,
              108,
              108,
              32,
              114,
              117,
              110,
              110,
              105,
              110,
              103,
              44,
              32,
              114,
              101,
              116,
              114,
              121,
              32,
              108,
              97,
              116,
              101,
              114,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 19,
          "responseSize": 155
        },
        "id": "179984a4-3c74-486e-9036-26a73808edfc",
        "assertions": [
          {
            "assertion": "Status code is 202",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "972760ed-1981-46d8-b622-f476184d9cca",
          "length": 10,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "36a672ad-8023-4786-aab1-08462d0d85b3"
        },
        "item": {
          "id": "c25835ab-75f1-44a7-b289-1be78c609eb1",
          "name": "Start process - ERROR ON PROCESS",
          "request": {
            "description": {
              "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "main"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1b4704a5-3a89-4f14-a3f9-67bf819e2148",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 209\", function () {",
                  "    pm.response.to.have.status(209);",
                  "});"
                ],
                "_lastExecutionId": "2e93f9fa-4fcb-47e6-be12-4e5250fdbf1c"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "103d0dd2-c468-4dc0-8c82-94a02564cc09",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "494",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "b01784e3-2ab8-43eb-a8e4-e45580c83346",
          "status": "Success (209)",
          "code": 209,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            },
            {
              "key": "content-length",
              "value": "90"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              80,
              82,
              79,
              67,
              69,
              83,
              83,
              95,
              69,
              82,
              82,
              79,
              82,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              69,
              114,
              114,
              111,
              114,
              32,
              119,
              104,
              105,
              108,
              101,
              32,
              114,
              117,
              110,
              110,
              105,
              110,
              103,
              32,
              116,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              50,
              48,
              57,
              125
            ]
          },
          "cookie": [],
          "responseTime": 23,
          "responseSize": 90
        },
        "id": "c25835ab-75f1-44a7-b289-1be78c609eb1",
        "assertions": [
          {
            "assertion": "Status code is 209",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9e77c9e7-3b86-4655-a915-e298d9ad90e4",
          "length": 10,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9e910773-b95e-465d-97f0-1fba745ed30e"
        },
        "item": {
          "id": "ebbd7e36-37dc-4a4b-9298-fd2f9b7f3731",
          "name": "Start process - EXCEPTION ON PROCESS",
          "request": {
            "description": {
              "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "main"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "150e1041-001d-4f1b-ac09-e5527775a899",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 500\", function () {",
                  "    pm.response.to.have.status(500);",
                  "});"
                ],
                "_lastExecutionId": "8ff27060-dc10-44fd-a926-36049ec95f7f"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "95c7c7c5-a635-491d-a154-025b1f3ab48b",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "494",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "8b9fad41-e5d2-4187-84ff-f0c296daf25a",
          "status": "Internal Server Error",
          "code": 500,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            },
            {
              "key": "content-length",
              "value": "80"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              84,
              65,
              83,
              75,
              95,
              69,
              82,
              82,
              79,
              82,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              69,
              114,
              114,
              111,
              114,
              32,
              114,
              101,
              116,
              114,
              105,
              101,
              118,
              101,
              32,
              110,
              101,
              120,
              116,
              32,
              115,
              116,
              101,
              112,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              53,
              48,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 17,
          "responseSize": 80
        },
        "id": "ebbd7e36-37dc-4a4b-9298-fd2f9b7f3731",
        "assertions": [
          {
            "assertion": "Status code is 500",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "564fd104-685f-486d-bf47-0421f872fdca",
          "length": 10,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8bdecfeb-a902-436b-8837-f78460ef7e4b"
        },
        "item": {
          "id": "eb35dd93-36c9-43a2-9517-912ad546631c",
          "name": "Next - CREATED",
          "request": {
            "description": {
              "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "next",
                "trns",
                "06789-12345-0001-64874412-1698769800000-363cc36d-0"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f545391b-9127-4998-a72d-2e721f6b5f7b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ],
                "_lastExecutionId": "38eb4986-2033-4954-a42f-6cc1a6459bb8"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "06789-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6b89a489-bf0b-488c-80e6-743fbdcd56c7",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "680",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "b8f41dfa-1397-4771-b153-c4586b37875c",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "content-length",
              "value": "2112"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              97,
              115,
              107,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              116,
              101,
              115,
              116,
              49,
              34,
              58,
              34,
              100,
              97,
              116,
              97,
              49,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              98,
              108,
              101,
              49,
              34,
              58,
              34,
              49,
              49,
              46,
              53,
              48,
              34,
              44,
              34,
              97,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              101,
              34,
              58,
              34,
              49,
              49,
              46,
              53,
              34,
              44,
              34,
              102,
              101,
              101,
              34,
              58,
              34,
              50,
              46,
              51,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              122,
              105,
              111,
              110,
              101,
              34,
              44,
              34,
              99,
              111,
              109,
              112,
              97,
              110,
              121,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              44,
              34,
              111,
              110,
              69,
              114,
              114,
              111,
              114,
              34,
              58,
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              44,
              34,
              116,
              105,
              109,
              101,
              111,
              117,
              116,
              34,
              58,
              53,
              48,
              44,
              34,
              111,
              110,
              84,
              105,
              109,
              101,
              111,
              117,
              116,
              34,
              58,
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              44,
              34,
              116,
              101,
              109,
              112,
              108,
              97,
              116,
              101,
              34,
              58,
              123,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              68,
              57,
              52,
              98,
              87,
              119,
              103,
              100,
              109,
              86,
              121,
              99,
              50,
              108,
              118,
              98,
              106,
              48,
              105,
              77,
              83,
              52,
              119,
              73,
              105,
              66,
              108,
              98,
              109,
              78,
              118,
              90,
              71,
              108,
              117,
              90,
              122,
              48,
              105,
              97,
              88,
              78,
              118,
              76,
              84,
              103,
              52,
              78,
              84,
              107,
              116,
              77,
              83,
              73,
              47,
              80,
              103,
              111,
              56,
              73,
              85,
              82,
              80,
              81,
              49,
              82,
              90,
              85,
              69,
              85,
              103,
              97,
              72,
              82,
              116,
              98,
              67,
              66,
              81,
              86,
              85,
              74,
              77,
              83,
              85,
              77,
              103,
              73,
              105,
              48,
              118,
              76,
              49,
              99,
              122,
              81,
              121,
              56,
              118,
              82,
              70,
              82,
              69,
              73,
              70,
              104,
              73,
              86,
              69,
              49,
              77,
              73,
              68,
              69,
              117,
              77,
              67,
              66,
              85,
              99,
              109,
              70,
              117,
              99,
              50,
              108,
              48,
              97,
              87,
              57,
              117,
              89,
              87,
              119,
              118,
              76,
              48,
              86,
              79,
              73,
              105,
              65,
              105,
              97,
              72,
              82,
              48,
              99,
              68,
              111,
              118,
              76,
              51,
              100,
              51,
              100,
              121,
              53,
              51,
              77,
              121,
              53,
              118,
              99,
              109,
              99,
              118,
              86,
              70,
              73,
              118,
              101,
              71,
              104,
              48,
              98,
              87,
              119,
              120,
              76,
              48,
              82,
              85,
              82,
              67,
              57,
              52,
              97,
              72,
              82,
              116,
              98,
              68,
              69,
              116,
              100,
              72,
              74,
              104,
              98,
              110,
              78,
              112,
              100,
              71,
              108,
              118,
              98,
              109,
              70,
              115,
              76,
              109,
              82,
              48,
              90,
              67,
              73,
              43,
              67,
              106,
              120,
              111,
              100,
              71,
              49,
              115,
              73,
              72,
              104,
              116,
              98,
              71,
              53,
              122,
              80,
              83,
              74,
              111,
              100,
              72,
              82,
              119,
              79,
              105,
              56,
              118,
              100,
              51,
              100,
              51,
              76,
              110,
              99,
              122,
              76,
              109,
              57,
              121,
              90,
              121,
              56,
              120,
              79,
              84,
              107,
              53,
              76,
              51,
              104,
              111,
              100,
              71,
              49,
              115,
              73,
              106,
              52,
              75,
              80,
              71,
              104,
              108,
              89,
              87,
              81,
              43,
              80,
              71,
              120,
              112,
              98,
              109,
              115,
              103,
              99,
              109,
              86,
              115,
              80,
              83,
              74,
              122,
              100,
              72,
              108,
              115,
              90,
              88,
              78,
              111,
              90,
              87,
              86,
              48,
              73,
              105,
              66,
              111,
              99,
              109,
              86,
              109,
              80,
              83,
              74,
              106,
              99,
              51,
              77,
              118,
              90,
              87,
              49,
              49,
              98,
              71,
              70,
              48,
              98,
              51,
              74,
              108,
              76,
              109,
              78,
              122,
              99,
              121,
              73,
              103,
              76,
              122,
              52,
              56,
              76,
              50,
              104,
              108,
              89,
              87,
              81,
              43,
              67,
              106,
              120,
              105,
              98,
              50,
              82,
              53,
              80,
              103,
              111,
              74,
              80,
              71,
              108,
              116,
              90,
              121,
              66,
              112,
              90,
              68,
              48,
              105,
              98,
              71,
              57,
              110,
              98,
              121,
              73,
              103,
              99,
              51,
              74,
              106,
              80,
              83,
              74,
              111,
              100,
              72,
              82,
              119,
              99,
              122,
              111,
              118,
              76,
              50,
              81,
              121,
              101,
              71,
              82,
              49,
              101,
              84,
              100,
              48,
              89,
              109,
              100,
              49,
              77,
              109,
              81,
              122,
              76,
              109,
              78,
              115,
              98,
              51,
              86,
              107,
              90,
              110,
              74,
              118,
              98,
              110,
              81,
              117,
              98,
              109,
              86,
              48,
              76,
              50,
              90,
              112,
              98,
              71,
              86,
              122,
              76,
              48,
              108,
              68,
              84,
              48,
              52,
              118,
              90,
              71,
              86,
              109,
              89,
              88,
              86,
              115,
              100,
              70,
              57,
              115,
              98,
              50,
              100,
              118,
              76,
              110,
              78,
              50,
              90,
              121,
              73,
              103,
              76,
              122,
              52,
              75,
              67,
              84,
              120,
              111,
              77,
              84,
              53,
              84,
              90,
              88,
              74,
              50,
              97,
              88,
              112,
              112,
              73,
              71,
              82,
              112,
              73,
              72,
              66,
              49,
              89,
              109,
              74,
              115,
              97,
              87,
              78,
              104,
              73,
              72,
              86,
              48,
              97,
              87,
              120,
              112,
              100,
              67,
              89,
              106,
              77,
              106,
              73,
              48,
              79,
              122,
              119,
              118,
              97,
              68,
              69,
              43,
              67,
              81,
              111,
              74,
              67,
              103,
              107,
              56,
              97,
              68,
              73,
              43,
              85,
              109,
              108,
              108,
              99,
              71,
              108,
              115,
              98,
              50,
              100,
              118,
              73,
              71,
              82,
              108,
              98,
              67,
              66,
              119,
              89,
              87,
              100,
              104,
              98,
              87,
              86,
              117,
              100,
              71,
              56,
              56,
              76,
              50,
              103,
              121,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              56,
              100,
              71,
              70,
              105,
              98,
              71,
              85,
              103,
              97,
              87,
              81,
              57,
              73,
              110,
              82,
              104,
              89,
              109,
              120,
              108,
              73,
              106,
              52,
              75,
              67,
              84,
              120,
              48,
              97,
              71,
              86,
              104,
              90,
              68,
              52,
              75,
              67,
              83,
              65,
              56,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              74,
              80,
              72,
              82,
              111,
              80,
              103,
              111,
              74,
              67,
              81,
              107,
              56,
              99,
              51,
              66,
              104,
              98,
              106,
              53,
              66,
              100,
              88,
              74,
              112,
              90,
              50,
              69,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              103,
              107,
              74,
              80,
              67,
              57,
              48,
              97,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              103,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              110,
              74,
              112,
              90,
              50,
              104,
              48,
              73,
              106,
              52,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              77,
              84,
              65,
              119,
              77,
              68,
              65,
              103,
              74,
              105,
              77,
              52,
              77,
              122,
              89,
              48,
              79,
              122,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              67,
              81,
              107,
              56,
              76,
              51,
              82,
              111,
              80,
              103,
              107,
              74,
              67,
              103,
              107,
              103,
              73,
              68,
              119,
              118,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              56,
              76,
              51,
              82,
              111,
              90,
              87,
              70,
              107,
              80,
              103,
              111,
              75,
              67,
              84,
              120,
              48,
              89,
              109,
              57,
              107,
              101,
              84,
              52,
              74,
              67,
              103,
              107,
              103,
              73,
              68,
              120,
              48,
              99,
              106,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              81,
              43,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              81,
              50,
              57,
              116,
              98,
              87,
              108,
              122,
              99,
              50,
              108,
              118,
              98,
              109,
              107,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              81,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              110,
              74,
              112,
              90,
              50,
              104,
              48,
              73,
              106,
              52,
              74,
              67,
              81,
              107,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              77,
              105,
              52,
              122,
              73,
              67,
              89,
              106,
              79,
              68,
              77,
              50,
              78,
              68,
              115,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              103,
              107,
              74,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              74,
              67,
              81,
              111,
              74,
              73,
              67,
              65,
              56,
              76,
              51,
              82,
              121,
              80,
              103,
              107,
              103,
              73,
              65,
              111,
              74,
              73,
              68,
              119,
              118,
              100,
              71,
              74,
              118,
              90,
              72,
              107,
              43,
              67,
              81,
              111,
              74,
              73,
              68,
              120,
              48,
              90,
              109,
              57,
              118,
              100,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              74,
              67,
              84,
              120,
              48,
              90,
              68,
              52,
              56,
              99,
              51,
              66,
              104,
              98,
              105,
              66,
              106,
              98,
              71,
              70,
              122,
              99,
              122,
              48,
              105,
              98,
              71,
              70,
              121,
              90,
              50,
              85,
              105,
              80,
              108,
              82,
              118,
              100,
              71,
              70,
              115,
              90,
              84,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              74,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              82,
              107,
              73,
              71,
              78,
              115,
              89,
              88,
              78,
              122,
              80,
              83,
              74,
              121,
              97,
              87,
              100,
              111,
              100,
              67,
              73,
              43,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              109,
              120,
              104,
              99,
              109,
              100,
              108,
              73,
              106,
              52,
              120,
              77,
              83,
              52,
              49,
              73,
              67,
              89,
              106,
              79,
              68,
              77,
              50,
              78,
              68,
              115,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              74,
              67,
              81,
              111,
              74,
              67,
              84,
              119,
              118,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              103,
              73,
              68,
              119,
              118,
              100,
              71,
              90,
              118,
              98,
              51,
              81,
              43,
              67,
              103,
              111,
              74,
              73,
              65,
              111,
              74,
              80,
              67,
              57,
              48,
              89,
              87,
              74,
              115,
              90,
              84,
              52,
              74,
              67,
              105,
              65,
              75,
              73,
              67,
              65,
              103,
              73,
              68,
              120,
              105,
              100,
              88,
              82,
              48,
              98,
              50,
              52,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              109,
              53,
              108,
              90,
              50,
              70,
              48,
              97,
              88,
              90,
              108,
              73,
              105,
              66,
              107,
              89,
              88,
              82,
              104,
              76,
              87,
              90,
              107,
              97,
              122,
              48,
              105,
              85,
              122,
              81,
              105,
              73,
              71,
              108,
              107,
              80,
              83,
              74,
              105,
              89,
              87,
              78,
              114,
              73,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              67,
              65,
              103,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              83,
              87,
              53,
              107,
              97,
              87,
              86,
              48,
              99,
              109,
              56,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              105,
              65,
              103,
              73,
              67,
              65,
              56,
              76,
              50,
              74,
              49,
              100,
              72,
              82,
              118,
              98,
              106,
              52,
              75,
              67,
              81,
              111,
              74,
              80,
              71,
              74,
              49,
              100,
              72,
              82,
              118,
              98,
              105,
              66,
              106,
              98,
              71,
              70,
              122,
              99,
              122,
              48,
              105,
              98,
              109,
              86,
              110,
              89,
              88,
              82,
              112,
              100,
              109,
              85,
              105,
              73,
              71,
              108,
              107,
              80,
              83,
              74,
              108,
              101,
              71,
              108,
              48,
              73,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              67,
              65,
              103,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              82,
              88,
              78,
              106,
              97,
              84,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              68,
              119,
              118,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              56,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              73,
              71,
              78,
              115,
              89,
              88,
              78,
              122,
              80,
              83,
              74,
              119,
              98,
              51,
              78,
              112,
              100,
              71,
              108,
              50,
              90,
              83,
              73,
              103,
              90,
              71,
              70,
              48,
              89,
              83,
              49,
              109,
              90,
              71,
              115,
              57,
              73,
              108,
              77,
              52,
              73,
              105,
              66,
              112,
              90,
              68,
              48,
              105,
              89,
              50,
              57,
              117,
              90,
              109,
              108,
              121,
              98,
              83,
              73,
              43,
              67,
              105,
              65,
              103,
              73,
              67,
              65,
              103,
              73,
              68,
              120,
              122,
              99,
              71,
              70,
              117,
              80,
              108,
              66,
              104,
              90,
              50,
              69,
              103,
              73,
              68,
              69,
              120,
              76,
              106,
              85,
              103,
              74,
              105,
              77,
              52,
              77,
              122,
              89,
              48,
              79,
              122,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              67,
              84,
              119,
              118,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              75,
              67,
              103,
              107,
              56,
              76,
              50,
              74,
              118,
              90,
              72,
              107,
              43,
              67,
              103,
              107,
              75,
              80,
              67,
              57,
              111,
              100,
              71,
              49,
              115,
              80,
              103,
              61,
              61,
              34,
              125,
              44,
              34,
              99,
              111,
              109,
              109,
              97,
              110,
              100,
              34,
              58,
              34,
              80,
              82,
              73,
              78,
              84,
              95,
              82,
              69,
              67,
              69,
              73,
              80,
              84,
              34,
              44,
              34,
              98,
              117,
              116,
              116,
              111,
              110,
              115,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              98,
              117,
              116,
              116,
              111,
              110,
              49,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              125,
              93,
              125,
              44,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              54,
              55,
              56,
              57,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              51,
              54,
              51,
              99,
              99,
              51,
              54,
              100,
              45,
              48,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              79,
              75,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              111,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              32,
              99,
              111,
              109,
              112,
              108,
              101,
              116,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 36,
          "responseSize": 2112
        },
        "id": "eb35dd93-36c9-43a2-9517-912ad546631c",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "bb3394d1-4e70-4ee1-9000-c630b1300993",
          "length": 10,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "575b622c-6316-4c57-96d4-38e097c1f833"
        },
        "item": {
          "id": "a6bc31a3-83f5-4af5-87ba-85187103921d",
          "name": "Next - END PROCESS",
          "request": {
            "description": {
              "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "next",
                "trns",
                "00001-12345-0001-64874412-1698769800000-363cc36d-0"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a77e3843-97ae-42e0-8cfc-b010552dec80",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "475b4a94-4b14-49f2-8519-d452f54e38d5"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00001-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5ab26673-ec89-47e2-a9ba-38975be4d9b0",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "680",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "d18b2d84-2f12-4ec3-9918-769d4634f779",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "content-length",
              "value": "139"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              48,
              48,
              48,
              49,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              51,
              54,
              51,
              99,
              99,
              51,
              54,
              100,
              45,
              48,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              69,
              78,
              68,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              105,
              115,
              32,
              116,
              101,
              114,
              109,
              105,
              110,
              97,
              116,
              101,
              100,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 18,
          "responseSize": 139
        },
        "id": "a6bc31a3-83f5-4af5-87ba-85187103921d",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "3e5da1f3-2321-4db2-8b00-0a4492933b7a",
          "length": 10,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "00f1117c-5fa6-456c-a5d6-21c026ff2f92"
        },
        "item": {
          "id": "540b3c69-61ae-488f-9983-3d3df8afef51",
          "name": "Next - PROCESSING",
          "request": {
            "description": {
              "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "next",
                "trns",
                "00002-12345-0001-64874412-1698769800000-363cc36d-0"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f4117c02-77f4-4976-a049-1f34361da69e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 202\", function () {",
                  "    pm.response.to.have.status(202);",
                  "});"
                ],
                "_lastExecutionId": "a567bb16-1e8b-4d91-82c1-0decbe56a9a8"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00002-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "38ea5560-d75b-4c0d-89ff-28eb4f3f5e28",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "680",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "c6fbca74-5961-4fdf-b5f4-66ce976eaf40",
          "status": "Accepted",
          "code": 202,
          "header": [
            {
              "key": "content-length",
              "value": "155"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              48,
              48,
              48,
              50,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              51,
              54,
              51,
              99,
              99,
              51,
              54,
              100,
              45,
              48,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              80,
              82,
              79,
              67,
              69,
              83,
              83,
              73,
              78,
              71,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              80,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              115,
              116,
              105,
              108,
              108,
              32,
              114,
              117,
              110,
              110,
              105,
              110,
              103,
              44,
              32,
              114,
              101,
              116,
              114,
              121,
              32,
              108,
              97,
              116,
              101,
              114,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 17,
          "responseSize": 155
        },
        "id": "540b3c69-61ae-488f-9983-3d3df8afef51",
        "assertions": [
          {
            "assertion": "Status code is 202",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "802532ef-781b-472c-a559-0fe10972fb55",
          "length": 10,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d8cc78b2-8f21-4126-b39a-feb8d05607d3"
        },
        "item": {
          "id": "bfed0593-c0d6-4a40-a452-79d978c1a328",
          "name": "Next - ERROR ON PROCESS",
          "request": {
            "description": {
              "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "next",
                "trns",
                "00003-12345-0001-64874412-1698769800000-363cc36d-0"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1ead01d4-841d-47e4-903d-5249bb035fa0",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 209\", function () {",
                  "    pm.response.to.have.status(209);",
                  "});"
                ],
                "_lastExecutionId": "a47cc24b-b8c4-4693-a2c5-b18e52fd448c"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00003-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c35a889e-880c-44e5-bdfc-df743e236551",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "680",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "1cb38c72-06c9-4acb-b350-3fe705ba184e",
          "status": "Success (209)",
          "code": 209,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            },
            {
              "key": "content-length",
              "value": "90"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              80,
              82,
              79,
              67,
              69,
              83,
              83,
              95,
              69,
              82,
              82,
              79,
              82,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              69,
              114,
              114,
              111,
              114,
              32,
              119,
              104,
              105,
              108,
              101,
              32,
              114,
              117,
              110,
              110,
              105,
              110,
              103,
              32,
              116,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              50,
              48,
              57,
              125
            ]
          },
          "cookie": [],
          "responseTime": 18,
          "responseSize": 90
        },
        "id": "bfed0593-c0d6-4a40-a452-79d978c1a328",
        "assertions": [
          {
            "assertion": "Status code is 209",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1c2f5894-c28c-4452-a698-16125c046d1b",
          "length": 10,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0e7b7a2c-05fe-47ab-b9f0-58964a0abd18"
        },
        "item": {
          "id": "d09aa8a1-8beb-4b86-8055-f7910fc9ecd0",
          "name": "Next - EXCEPTION ON PROCESS",
          "request": {
            "description": {
              "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "next",
                "trns",
                "00004-12345-0001-64874412-1698769800000-363cc36d-0"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5d5e2a3a-de6a-4b6f-bfeb-89e03d31eda9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 500\", function () {",
                  "    pm.response.to.have.status(500);",
                  "});"
                ],
                "_lastExecutionId": "f2c7038e-2f5c-4a2e-831f-90c13b421d90"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00004-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b4e3828e-c544-44f0-ad42-b8a9b1428d16",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "680",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "4217a3be-5540-4429-b1e7-dc95272307fb",
          "status": "Internal Server Error",
          "code": 500,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            },
            {
              "key": "content-length",
              "value": "80"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              84,
              65,
              83,
              75,
              95,
              69,
              82,
              82,
              79,
              82,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              69,
              114,
              114,
              111,
              114,
              32,
              114,
              101,
              116,
              114,
              105,
              101,
              118,
              101,
              32,
              110,
              101,
              120,
              116,
              32,
              115,
              116,
              101,
              112,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              53,
              48,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 16,
          "responseSize": 80
        },
        "id": "d09aa8a1-8beb-4b86-8055-f7910fc9ecd0",
        "assertions": [
          {
            "assertion": "Status code is 500",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 5152
    },
    "failures": [],
    "error": null
  }
}