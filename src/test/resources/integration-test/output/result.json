{
  "collection": {
    "_": {
      "postman_id": "14aeea16-40c2-4ae8-bfa9-4015bae6dacd",
      "exporter_id": "25309445"
    },
    "item": [
      {
        "id": "7f43f77b-6e4d-4e97-8093-b9a75c750bae",
        "name": "Start process - CREATED",
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "278dd39c-7358-49ab-9350-ed44c93c087a",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 201\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "5bbd7bb8-3950-4a36-b5e7-a3a0cfc7819a"
            }
          }
        ]
      },
      {
        "id": "79a42293-ca5f-4795-986d-f3e0faca246c",
        "name": "Start process - END PROCESS",
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "d13023c4-f06d-4d33-89b9-fa9f966f6a92",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "9923eec2-4653-4541-aff2-497d9ea6d7bb"
            }
          }
        ]
      },
      {
        "id": "c8dcb0b0-6d62-4b78-af7c-15f608973cab",
        "name": "Start process - PROCESSING",
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "ca7bec97-c052-4913-94c5-107f8045ee27",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 202\", function () {",
                "    pm.response.to.have.status(202);",
                "});"
              ],
              "_lastExecutionId": "43634e3c-8f03-4f3e-9a24-bbda97ccee94"
            }
          }
        ]
      },
      {
        "id": "d026f36b-4c5d-48da-b1f6-4f106dabbaa5",
        "name": "Start process - ERROR ON PROCESS",
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "e4f526ae-930c-4667-8b49-e6279719eaef",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 209\", function () {",
                "    pm.response.to.have.status(209);",
                "});"
              ],
              "_lastExecutionId": "c6f6ed04-cfee-4249-b272-e0741c963775"
            }
          }
        ]
      },
      {
        "id": "b98046f2-2e13-4d7d-a502-5c1d7415af97",
        "name": "Start process - EXCEPTION ON PROCESS",
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "054099fc-441f-4262-8312-32bc0fc8b4cf",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 500\", function () {",
                "    pm.response.to.have.status(500);",
                "});"
              ],
              "_lastExecutionId": "6b3a3b21-47f0-4646-9ab6-24264968fb4f"
            }
          }
        ]
      },
      {
        "id": "a68fcfc1-6b4c-4a22-8af0-977770195589",
        "name": "Next - CREATED",
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "06789-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "d8f8dbfa-1526-43ea-8b7f-5f6e7153dc1e",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 201\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "4b44b0d8-7c02-4041-85c7-8f3b5b3cea0c"
            }
          }
        ]
      },
      {
        "id": "c6464069-0043-4fe5-b030-a571fc683216",
        "name": "Next - END PROCESS",
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00001-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "5c2e307f-69ce-4958-9209-3fa930486796",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "4070a611-67f2-4cdc-886b-c3302f129c59"
            }
          }
        ]
      },
      {
        "id": "8c1d7c53-b968-44c5-b5d4-8d045d77d2ab",
        "name": "Next - PROCESSING",
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00002-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "b0745372-ea74-4763-b29e-f2b9c7cfe612",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 202\", function () {",
                "    pm.response.to.have.status(202);",
                "});"
              ],
              "_lastExecutionId": "985dbe1a-85e6-4a9a-939f-b5e563aeb067"
            }
          }
        ]
      },
      {
        "id": "38a0c476-b8b0-47d9-8184-cdb5bd2ab2f3",
        "name": "Next - ERROR ON PROCESS",
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00003-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "d4b8cc4f-398c-42ad-974c-e754e830a860",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 209\", function () {",
                "    pm.response.to.have.status(209);",
                "});"
              ],
              "_lastExecutionId": "faf4b795-a13d-4c1e-a5ab-51c34bf9a443"
            }
          }
        ]
      },
      {
        "id": "f5ce6d98-366e-4046-bcdc-909db6db4823",
        "name": "Next - EXCEPTION ON PROCESS",
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00004-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "cd507c4c-33ca-45c2-841b-461bb1f3a6f6",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 500\", function () {",
                "    pm.response.to.have.status(500);",
                "});"
              ],
              "_lastExecutionId": "bdbd8f07-2b07-4df7-8ffd-ec09fcda94ca"
            }
          }
        ]
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "776bb456-af59-436b-ba97-2034da71cbf9",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "ac3ab926-acc2-4ca7-a074-aa412f91c544"
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "216cc067-ebb9-401e-bbac-6362f57b6276",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "fde33490-e017-4f0a-8375-7c6767c7b481"
        }
      }
    ],
    "variable": [
      {
        "type": "any",
        "value": "",
        "key": "token"
      },
      {
        "type": "any",
        "value": "https://postman-integration-testing.glitch.me/",
        "key": "baseUrl"
      }
    ],
    "info": {
      "_postman_id": "14aeea16-40c2-4ae8-bfa9-4015bae6dacd",
      "name": "integration_test_task",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "# ⛓️ Get started here\n\nPostman allows you to test your APIs using simple [Javascript code](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/). You can evaluate your response body, headers, cookies, and more using the [ChaiJS BDD](https://www.chaijs.com/api/bdd/) syntax.\n\nThis template guides you through the process of setting up an integration test to ensure that all individual components of an API function together seamlessly.\n\nThe API under test in this collection includes three endpoints for registering and receiving a token, accessing your unique generated name, and unregistering a token:\n\n- POST `/register`\n- POST `/unregister`\n- GET `/my-name`\n    \n\nBy setting up requests in the order of the operation, we can test the flow of data to and from the endpoints and ensure they work together as expected. We also verify that the data persists between requests on the back end.\n\n## 🔖 **How to use this template**\n\n**Step 1:** Check out the requests' documentation to learn more about -\n\n- what each request is meant to do.\n- the tests we've added against each one.\n    \n\n**Step 2:** Run this collection by clicking on \"Run\" or the by using the [Collection Runner](https://learning.postman.com/docs/collections/running-collections/intro-to-collection-runs/).\n\n<img src=\"https://content.pstmn.io/84019b0f-69c8-4c5f-98b9-2c90a6f9a0b1/Y29sbGVjdGlvbi1ydW5uZXItYnV0dG9uLmpwZWc=\" width=\"266\" height=\"103\">\n\n**Step 3:** To customize this template, replace the request URLs with your API endpoints and add or edit the tests if needed.\n\n## 💡Related templates\n\n[Regression testing](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=7ab0f80e-a964-46ee-b948-4a4e3a85809c&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)  \n[Performance testing](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=3302192d-87dd-4612-b381-61894de21203&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)  \n[Contract testing](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=42247877-8529-429d-acba-4de20c3b5b3b&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)  \n[Conditional workflow](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=78475d97-9a36-4731-ab24-9adf6a94d0fb&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)  \n[Mock data generation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=da8ceebc-d4da-478c-ab8a-37634faefc74&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)  \n[Common API vulnerabilities check](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e1edbae8-6429-453d-890e-00385eea1811&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "id": "33d6770d-d3c2-4f61-85a3-08b101ea1cce",
    "values": [
      {
        "type": "any",
        "value": "http://host.testcontainers.internal:8086",
        "key": "baseUrl"
      }
    ]
  },
  "globals": {
    "id": "85a7c52f-f339-411e-aa90-48f2db9117c1",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 30,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 20,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 10,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 63.2,
      "responseMin": 20,
      "responseMax": 391,
      "responseSd": 109.34697069420805,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1713859212503,
      "completed": 1713859213385
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 10,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e4427322-54dc-4e31-b62c-f09e15fe1c12",
          "httpRequestId": "fa07f05a-1d44-404b-9bfd-6b561095bad7"
        },
        "item": {
          "id": "7f43f77b-6e4d-4e97-8093-b9a75c750bae",
          "name": "Start process - CREATED",
          "request": {
            "description": {
              "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "main"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "278dd39c-7358-49ab-9350-ed44c93c087a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ],
                "_lastExecutionId": "5bbd7bb8-3950-4a36-b5e7-a3a0cfc7819a"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0f72fc61-8737-4c1f-b729-87c3839294ac",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "494",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "7d7bca07-6e43-47bb-b5ee-b9163bc2cd30",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "content-length",
              "value": "1958"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              97,
              115,
              107,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              116,
              101,
              115,
              116,
              49,
              34,
              58,
              34,
              100,
              97,
              116,
              97,
              49,
              34,
              125,
              44,
              34,
              111,
              110,
              69,
              114,
              114,
              111,
              114,
              34,
              58,
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              44,
              34,
              116,
              105,
              109,
              101,
              111,
              117,
              116,
              34,
              58,
              53,
              48,
              44,
              34,
              111,
              110,
              84,
              105,
              109,
              101,
              111,
              117,
              116,
              34,
              58,
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              44,
              34,
              116,
              101,
              109,
              112,
              108,
              97,
              116,
              101,
              34,
              58,
              123,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              68,
              57,
              52,
              98,
              87,
              119,
              103,
              100,
              109,
              86,
              121,
              99,
              50,
              108,
              118,
              98,
              106,
              48,
              105,
              77,
              83,
              52,
              119,
              73,
              105,
              66,
              108,
              98,
              109,
              78,
              118,
              90,
              71,
              108,
              117,
              90,
              122,
              48,
              105,
              97,
              88,
              78,
              118,
              76,
              84,
              103,
              52,
              78,
              84,
              107,
              116,
              77,
              83,
              73,
              47,
              80,
              103,
              111,
              56,
              73,
              85,
              82,
              80,
              81,
              49,
              82,
              90,
              85,
              69,
              85,
              103,
              97,
              72,
              82,
              116,
              98,
              67,
              66,
              81,
              86,
              85,
              74,
              77,
              83,
              85,
              77,
              103,
              73,
              105,
              48,
              118,
              76,
              49,
              99,
              122,
              81,
              121,
              56,
              118,
              82,
              70,
              82,
              69,
              73,
              70,
              104,
              73,
              86,
              69,
              49,
              77,
              73,
              68,
              69,
              117,
              77,
              67,
              66,
              85,
              99,
              109,
              70,
              117,
              99,
              50,
              108,
              48,
              97,
              87,
              57,
              117,
              89,
              87,
              119,
              118,
              76,
              48,
              86,
              79,
              73,
              105,
              65,
              105,
              97,
              72,
              82,
              48,
              99,
              68,
              111,
              118,
              76,
              51,
              100,
              51,
              100,
              121,
              53,
              51,
              77,
              121,
              53,
              118,
              99,
              109,
              99,
              118,
              86,
              70,
              73,
              118,
              101,
              71,
              104,
              48,
              98,
              87,
              119,
              120,
              76,
              48,
              82,
              85,
              82,
              67,
              57,
              52,
              97,
              72,
              82,
              116,
              98,
              68,
              69,
              116,
              100,
              72,
              74,
              104,
              98,
              110,
              78,
              112,
              100,
              71,
              108,
              118,
              98,
              109,
              70,
              115,
              76,
              109,
              82,
              48,
              90,
              67,
              73,
              43,
              67,
              106,
              120,
              111,
              100,
              71,
              49,
              115,
              73,
              72,
              104,
              116,
              98,
              71,
              53,
              122,
              80,
              83,
              74,
              111,
              100,
              72,
              82,
              119,
              79,
              105,
              56,
              118,
              100,
              51,
              100,
              51,
              76,
              110,
              99,
              122,
              76,
              109,
              57,
              121,
              90,
              121,
              56,
              120,
              79,
              84,
              107,
              53,
              76,
              51,
              104,
              111,
              100,
              71,
              49,
              115,
              73,
              106,
              52,
              75,
              80,
              71,
              104,
              108,
              89,
              87,
              81,
              43,
              80,
              71,
              120,
              112,
              98,
              109,
              115,
              103,
              99,
              109,
              86,
              115,
              80,
              83,
              74,
              122,
              100,
              72,
              108,
              115,
              90,
              88,
              78,
              111,
              90,
              87,
              86,
              48,
              73,
              105,
              66,
              111,
              99,
              109,
              86,
              109,
              80,
              83,
              74,
              106,
              99,
              51,
              77,
              118,
              90,
              87,
              49,
              49,
              98,
              71,
              70,
              48,
              98,
              51,
              74,
              108,
              76,
              109,
              78,
              122,
              99,
              121,
              73,
              103,
              76,
              122,
              52,
              56,
              76,
              50,
              104,
              108,
              89,
              87,
              81,
              43,
              67,
              106,
              120,
              105,
              98,
              50,
              82,
              53,
              80,
              103,
              111,
              74,
              80,
              71,
              108,
              116,
              90,
              121,
              66,
              112,
              90,
              68,
              48,
              105,
              98,
              71,
              57,
              110,
              98,
              121,
              73,
              103,
              99,
              51,
              74,
              106,
              80,
              83,
              74,
              111,
              100,
              72,
              82,
              119,
              99,
              122,
              111,
              118,
              76,
              50,
              81,
              121,
              101,
              71,
              82,
              49,
              101,
              84,
              100,
              48,
              89,
              109,
              100,
              49,
              77,
              109,
              81,
              122,
              76,
              109,
              78,
              115,
              98,
              51,
              86,
              107,
              90,
              110,
              74,
              118,
              98,
              110,
              81,
              117,
              98,
              109,
              86,
              48,
              76,
              50,
              90,
              112,
              98,
              71,
              86,
              122,
              76,
              48,
              108,
              68,
              84,
              48,
              52,
              118,
              90,
              71,
              86,
              109,
              89,
              88,
              86,
              115,
              100,
              70,
              57,
              115,
              98,
              50,
              100,
              118,
              76,
              110,
              78,
              50,
              90,
              121,
              73,
              103,
              76,
              122,
              52,
              75,
              67,
              84,
              120,
              111,
              77,
              84,
              53,
              84,
              90,
              88,
              74,
              50,
              97,
              88,
              112,
              112,
              73,
              71,
              82,
              112,
              73,
              72,
              66,
              49,
              89,
              109,
              74,
              115,
              97,
              87,
              78,
              104,
              73,
              72,
              86,
              48,
              97,
              87,
              120,
              112,
              100,
              67,
              89,
              106,
              77,
              106,
              73,
              48,
              79,
              122,
              119,
              118,
              97,
              68,
              69,
              43,
              67,
              81,
              111,
              74,
              67,
              103,
              107,
              56,
              97,
              68,
              73,
              43,
              85,
              109,
              108,
              108,
              99,
              71,
              108,
              115,
              98,
              50,
              100,
              118,
              73,
              71,
              82,
              108,
              98,
              67,
              66,
              119,
              89,
              87,
              100,
              104,
              98,
              87,
              86,
              117,
              100,
              71,
              56,
              56,
              76,
              50,
              103,
              121,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              56,
              100,
              71,
              70,
              105,
              98,
              71,
              85,
              103,
              97,
              87,
              81,
              57,
              73,
              110,
              82,
              104,
              89,
              109,
              120,
              108,
              73,
              106,
              52,
              75,
              67,
              84,
              120,
              48,
              97,
              71,
              86,
              104,
              90,
              68,
              52,
              75,
              67,
              83,
              65,
              56,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              74,
              80,
              72,
              82,
              111,
              80,
              103,
              111,
              74,
              67,
              81,
              107,
              56,
              99,
              51,
              66,
              104,
              98,
              106,
              53,
              66,
              100,
              88,
              74,
              112,
              90,
              50,
              69,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              103,
              107,
              74,
              80,
              67,
              57,
              48,
              97,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              103,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              110,
              74,
              112,
              90,
              50,
              104,
              48,
              73,
              106,
              52,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              77,
              84,
              65,
              119,
              77,
              68,
              65,
              103,
              74,
              105,
              77,
              52,
              77,
              122,
              89,
              48,
              79,
              122,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              67,
              81,
              107,
              56,
              76,
              51,
              82,
              111,
              80,
              103,
              107,
              74,
              67,
              103,
              107,
              103,
              73,
              68,
              119,
              118,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              56,
              76,
              51,
              82,
              111,
              90,
              87,
              70,
              107,
              80,
              103,
              111,
              75,
              67,
              84,
              120,
              48,
              89,
              109,
              57,
              107,
              101,
              84,
              52,
              74,
              67,
              103,
              107,
              103,
              73,
              68,
              120,
              48,
              99,
              106,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              81,
              43,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              81,
              50,
              57,
              116,
              98,
              87,
              108,
              122,
              99,
              50,
              108,
              118,
              98,
              109,
              107,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              81,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              110,
              74,
              112,
              90,
              50,
              104,
              48,
              73,
              106,
              52,
              74,
              67,
              81,
              107,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              77,
              105,
              52,
              122,
              73,
              67,
              89,
              106,
              79,
              68,
              77,
              50,
              78,
              68,
              115,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              103,
              107,
              74,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              74,
              67,
              81,
              111,
              74,
              73,
              67,
              65,
              56,
              76,
              51,
              82,
              121,
              80,
              103,
              107,
              103,
              73,
              65,
              111,
              74,
              73,
              68,
              119,
              118,
              100,
              71,
              74,
              118,
              90,
              72,
              107,
              43,
              67,
              81,
              111,
              74,
              73,
              68,
              120,
              48,
              90,
              109,
              57,
              118,
              100,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              74,
              67,
              84,
              120,
              48,
              90,
              68,
              52,
              56,
              99,
              51,
              66,
              104,
              98,
              105,
              66,
              106,
              98,
              71,
              70,
              122,
              99,
              122,
              48,
              105,
              98,
              71,
              70,
              121,
              90,
              50,
              85,
              105,
              80,
              108,
              82,
              118,
              100,
              71,
              70,
              115,
              90,
              84,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              74,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              82,
              107,
              73,
              71,
              78,
              115,
              89,
              88,
              78,
              122,
              80,
              83,
              74,
              121,
              97,
              87,
              100,
              111,
              100,
              67,
              73,
              43,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              109,
              120,
              104,
              99,
              109,
              100,
              108,
              73,
              106,
              52,
              120,
              77,
              83,
              52,
              49,
              73,
              67,
              89,
              106,
              79,
              68,
              77,
              50,
              78,
              68,
              115,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              74,
              67,
              81,
              111,
              74,
              67,
              84,
              119,
              118,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              103,
              73,
              68,
              119,
              118,
              100,
              71,
              90,
              118,
              98,
              51,
              81,
              43,
              67,
              103,
              111,
              74,
              73,
              65,
              111,
              74,
              80,
              67,
              57,
              48,
              89,
              87,
              74,
              115,
              90,
              84,
              52,
              74,
              67,
              105,
              65,
              75,
              73,
              67,
              65,
              103,
              73,
              68,
              120,
              105,
              100,
              88,
              82,
              48,
              98,
              50,
              52,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              109,
              53,
              108,
              90,
              50,
              70,
              48,
              97,
              88,
              90,
              108,
              73,
              105,
              66,
              107,
              89,
              88,
              82,
              104,
              76,
              87,
              90,
              107,
              97,
              122,
              48,
              105,
              85,
              122,
              81,
              105,
              73,
              71,
              108,
              107,
              80,
              83,
              74,
              105,
              89,
              87,
              78,
              114,
              73,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              67,
              65,
              103,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              83,
              87,
              53,
              107,
              97,
              87,
              86,
              48,
              99,
              109,
              56,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              105,
              65,
              103,
              73,
              67,
              65,
              56,
              76,
              50,
              74,
              49,
              100,
              72,
              82,
              118,
              98,
              106,
              52,
              75,
              67,
              81,
              111,
              74,
              80,
              71,
              74,
              49,
              100,
              72,
              82,
              118,
              98,
              105,
              66,
              106,
              98,
              71,
              70,
              122,
              99,
              122,
              48,
              105,
              98,
              109,
              86,
              110,
              89,
              88,
              82,
              112,
              100,
              109,
              85,
              105,
              73,
              71,
              108,
              107,
              80,
              83,
              74,
              108,
              101,
              71,
              108,
              48,
              73,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              67,
              65,
              103,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              82,
              88,
              78,
              106,
              97,
              84,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              68,
              119,
              118,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              56,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              73,
              71,
              78,
              115,
              89,
              88,
              78,
              122,
              80,
              83,
              74,
              119,
              98,
              51,
              78,
              112,
              100,
              71,
              108,
              50,
              90,
              83,
              73,
              103,
              90,
              71,
              70,
              48,
              89,
              83,
              49,
              109,
              90,
              71,
              115,
              57,
              73,
              108,
              77,
              52,
              73,
              105,
              66,
              112,
              90,
              68,
              48,
              105,
              89,
              50,
              57,
              117,
              90,
              109,
              108,
              121,
              98,
              83,
              73,
              43,
              67,
              105,
              65,
              103,
              73,
              67,
              65,
              103,
              73,
              68,
              120,
              122,
              99,
              71,
              70,
              117,
              80,
              108,
              66,
              104,
              90,
              50,
              69,
              103,
              73,
              68,
              69,
              120,
              76,
              106,
              85,
              103,
              74,
              105,
              77,
              52,
              77,
              122,
              89,
              48,
              79,
              122,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              67,
              84,
              119,
              118,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              75,
              67,
              103,
              107,
              56,
              76,
              50,
              74,
              118,
              90,
              72,
              107,
              43,
              67,
              103,
              107,
              75,
              80,
              67,
              57,
              111,
              100,
              71,
              49,
              115,
              80,
              103,
              61,
              61,
              34,
              125,
              44,
              34,
              99,
              111,
              109,
              109,
              97,
              110,
              100,
              34,
              58,
              34,
              80,
              82,
              73,
              78,
              84,
              95,
              82,
              69,
              67,
              69,
              73,
              80,
              84,
              34,
              44,
              34,
              98,
              117,
              116,
              116,
              111,
              110,
              115,
              34,
              58,
              91,
              93,
              125,
              44,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              54,
              55,
              56,
              57,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              51,
              56,
              102,
              55,
              48,
              54,
              102,
              57,
              45,
              53,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              79,
              75,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              111,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              32,
              99,
              111,
              109,
              112,
              108,
              101,
              116,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 391,
          "responseSize": 1958
        },
        "id": "7f43f77b-6e4d-4e97-8093-b9a75c750bae",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e4debf22-4681-4d71-b7ad-792b02f09cd2",
          "length": 10,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ed40f08d-8177-41d8-b5f9-6b9b440af76f"
        },
        "item": {
          "id": "79a42293-ca5f-4795-986d-f3e0faca246c",
          "name": "Start process - END PROCESS",
          "request": {
            "description": {
              "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "main"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d13023c4-f06d-4d33-89b9-fa9f966f6a92",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "9923eec2-4653-4541-aff2-497d9ea6d7bb"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e8d931f7-aba1-4832-90e6-43b30513b0b5",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "494",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "d2a26dfa-0f68-442c-98ca-41f17f9bbf26",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "content-length",
              "value": "139"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              48,
              48,
              48,
              49,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              51,
              56,
              55,
              56,
              98,
              52,
              53,
              56,
              45,
              48,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              69,
              78,
              68,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              105,
              115,
              32,
              116,
              101,
              114,
              109,
              105,
              110,
              97,
              116,
              101,
              100,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 30,
          "responseSize": 139
        },
        "id": "79a42293-ca5f-4795-986d-f3e0faca246c",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b0dab45d-3ca1-4c8e-b059-678d80774b53",
          "length": 10,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f1c3606d-ab01-4471-a1dc-0a4514d8a86e"
        },
        "item": {
          "id": "c8dcb0b0-6d62-4b78-af7c-15f608973cab",
          "name": "Start process - PROCESSING",
          "request": {
            "description": {
              "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "main"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ca7bec97-c052-4913-94c5-107f8045ee27",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 202\", function () {",
                  "    pm.response.to.have.status(202);",
                  "});"
                ],
                "_lastExecutionId": "43634e3c-8f03-4f3e-9a24-bbda97ccee94"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3d17dae3-2e04-4f56-8d4d-201b9f25e2c3",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "494",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "0a6dabf6-1d4b-40bd-aded-bf1fe80ecb57",
          "status": "Accepted",
          "code": 202,
          "header": [
            {
              "key": "content-length",
              "value": "155"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              48,
              48,
              48,
              50,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              51,
              57,
              48,
              54,
              54,
              54,
              100,
              50,
              45,
              97,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              80,
              82,
              79,
              67,
              69,
              83,
              83,
              73,
              78,
              71,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              80,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              115,
              116,
              105,
              108,
              108,
              32,
              114,
              117,
              110,
              110,
              105,
              110,
              103,
              44,
              32,
              114,
              101,
              116,
              114,
              121,
              32,
              108,
              97,
              116,
              101,
              114,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 26,
          "responseSize": 155
        },
        "id": "c8dcb0b0-6d62-4b78-af7c-15f608973cab",
        "assertions": [
          {
            "assertion": "Status code is 202",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "21bf73d1-e5bd-4e58-92ee-93905802cae0",
          "length": 10,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5c869924-87ee-47a8-bd13-d0c0207c1bec"
        },
        "item": {
          "id": "d026f36b-4c5d-48da-b1f6-4f106dabbaa5",
          "name": "Start process - ERROR ON PROCESS",
          "request": {
            "description": {
              "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "main"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e4f526ae-930c-4667-8b49-e6279719eaef",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 209\", function () {",
                  "    pm.response.to.have.status(209);",
                  "});"
                ],
                "_lastExecutionId": "c6f6ed04-cfee-4249-b272-e0741c963775"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f32dd397-e18a-477a-baf0-bd2f3f1f6565",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "494",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "75483e66-5d7c-48cc-862d-ba460cb6791b",
          "status": "Success (209)",
          "code": 209,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            },
            {
              "key": "content-length",
              "value": "90"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              80,
              82,
              79,
              67,
              69,
              83,
              83,
              95,
              69,
              82,
              82,
              79,
              82,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              69,
              114,
              114,
              111,
              114,
              32,
              119,
              104,
              105,
              108,
              101,
              32,
              114,
              117,
              110,
              110,
              105,
              110,
              103,
              32,
              116,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              50,
              48,
              57,
              125
            ]
          },
          "cookie": [],
          "responseTime": 31,
          "responseSize": 90
        },
        "id": "d026f36b-4c5d-48da-b1f6-4f106dabbaa5",
        "assertions": [
          {
            "assertion": "Status code is 209",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "145dcce2-2a3a-4e5a-8b60-578155e6ff6d",
          "length": 10,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2e2f48c9-de79-48d4-8f11-e7c6f818da82"
        },
        "item": {
          "id": "b98046f2-2e13-4d7d-a502-5c1d7415af97",
          "name": "Start process - EXCEPTION ON PROCESS",
          "request": {
            "description": {
              "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "main"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "054099fc-441f-4262-8312-32bc0fc8b4cf",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 500\", function () {",
                  "    pm.response.to.have.status(500);",
                  "});"
                ],
                "_lastExecutionId": "6b3a3b21-47f0-4646-9ab6-24264968fb4f"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d21e0c90-f885-4ded-953e-65b9e80fb90b",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "494",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "86079c1b-b336-4c6e-b9ac-4f3207cbdaa3",
          "status": "Internal Server Error",
          "code": 500,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            },
            {
              "key": "content-length",
              "value": "80"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              84,
              65,
              83,
              75,
              95,
              69,
              82,
              82,
              79,
              82,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              69,
              114,
              114,
              111,
              114,
              32,
              114,
              101,
              116,
              114,
              105,
              101,
              118,
              101,
              32,
              110,
              101,
              120,
              116,
              32,
              115,
              116,
              101,
              112,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              53,
              48,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 26,
          "responseSize": 80
        },
        "id": "b98046f2-2e13-4d7d-a502-5c1d7415af97",
        "assertions": [
          {
            "assertion": "Status code is 500",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ac31e5b6-3841-4f11-8b5d-2e622b177269",
          "length": 10,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f5c665d5-3c39-4ad2-a1fb-8de76c9edf31"
        },
        "item": {
          "id": "a68fcfc1-6b4c-4a22-8af0-977770195589",
          "name": "Next - CREATED",
          "request": {
            "description": {
              "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "next",
                "trns",
                "06789-12345-0001-64874412-1698769800000-363cc36d-0"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d8f8dbfa-1526-43ea-8b7f-5f6e7153dc1e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ],
                "_lastExecutionId": "4b44b0d8-7c02-4041-85c7-8f3b5b3cea0c"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "06789-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "8d8f908d-e6b4-4119-a7e2-b3ec1348111c",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "680",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "cd1941de-aea1-4dd3-9fd8-c9ff2f1cce85",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "content-length",
              "value": "1958"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              97,
              115,
              107,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              116,
              101,
              115,
              116,
              49,
              34,
              58,
              34,
              100,
              97,
              116,
              97,
              49,
              34,
              125,
              44,
              34,
              111,
              110,
              69,
              114,
              114,
              111,
              114,
              34,
              58,
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              44,
              34,
              116,
              105,
              109,
              101,
              111,
              117,
              116,
              34,
              58,
              53,
              48,
              44,
              34,
              111,
              110,
              84,
              105,
              109,
              101,
              111,
              117,
              116,
              34,
              58,
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              44,
              34,
              116,
              101,
              109,
              112,
              108,
              97,
              116,
              101,
              34,
              58,
              123,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              68,
              57,
              52,
              98,
              87,
              119,
              103,
              100,
              109,
              86,
              121,
              99,
              50,
              108,
              118,
              98,
              106,
              48,
              105,
              77,
              83,
              52,
              119,
              73,
              105,
              66,
              108,
              98,
              109,
              78,
              118,
              90,
              71,
              108,
              117,
              90,
              122,
              48,
              105,
              97,
              88,
              78,
              118,
              76,
              84,
              103,
              52,
              78,
              84,
              107,
              116,
              77,
              83,
              73,
              47,
              80,
              103,
              111,
              56,
              73,
              85,
              82,
              80,
              81,
              49,
              82,
              90,
              85,
              69,
              85,
              103,
              97,
              72,
              82,
              116,
              98,
              67,
              66,
              81,
              86,
              85,
              74,
              77,
              83,
              85,
              77,
              103,
              73,
              105,
              48,
              118,
              76,
              49,
              99,
              122,
              81,
              121,
              56,
              118,
              82,
              70,
              82,
              69,
              73,
              70,
              104,
              73,
              86,
              69,
              49,
              77,
              73,
              68,
              69,
              117,
              77,
              67,
              66,
              85,
              99,
              109,
              70,
              117,
              99,
              50,
              108,
              48,
              97,
              87,
              57,
              117,
              89,
              87,
              119,
              118,
              76,
              48,
              86,
              79,
              73,
              105,
              65,
              105,
              97,
              72,
              82,
              48,
              99,
              68,
              111,
              118,
              76,
              51,
              100,
              51,
              100,
              121,
              53,
              51,
              77,
              121,
              53,
              118,
              99,
              109,
              99,
              118,
              86,
              70,
              73,
              118,
              101,
              71,
              104,
              48,
              98,
              87,
              119,
              120,
              76,
              48,
              82,
              85,
              82,
              67,
              57,
              52,
              97,
              72,
              82,
              116,
              98,
              68,
              69,
              116,
              100,
              72,
              74,
              104,
              98,
              110,
              78,
              112,
              100,
              71,
              108,
              118,
              98,
              109,
              70,
              115,
              76,
              109,
              82,
              48,
              90,
              67,
              73,
              43,
              67,
              106,
              120,
              111,
              100,
              71,
              49,
              115,
              73,
              72,
              104,
              116,
              98,
              71,
              53,
              122,
              80,
              83,
              74,
              111,
              100,
              72,
              82,
              119,
              79,
              105,
              56,
              118,
              100,
              51,
              100,
              51,
              76,
              110,
              99,
              122,
              76,
              109,
              57,
              121,
              90,
              121,
              56,
              120,
              79,
              84,
              107,
              53,
              76,
              51,
              104,
              111,
              100,
              71,
              49,
              115,
              73,
              106,
              52,
              75,
              80,
              71,
              104,
              108,
              89,
              87,
              81,
              43,
              80,
              71,
              120,
              112,
              98,
              109,
              115,
              103,
              99,
              109,
              86,
              115,
              80,
              83,
              74,
              122,
              100,
              72,
              108,
              115,
              90,
              88,
              78,
              111,
              90,
              87,
              86,
              48,
              73,
              105,
              66,
              111,
              99,
              109,
              86,
              109,
              80,
              83,
              74,
              106,
              99,
              51,
              77,
              118,
              90,
              87,
              49,
              49,
              98,
              71,
              70,
              48,
              98,
              51,
              74,
              108,
              76,
              109,
              78,
              122,
              99,
              121,
              73,
              103,
              76,
              122,
              52,
              56,
              76,
              50,
              104,
              108,
              89,
              87,
              81,
              43,
              67,
              106,
              120,
              105,
              98,
              50,
              82,
              53,
              80,
              103,
              111,
              74,
              80,
              71,
              108,
              116,
              90,
              121,
              66,
              112,
              90,
              68,
              48,
              105,
              98,
              71,
              57,
              110,
              98,
              121,
              73,
              103,
              99,
              51,
              74,
              106,
              80,
              83,
              74,
              111,
              100,
              72,
              82,
              119,
              99,
              122,
              111,
              118,
              76,
              50,
              81,
              121,
              101,
              71,
              82,
              49,
              101,
              84,
              100,
              48,
              89,
              109,
              100,
              49,
              77,
              109,
              81,
              122,
              76,
              109,
              78,
              115,
              98,
              51,
              86,
              107,
              90,
              110,
              74,
              118,
              98,
              110,
              81,
              117,
              98,
              109,
              86,
              48,
              76,
              50,
              90,
              112,
              98,
              71,
              86,
              122,
              76,
              48,
              108,
              68,
              84,
              48,
              52,
              118,
              90,
              71,
              86,
              109,
              89,
              88,
              86,
              115,
              100,
              70,
              57,
              115,
              98,
              50,
              100,
              118,
              76,
              110,
              78,
              50,
              90,
              121,
              73,
              103,
              76,
              122,
              52,
              75,
              67,
              84,
              120,
              111,
              77,
              84,
              53,
              84,
              90,
              88,
              74,
              50,
              97,
              88,
              112,
              112,
              73,
              71,
              82,
              112,
              73,
              72,
              66,
              49,
              89,
              109,
              74,
              115,
              97,
              87,
              78,
              104,
              73,
              72,
              86,
              48,
              97,
              87,
              120,
              112,
              100,
              67,
              89,
              106,
              77,
              106,
              73,
              48,
              79,
              122,
              119,
              118,
              97,
              68,
              69,
              43,
              67,
              81,
              111,
              74,
              67,
              103,
              107,
              56,
              97,
              68,
              73,
              43,
              85,
              109,
              108,
              108,
              99,
              71,
              108,
              115,
              98,
              50,
              100,
              118,
              73,
              71,
              82,
              108,
              98,
              67,
              66,
              119,
              89,
              87,
              100,
              104,
              98,
              87,
              86,
              117,
              100,
              71,
              56,
              56,
              76,
              50,
              103,
              121,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              56,
              100,
              71,
              70,
              105,
              98,
              71,
              85,
              103,
              97,
              87,
              81,
              57,
              73,
              110,
              82,
              104,
              89,
              109,
              120,
              108,
              73,
              106,
              52,
              75,
              67,
              84,
              120,
              48,
              97,
              71,
              86,
              104,
              90,
              68,
              52,
              75,
              67,
              83,
              65,
              56,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              74,
              80,
              72,
              82,
              111,
              80,
              103,
              111,
              74,
              67,
              81,
              107,
              56,
              99,
              51,
              66,
              104,
              98,
              106,
              53,
              66,
              100,
              88,
              74,
              112,
              90,
              50,
              69,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              103,
              107,
              74,
              80,
              67,
              57,
              48,
              97,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              103,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              110,
              74,
              112,
              90,
              50,
              104,
              48,
              73,
              106,
              52,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              77,
              84,
              65,
              119,
              77,
              68,
              65,
              103,
              74,
              105,
              77,
              52,
              77,
              122,
              89,
              48,
              79,
              122,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              67,
              81,
              107,
              56,
              76,
              51,
              82,
              111,
              80,
              103,
              107,
              74,
              67,
              103,
              107,
              103,
              73,
              68,
              119,
              118,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              56,
              76,
              51,
              82,
              111,
              90,
              87,
              70,
              107,
              80,
              103,
              111,
              75,
              67,
              84,
              120,
              48,
              89,
              109,
              57,
              107,
              101,
              84,
              52,
              74,
              67,
              103,
              107,
              103,
              73,
              68,
              120,
              48,
              99,
              106,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              81,
              43,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              81,
              50,
              57,
              116,
              98,
              87,
              108,
              122,
              99,
              50,
              108,
              118,
              98,
              109,
              107,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              81,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              110,
              74,
              112,
              90,
              50,
              104,
              48,
              73,
              106,
              52,
              74,
              67,
              81,
              107,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              77,
              105,
              52,
              122,
              73,
              67,
              89,
              106,
              79,
              68,
              77,
              50,
              78,
              68,
              115,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              103,
              107,
              74,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              74,
              67,
              81,
              111,
              74,
              73,
              67,
              65,
              56,
              76,
              51,
              82,
              121,
              80,
              103,
              107,
              103,
              73,
              65,
              111,
              74,
              73,
              68,
              119,
              118,
              100,
              71,
              74,
              118,
              90,
              72,
              107,
              43,
              67,
              81,
              111,
              74,
              73,
              68,
              120,
              48,
              90,
              109,
              57,
              118,
              100,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              74,
              67,
              84,
              120,
              48,
              90,
              68,
              52,
              56,
              99,
              51,
              66,
              104,
              98,
              105,
              66,
              106,
              98,
              71,
              70,
              122,
              99,
              122,
              48,
              105,
              98,
              71,
              70,
              121,
              90,
              50,
              85,
              105,
              80,
              108,
              82,
              118,
              100,
              71,
              70,
              115,
              90,
              84,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              74,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              82,
              107,
              73,
              71,
              78,
              115,
              89,
              88,
              78,
              122,
              80,
              83,
              74,
              121,
              97,
              87,
              100,
              111,
              100,
              67,
              73,
              43,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              109,
              120,
              104,
              99,
              109,
              100,
              108,
              73,
              106,
              52,
              120,
              77,
              83,
              52,
              49,
              73,
              67,
              89,
              106,
              79,
              68,
              77,
              50,
              78,
              68,
              115,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              74,
              67,
              81,
              111,
              74,
              67,
              84,
              119,
              118,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              103,
              73,
              68,
              119,
              118,
              100,
              71,
              90,
              118,
              98,
              51,
              81,
              43,
              67,
              103,
              111,
              74,
              73,
              65,
              111,
              74,
              80,
              67,
              57,
              48,
              89,
              87,
              74,
              115,
              90,
              84,
              52,
              74,
              67,
              105,
              65,
              75,
              73,
              67,
              65,
              103,
              73,
              68,
              120,
              105,
              100,
              88,
              82,
              48,
              98,
              50,
              52,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              109,
              53,
              108,
              90,
              50,
              70,
              48,
              97,
              88,
              90,
              108,
              73,
              105,
              66,
              107,
              89,
              88,
              82,
              104,
              76,
              87,
              90,
              107,
              97,
              122,
              48,
              105,
              85,
              122,
              81,
              105,
              73,
              71,
              108,
              107,
              80,
              83,
              74,
              105,
              89,
              87,
              78,
              114,
              73,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              67,
              65,
              103,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              83,
              87,
              53,
              107,
              97,
              87,
              86,
              48,
              99,
              109,
              56,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              105,
              65,
              103,
              73,
              67,
              65,
              56,
              76,
              50,
              74,
              49,
              100,
              72,
              82,
              118,
              98,
              106,
              52,
              75,
              67,
              81,
              111,
              74,
              80,
              71,
              74,
              49,
              100,
              72,
              82,
              118,
              98,
              105,
              66,
              106,
              98,
              71,
              70,
              122,
              99,
              122,
              48,
              105,
              98,
              109,
              86,
              110,
              89,
              88,
              82,
              112,
              100,
              109,
              85,
              105,
              73,
              71,
              108,
              107,
              80,
              83,
              74,
              108,
              101,
              71,
              108,
              48,
              73,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              67,
              65,
              103,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              82,
              88,
              78,
              106,
              97,
              84,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              68,
              119,
              118,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              56,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              73,
              71,
              78,
              115,
              89,
              88,
              78,
              122,
              80,
              83,
              74,
              119,
              98,
              51,
              78,
              112,
              100,
              71,
              108,
              50,
              90,
              83,
              73,
              103,
              90,
              71,
              70,
              48,
              89,
              83,
              49,
              109,
              90,
              71,
              115,
              57,
              73,
              108,
              77,
              52,
              73,
              105,
              66,
              112,
              90,
              68,
              48,
              105,
              89,
              50,
              57,
              117,
              90,
              109,
              108,
              121,
              98,
              83,
              73,
              43,
              67,
              105,
              65,
              103,
              73,
              67,
              65,
              103,
              73,
              68,
              120,
              122,
              99,
              71,
              70,
              117,
              80,
              108,
              66,
              104,
              90,
              50,
              69,
              103,
              73,
              68,
              69,
              120,
              76,
              106,
              85,
              103,
              74,
              105,
              77,
              52,
              77,
              122,
              89,
              48,
              79,
              122,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              67,
              84,
              119,
              118,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              75,
              67,
              103,
              107,
              56,
              76,
              50,
              74,
              118,
              90,
              72,
              107,
              43,
              67,
              103,
              107,
              75,
              80,
              67,
              57,
              111,
              100,
              71,
              49,
              115,
              80,
              103,
              61,
              61,
              34,
              125,
              44,
              34,
              99,
              111,
              109,
              109,
              97,
              110,
              100,
              34,
              58,
              34,
              80,
              82,
              73,
              78,
              84,
              95,
              82,
              69,
              67,
              69,
              73,
              80,
              84,
              34,
              44,
              34,
              98,
              117,
              116,
              116,
              111,
              110,
              115,
              34,
              58,
              91,
              93,
              125,
              44,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              54,
              55,
              56,
              57,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              51,
              54,
              51,
              99,
              99,
              51,
              54,
              100,
              45,
              48,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              79,
              75,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              111,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              32,
              99,
              111,
              109,
              112,
              108,
              101,
              116,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 32,
          "responseSize": 1958
        },
        "id": "a68fcfc1-6b4c-4a22-8af0-977770195589",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "745c64ee-aff9-4a65-8a39-9982c2108e6e",
          "length": 10,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1e9c110f-c417-4636-a5ae-95064d3bd08b"
        },
        "item": {
          "id": "c6464069-0043-4fe5-b030-a571fc683216",
          "name": "Next - END PROCESS",
          "request": {
            "description": {
              "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "next",
                "trns",
                "00001-12345-0001-64874412-1698769800000-363cc36d-0"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5c2e307f-69ce-4958-9209-3fa930486796",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "4070a611-67f2-4cdc-886b-c3302f129c59"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00001-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "366d2a5d-b238-423b-844c-837e4533b0e9",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "680",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "7b4b5a29-0e8f-49ad-8eaf-9c5d671442eb",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "content-length",
              "value": "139"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              48,
              48,
              48,
              49,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              51,
              54,
              51,
              99,
              99,
              51,
              54,
              100,
              45,
              48,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              69,
              78,
              68,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              105,
              115,
              32,
              116,
              101,
              114,
              109,
              105,
              110,
              97,
              116,
              101,
              100,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 32,
          "responseSize": 139
        },
        "id": "c6464069-0043-4fe5-b030-a571fc683216",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e7400165-c8b6-4cf0-944a-37cf4b24924e",
          "length": 10,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "99762fcb-8e41-408c-968b-3dca2693e728"
        },
        "item": {
          "id": "8c1d7c53-b968-44c5-b5d4-8d045d77d2ab",
          "name": "Next - PROCESSING",
          "request": {
            "description": {
              "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "next",
                "trns",
                "00002-12345-0001-64874412-1698769800000-363cc36d-0"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b0745372-ea74-4763-b29e-f2b9c7cfe612",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 202\", function () {",
                  "    pm.response.to.have.status(202);",
                  "});"
                ],
                "_lastExecutionId": "985dbe1a-85e6-4a9a-939f-b5e563aeb067"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00002-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "360e2e23-d348-437a-9ed2-c95b5dfb4c9e",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "680",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "63f03e65-9802-49f9-b54b-4d78cfadf0b8",
          "status": "Accepted",
          "code": 202,
          "header": [
            {
              "key": "content-length",
              "value": "155"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              48,
              48,
              48,
              50,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              51,
              54,
              51,
              99,
              99,
              51,
              54,
              100,
              45,
              48,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              80,
              82,
              79,
              67,
              69,
              83,
              83,
              73,
              78,
              71,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              80,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              115,
              116,
              105,
              108,
              108,
              32,
              114,
              117,
              110,
              110,
              105,
              110,
              103,
              44,
              32,
              114,
              101,
              116,
              114,
              121,
              32,
              108,
              97,
              116,
              101,
              114,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 22,
          "responseSize": 155
        },
        "id": "8c1d7c53-b968-44c5-b5d4-8d045d77d2ab",
        "assertions": [
          {
            "assertion": "Status code is 202",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e7546117-c093-4f45-a7ab-4dad216eed58",
          "length": 10,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5c7fbf5b-8047-4a07-afdf-cc8bfb1ee370"
        },
        "item": {
          "id": "38a0c476-b8b0-47d9-8184-cdb5bd2ab2f3",
          "name": "Next - ERROR ON PROCESS",
          "request": {
            "description": {
              "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "next",
                "trns",
                "00003-12345-0001-64874412-1698769800000-363cc36d-0"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d4b8cc4f-398c-42ad-974c-e754e830a860",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 209\", function () {",
                  "    pm.response.to.have.status(209);",
                  "});"
                ],
                "_lastExecutionId": "faf4b795-a13d-4c1e-a5ab-51c34bf9a443"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00003-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b9f35fb3-9027-4f2a-b6a1-d028d1480e57",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "680",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "8ed9e135-d33c-4a2a-b4c0-24d099012c8d",
          "status": "Success (209)",
          "code": 209,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            },
            {
              "key": "content-length",
              "value": "90"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              80,
              82,
              79,
              67,
              69,
              83,
              83,
              95,
              69,
              82,
              82,
              79,
              82,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              69,
              114,
              114,
              111,
              114,
              32,
              119,
              104,
              105,
              108,
              101,
              32,
              114,
              117,
              110,
              110,
              105,
              110,
              103,
              32,
              116,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              50,
              48,
              57,
              125
            ]
          },
          "cookie": [],
          "responseTime": 20,
          "responseSize": 90
        },
        "id": "38a0c476-b8b0-47d9-8184-cdb5bd2ab2f3",
        "assertions": [
          {
            "assertion": "Status code is 209",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e923f2e9-9d8f-4606-8784-24c58cd778ed",
          "length": 10,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9842d785-c9cc-4464-83f6-a52b25e6e184"
        },
        "item": {
          "id": "f5ce6d98-366e-4046-bcdc-909db6db4823",
          "name": "Next - EXCEPTION ON PROCESS",
          "request": {
            "description": {
              "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "next",
                "trns",
                "00004-12345-0001-64874412-1698769800000-363cc36d-0"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cd507c4c-33ca-45c2-841b-461bb1f3a6f6",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 500\", function () {",
                  "    pm.response.to.have.status(500);",
                  "});"
                ],
                "_lastExecutionId": "bdbd8f07-2b07-4df7-8ffd-ec09fcda94ca"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00004-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "498c6dc8-dc4c-4cb2-a34d-f0855cebbefc",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "680",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "743a783e-1ae5-4095-afa9-fd65be282ec2",
          "status": "Internal Server Error",
          "code": 500,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            },
            {
              "key": "content-length",
              "value": "80"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              84,
              65,
              83,
              75,
              95,
              69,
              82,
              82,
              79,
              82,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              69,
              114,
              114,
              111,
              114,
              32,
              114,
              101,
              116,
              114,
              105,
              101,
              118,
              101,
              32,
              110,
              101,
              120,
              116,
              32,
              115,
              116,
              101,
              112,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              53,
              48,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 22,
          "responseSize": 80
        },
        "id": "f5ce6d98-366e-4046-bcdc-909db6db4823",
        "assertions": [
          {
            "assertion": "Status code is 500",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 4844
    },
    "failures": [],
    "error": null
  }
}