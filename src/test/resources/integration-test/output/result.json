{
  "collection": {
    "_": {
      "postman_id": "14aeea16-40c2-4ae8-bfa9-4015bae6dacd",
      "exporter_id": "25309445"
    },
    "item": [
      {
        "id": "66a69659-26f8-4932-ba8a-0b9b7b47a347",
        "name": "Start process - CREATED",
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "2a2fa4af-d33f-47f4-ba08-2e0e25b39247",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 201\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "dac73459-4660-496c-86fc-c8945d16cdc9"
            }
          }
        ]
      },
      {
        "id": "55e5a384-1ac1-43d3-9749-d33224fcdc9d",
        "name": "Start process - END PROCESS",
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "e4040a2f-723d-4e05-917c-4ae15de62412",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "3321c20c-d25b-4007-b1f7-fd009ec4eadd"
            }
          }
        ]
      },
      {
        "id": "aeaf3d2e-7518-4d7f-a281-009febfd0bee",
        "name": "Start process - PROCESSING",
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "852a789d-35e8-41eb-96de-7f328bc4f646",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 202\", function () {",
                "    pm.response.to.have.status(202);",
                "});"
              ],
              "_lastExecutionId": "5af3bb30-09c6-4270-9519-66db386a668c"
            }
          }
        ]
      },
      {
        "id": "badd6925-786f-42eb-85c4-e1ca3dab2750",
        "name": "Start process - ERROR ON PROCESS",
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "8ef63692-cacd-457f-ad95-2047c7236802",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 209\", function () {",
                "    pm.response.to.have.status(209);",
                "});"
              ],
              "_lastExecutionId": "52ae21a4-36cd-4564-8e4a-474225c50664"
            }
          }
        ]
      },
      {
        "id": "dd9c744b-3ad9-4e41-91d9-60a306ad6d1c",
        "name": "Start process - EXCEPTION ON PROCESS",
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "ab301454-6a91-430b-99e5-fcbb2586707a",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 500\", function () {",
                "    pm.response.to.have.status(500);",
                "});"
              ],
              "_lastExecutionId": "1fc6a722-f622-41d3-97d6-c699da9a4a09"
            }
          }
        ]
      },
      {
        "id": "70ca5dac-91f2-4ad6-b1eb-1915603d4819",
        "name": "Next - CREATED",
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "06789-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "92fcc9ba-7a98-4262-9e02-b2e326e00f9d",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 201\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "1e7eef4d-28a1-4dd9-a31a-a9db325603cd"
            }
          }
        ]
      },
      {
        "id": "ebd1cb42-21c1-4df5-8bb3-44b07fd44db3",
        "name": "Next - END PROCESS",
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00001-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "43117a8e-0a23-45c2-9874-7997b39ded58",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "6fb3a982-fabd-49ec-a217-614e546860b4"
            }
          }
        ]
      },
      {
        "id": "1b1a7081-5e62-41ba-9fe7-73b67553253e",
        "name": "Next - PROCESSING",
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00002-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "54b9b8a0-7b52-42d6-838c-b570b71bc35d",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 202\", function () {",
                "    pm.response.to.have.status(202);",
                "});"
              ],
              "_lastExecutionId": "e9fc2c93-7587-4b47-b584-b65b7b0bbad5"
            }
          }
        ]
      },
      {
        "id": "fee6830e-1769-4adb-a2cd-1fbb90e1d8ff",
        "name": "Next - ERROR ON PROCESS",
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00003-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "32ecd508-ad4a-42f5-9993-502e20c66efc",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 209\", function () {",
                "    pm.response.to.have.status(209);",
                "});"
              ],
              "_lastExecutionId": "89c1b012-063b-4928-b752-06f51277f2f9"
            }
          }
        ]
      },
      {
        "id": "aadc5c6c-e6a5-4413-b13b-3f690c12eaaf",
        "name": "Next - EXCEPTION ON PROCESS",
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00004-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "3d258de0-55b2-4d90-bebd-4ae9679714b6",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 500\", function () {",
                "    pm.response.to.have.status(500);",
                "});"
              ],
              "_lastExecutionId": "8f14c58e-a835-4311-90ec-e74a4d4b48ae"
            }
          }
        ]
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "2e8c0ccd-7b7f-45ef-987e-fa38e1a56d5d",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "ab33c134-98de-4d35-9631-4382a0b38e6c"
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "19f3f668-f3b8-4e45-b927-d32ba5c4587a",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "e3ee6768-0faf-49ab-adad-1c49c9f00c77"
        }
      }
    ],
    "variable": [
      {
        "type": "any",
        "value": "",
        "key": "token"
      },
      {
        "type": "any",
        "value": "https://postman-integration-testing.glitch.me/",
        "key": "baseUrl"
      }
    ],
    "info": {
      "_postman_id": "14aeea16-40c2-4ae8-bfa9-4015bae6dacd",
      "name": "integration_test_task",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "# ⛓️ Get started here\n\nPostman allows you to test your APIs using simple [Javascript code](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/). You can evaluate your response body, headers, cookies, and more using the [ChaiJS BDD](https://www.chaijs.com/api/bdd/) syntax.\n\nThis template guides you through the process of setting up an integration test to ensure that all individual components of an API function together seamlessly.\n\nThe API under test in this collection includes three endpoints for registering and receiving a token, accessing your unique generated name, and unregistering a token:\n\n- POST `/register`\n- POST `/unregister`\n- GET `/my-name`\n    \n\nBy setting up requests in the order of the operation, we can test the flow of data to and from the endpoints and ensure they work together as expected. We also verify that the data persists between requests on the back end.\n\n## 🔖 **How to use this template**\n\n**Step 1:** Check out the requests' documentation to learn more about -\n\n- what each request is meant to do.\n- the tests we've added against each one.\n    \n\n**Step 2:** Run this collection by clicking on \"Run\" or the by using the [Collection Runner](https://learning.postman.com/docs/collections/running-collections/intro-to-collection-runs/).\n\n<img src=\"https://content.pstmn.io/84019b0f-69c8-4c5f-98b9-2c90a6f9a0b1/Y29sbGVjdGlvbi1ydW5uZXItYnV0dG9uLmpwZWc=\" width=\"266\" height=\"103\">\n\n**Step 3:** To customize this template, replace the request URLs with your API endpoints and add or edit the tests if needed.\n\n## 💡Related templates\n\n[Regression testing](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=7ab0f80e-a964-46ee-b948-4a4e3a85809c&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)  \n[Performance testing](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=3302192d-87dd-4612-b381-61894de21203&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)  \n[Contract testing](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=42247877-8529-429d-acba-4de20c3b5b3b&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)  \n[Conditional workflow](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=78475d97-9a36-4731-ab24-9adf6a94d0fb&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)  \n[Mock data generation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=da8ceebc-d4da-478c-ab8a-37634faefc74&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)  \n[Common API vulnerabilities check](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e1edbae8-6429-453d-890e-00385eea1811&sourceTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a)",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "id": "fb3ad406-9cb5-4e86-887e-8453597f4529",
    "values": [
      {
        "type": "any",
        "value": "http://host.testcontainers.internal:8086",
        "key": "baseUrl"
      }
    ]
  },
  "globals": {
    "id": "16c0c20f-c7af-4692-8516-328c94d573f3",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 30,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 20,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 10,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 61.8,
      "responseMin": 16,
      "responseMax": 419,
      "responseSd": 119.1367281739766,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1712650063849,
      "completed": 1712650064701
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 10,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e9b15b2b-72c9-447b-9236-803180c77744",
          "httpRequestId": "8102f9ec-7c0d-4394-8231-62450269b933"
        },
        "item": {
          "id": "66a69659-26f8-4932-ba8a-0b9b7b47a347",
          "name": "Start process - CREATED",
          "request": {
            "description": {
              "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "main"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2a2fa4af-d33f-47f4-ba08-2e0e25b39247",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ],
                "_lastExecutionId": "dac73459-4660-496c-86fc-c8945d16cdc9"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7231f70a-762b-4e5e-9d8f-430f8ca6636c",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "494",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "ff29ce3d-5f04-4b5c-98e2-b04dec0033bd",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "content-length",
              "value": "2112"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              97,
              115,
              107,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              116,
              101,
              115,
              116,
              49,
              34,
              58,
              34,
              100,
              97,
              116,
              97,
              49,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              98,
              108,
              101,
              49,
              34,
              58,
              34,
              49,
              49,
              46,
              53,
              48,
              34,
              44,
              34,
              97,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              101,
              34,
              58,
              34,
              49,
              49,
              46,
              53,
              34,
              44,
              34,
              102,
              101,
              101,
              34,
              58,
              34,
              50,
              46,
              51,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              122,
              105,
              111,
              110,
              101,
              34,
              44,
              34,
              99,
              111,
              109,
              112,
              97,
              110,
              121,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              44,
              34,
              111,
              110,
              69,
              114,
              114,
              111,
              114,
              34,
              58,
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              44,
              34,
              116,
              105,
              109,
              101,
              111,
              117,
              116,
              34,
              58,
              53,
              48,
              44,
              34,
              111,
              110,
              84,
              105,
              109,
              101,
              111,
              117,
              116,
              34,
              58,
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              44,
              34,
              116,
              101,
              109,
              112,
              108,
              97,
              116,
              101,
              34,
              58,
              123,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              68,
              57,
              52,
              98,
              87,
              119,
              103,
              100,
              109,
              86,
              121,
              99,
              50,
              108,
              118,
              98,
              106,
              48,
              105,
              77,
              83,
              52,
              119,
              73,
              105,
              66,
              108,
              98,
              109,
              78,
              118,
              90,
              71,
              108,
              117,
              90,
              122,
              48,
              105,
              97,
              88,
              78,
              118,
              76,
              84,
              103,
              52,
              78,
              84,
              107,
              116,
              77,
              83,
              73,
              47,
              80,
              103,
              111,
              56,
              73,
              85,
              82,
              80,
              81,
              49,
              82,
              90,
              85,
              69,
              85,
              103,
              97,
              72,
              82,
              116,
              98,
              67,
              66,
              81,
              86,
              85,
              74,
              77,
              83,
              85,
              77,
              103,
              73,
              105,
              48,
              118,
              76,
              49,
              99,
              122,
              81,
              121,
              56,
              118,
              82,
              70,
              82,
              69,
              73,
              70,
              104,
              73,
              86,
              69,
              49,
              77,
              73,
              68,
              69,
              117,
              77,
              67,
              66,
              85,
              99,
              109,
              70,
              117,
              99,
              50,
              108,
              48,
              97,
              87,
              57,
              117,
              89,
              87,
              119,
              118,
              76,
              48,
              86,
              79,
              73,
              105,
              65,
              105,
              97,
              72,
              82,
              48,
              99,
              68,
              111,
              118,
              76,
              51,
              100,
              51,
              100,
              121,
              53,
              51,
              77,
              121,
              53,
              118,
              99,
              109,
              99,
              118,
              86,
              70,
              73,
              118,
              101,
              71,
              104,
              48,
              98,
              87,
              119,
              120,
              76,
              48,
              82,
              85,
              82,
              67,
              57,
              52,
              97,
              72,
              82,
              116,
              98,
              68,
              69,
              116,
              100,
              72,
              74,
              104,
              98,
              110,
              78,
              112,
              100,
              71,
              108,
              118,
              98,
              109,
              70,
              115,
              76,
              109,
              82,
              48,
              90,
              67,
              73,
              43,
              67,
              106,
              120,
              111,
              100,
              71,
              49,
              115,
              73,
              72,
              104,
              116,
              98,
              71,
              53,
              122,
              80,
              83,
              74,
              111,
              100,
              72,
              82,
              119,
              79,
              105,
              56,
              118,
              100,
              51,
              100,
              51,
              76,
              110,
              99,
              122,
              76,
              109,
              57,
              121,
              90,
              121,
              56,
              120,
              79,
              84,
              107,
              53,
              76,
              51,
              104,
              111,
              100,
              71,
              49,
              115,
              73,
              106,
              52,
              75,
              80,
              71,
              104,
              108,
              89,
              87,
              81,
              43,
              80,
              71,
              120,
              112,
              98,
              109,
              115,
              103,
              99,
              109,
              86,
              115,
              80,
              83,
              74,
              122,
              100,
              72,
              108,
              115,
              90,
              88,
              78,
              111,
              90,
              87,
              86,
              48,
              73,
              105,
              66,
              111,
              99,
              109,
              86,
              109,
              80,
              83,
              74,
              106,
              99,
              51,
              77,
              118,
              90,
              87,
              49,
              49,
              98,
              71,
              70,
              48,
              98,
              51,
              74,
              108,
              76,
              109,
              78,
              122,
              99,
              121,
              73,
              103,
              76,
              122,
              52,
              56,
              76,
              50,
              104,
              108,
              89,
              87,
              81,
              43,
              67,
              106,
              120,
              105,
              98,
              50,
              82,
              53,
              80,
              103,
              111,
              74,
              80,
              71,
              108,
              116,
              90,
              121,
              66,
              112,
              90,
              68,
              48,
              105,
              98,
              71,
              57,
              110,
              98,
              121,
              73,
              103,
              99,
              51,
              74,
              106,
              80,
              83,
              74,
              111,
              100,
              72,
              82,
              119,
              99,
              122,
              111,
              118,
              76,
              50,
              81,
              121,
              101,
              71,
              82,
              49,
              101,
              84,
              100,
              48,
              89,
              109,
              100,
              49,
              77,
              109,
              81,
              122,
              76,
              109,
              78,
              115,
              98,
              51,
              86,
              107,
              90,
              110,
              74,
              118,
              98,
              110,
              81,
              117,
              98,
              109,
              86,
              48,
              76,
              50,
              90,
              112,
              98,
              71,
              86,
              122,
              76,
              48,
              108,
              68,
              84,
              48,
              52,
              118,
              90,
              71,
              86,
              109,
              89,
              88,
              86,
              115,
              100,
              70,
              57,
              115,
              98,
              50,
              100,
              118,
              76,
              110,
              78,
              50,
              90,
              121,
              73,
              103,
              76,
              122,
              52,
              75,
              67,
              84,
              120,
              111,
              77,
              84,
              53,
              84,
              90,
              88,
              74,
              50,
              97,
              88,
              112,
              112,
              73,
              71,
              82,
              112,
              73,
              72,
              66,
              49,
              89,
              109,
              74,
              115,
              97,
              87,
              78,
              104,
              73,
              72,
              86,
              48,
              97,
              87,
              120,
              112,
              100,
              67,
              89,
              106,
              77,
              106,
              73,
              48,
              79,
              122,
              119,
              118,
              97,
              68,
              69,
              43,
              67,
              81,
              111,
              74,
              67,
              103,
              107,
              56,
              97,
              68,
              73,
              43,
              85,
              109,
              108,
              108,
              99,
              71,
              108,
              115,
              98,
              50,
              100,
              118,
              73,
              71,
              82,
              108,
              98,
              67,
              66,
              119,
              89,
              87,
              100,
              104,
              98,
              87,
              86,
              117,
              100,
              71,
              56,
              56,
              76,
              50,
              103,
              121,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              56,
              100,
              71,
              70,
              105,
              98,
              71,
              85,
              103,
              97,
              87,
              81,
              57,
              73,
              110,
              82,
              104,
              89,
              109,
              120,
              108,
              73,
              106,
              52,
              75,
              67,
              84,
              120,
              48,
              97,
              71,
              86,
              104,
              90,
              68,
              52,
              75,
              67,
              83,
              65,
              56,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              74,
              80,
              72,
              82,
              111,
              80,
              103,
              111,
              74,
              67,
              81,
              107,
              56,
              99,
              51,
              66,
              104,
              98,
              106,
              53,
              66,
              100,
              88,
              74,
              112,
              90,
              50,
              69,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              103,
              107,
              74,
              80,
              67,
              57,
              48,
              97,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              103,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              110,
              74,
              112,
              90,
              50,
              104,
              48,
              73,
              106,
              52,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              77,
              84,
              65,
              119,
              77,
              68,
              65,
              103,
              74,
              105,
              77,
              52,
              77,
              122,
              89,
              48,
              79,
              122,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              67,
              81,
              107,
              56,
              76,
              51,
              82,
              111,
              80,
              103,
              107,
              74,
              67,
              103,
              107,
              103,
              73,
              68,
              119,
              118,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              56,
              76,
              51,
              82,
              111,
              90,
              87,
              70,
              107,
              80,
              103,
              111,
              75,
              67,
              84,
              120,
              48,
              89,
              109,
              57,
              107,
              101,
              84,
              52,
              74,
              67,
              103,
              107,
              103,
              73,
              68,
              120,
              48,
              99,
              106,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              81,
              43,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              81,
              50,
              57,
              116,
              98,
              87,
              108,
              122,
              99,
              50,
              108,
              118,
              98,
              109,
              107,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              81,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              110,
              74,
              112,
              90,
              50,
              104,
              48,
              73,
              106,
              52,
              74,
              67,
              81,
              107,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              77,
              105,
              52,
              122,
              73,
              67,
              89,
              106,
              79,
              68,
              77,
              50,
              78,
              68,
              115,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              103,
              107,
              74,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              74,
              67,
              81,
              111,
              74,
              73,
              67,
              65,
              56,
              76,
              51,
              82,
              121,
              80,
              103,
              107,
              103,
              73,
              65,
              111,
              74,
              73,
              68,
              119,
              118,
              100,
              71,
              74,
              118,
              90,
              72,
              107,
              43,
              67,
              81,
              111,
              74,
              73,
              68,
              120,
              48,
              90,
              109,
              57,
              118,
              100,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              74,
              67,
              84,
              120,
              48,
              90,
              68,
              52,
              56,
              99,
              51,
              66,
              104,
              98,
              105,
              66,
              106,
              98,
              71,
              70,
              122,
              99,
              122,
              48,
              105,
              98,
              71,
              70,
              121,
              90,
              50,
              85,
              105,
              80,
              108,
              82,
              118,
              100,
              71,
              70,
              115,
              90,
              84,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              74,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              82,
              107,
              73,
              71,
              78,
              115,
              89,
              88,
              78,
              122,
              80,
              83,
              74,
              121,
              97,
              87,
              100,
              111,
              100,
              67,
              73,
              43,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              109,
              120,
              104,
              99,
              109,
              100,
              108,
              73,
              106,
              52,
              120,
              77,
              83,
              52,
              49,
              73,
              67,
              89,
              106,
              79,
              68,
              77,
              50,
              78,
              68,
              115,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              74,
              67,
              81,
              111,
              74,
              67,
              84,
              119,
              118,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              103,
              73,
              68,
              119,
              118,
              100,
              71,
              90,
              118,
              98,
              51,
              81,
              43,
              67,
              103,
              111,
              74,
              73,
              65,
              111,
              74,
              80,
              67,
              57,
              48,
              89,
              87,
              74,
              115,
              90,
              84,
              52,
              74,
              67,
              105,
              65,
              75,
              73,
              67,
              65,
              103,
              73,
              68,
              120,
              105,
              100,
              88,
              82,
              48,
              98,
              50,
              52,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              109,
              53,
              108,
              90,
              50,
              70,
              48,
              97,
              88,
              90,
              108,
              73,
              105,
              66,
              107,
              89,
              88,
              82,
              104,
              76,
              87,
              90,
              107,
              97,
              122,
              48,
              105,
              85,
              122,
              81,
              105,
              73,
              71,
              108,
              107,
              80,
              83,
              74,
              105,
              89,
              87,
              78,
              114,
              73,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              67,
              65,
              103,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              83,
              87,
              53,
              107,
              97,
              87,
              86,
              48,
              99,
              109,
              56,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              105,
              65,
              103,
              73,
              67,
              65,
              56,
              76,
              50,
              74,
              49,
              100,
              72,
              82,
              118,
              98,
              106,
              52,
              75,
              67,
              81,
              111,
              74,
              80,
              71,
              74,
              49,
              100,
              72,
              82,
              118,
              98,
              105,
              66,
              106,
              98,
              71,
              70,
              122,
              99,
              122,
              48,
              105,
              98,
              109,
              86,
              110,
              89,
              88,
              82,
              112,
              100,
              109,
              85,
              105,
              73,
              71,
              108,
              107,
              80,
              83,
              74,
              108,
              101,
              71,
              108,
              48,
              73,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              67,
              65,
              103,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              82,
              88,
              78,
              106,
              97,
              84,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              68,
              119,
              118,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              56,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              73,
              71,
              78,
              115,
              89,
              88,
              78,
              122,
              80,
              83,
              74,
              119,
              98,
              51,
              78,
              112,
              100,
              71,
              108,
              50,
              90,
              83,
              73,
              103,
              90,
              71,
              70,
              48,
              89,
              83,
              49,
              109,
              90,
              71,
              115,
              57,
              73,
              108,
              77,
              52,
              73,
              105,
              66,
              112,
              90,
              68,
              48,
              105,
              89,
              50,
              57,
              117,
              90,
              109,
              108,
              121,
              98,
              83,
              73,
              43,
              67,
              105,
              65,
              103,
              73,
              67,
              65,
              103,
              73,
              68,
              120,
              122,
              99,
              71,
              70,
              117,
              80,
              108,
              66,
              104,
              90,
              50,
              69,
              103,
              73,
              68,
              69,
              120,
              76,
              106,
              85,
              103,
              74,
              105,
              77,
              52,
              77,
              122,
              89,
              48,
              79,
              122,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              67,
              84,
              119,
              118,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              75,
              67,
              103,
              107,
              56,
              76,
              50,
              74,
              118,
              90,
              72,
              107,
              43,
              67,
              103,
              107,
              75,
              80,
              67,
              57,
              111,
              100,
              71,
              49,
              115,
              80,
              103,
              61,
              61,
              34,
              125,
              44,
              34,
              99,
              111,
              109,
              109,
              97,
              110,
              100,
              34,
              58,
              34,
              80,
              82,
              73,
              78,
              84,
              95,
              82,
              69,
              67,
              69,
              73,
              80,
              84,
              34,
              44,
              34,
              98,
              117,
              116,
              116,
              111,
              110,
              115,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              98,
              117,
              116,
              116,
              111,
              110,
              49,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              125,
              93,
              125,
              44,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              54,
              55,
              56,
              57,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              97,
              48,
              49,
              50,
              56,
              102,
              99,
              57,
              45,
              102,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              79,
              75,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              111,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              32,
              99,
              111,
              109,
              112,
              108,
              101,
              116,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 419,
          "responseSize": 2112
        },
        "id": "66a69659-26f8-4932-ba8a-0b9b7b47a347",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e964f660-a0eb-4f33-9f9c-fdaec7add81b",
          "length": 10,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "34c16589-59c6-4755-9089-4d62ad13024f"
        },
        "item": {
          "id": "55e5a384-1ac1-43d3-9749-d33224fcdc9d",
          "name": "Start process - END PROCESS",
          "request": {
            "description": {
              "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "main"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e4040a2f-723d-4e05-917c-4ae15de62412",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "3321c20c-d25b-4007-b1f7-fd009ec4eadd"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3e981c14-ae44-41e7-bd7c-0fab0554f8e4",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "494",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "87427603-75d2-4d09-bd67-1ebca0cb19f6",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "content-length",
              "value": "139"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              48,
              48,
              48,
              49,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              50,
              56,
              53,
              51,
              56,
              56,
              100,
              52,
              45,
              52,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              69,
              78,
              68,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              105,
              115,
              32,
              116,
              101,
              114,
              109,
              105,
              110,
              97,
              116,
              101,
              100,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 25,
          "responseSize": 139
        },
        "id": "55e5a384-1ac1-43d3-9749-d33224fcdc9d",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d1c8966f-40bc-474e-ac24-295c40537870",
          "length": 10,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "795ea62a-4640-420d-b4de-f4090c32668c"
        },
        "item": {
          "id": "aeaf3d2e-7518-4d7f-a281-009febfd0bee",
          "name": "Start process - PROCESSING",
          "request": {
            "description": {
              "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "main"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "852a789d-35e8-41eb-96de-7f328bc4f646",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 202\", function () {",
                  "    pm.response.to.have.status(202);",
                  "});"
                ],
                "_lastExecutionId": "5af3bb30-09c6-4270-9519-66db386a668c"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "40e3b036-55a6-433f-8e28-53dad6db651b",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "494",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "6609c9b5-da06-4cd8-97a4-95b5c32687a0",
          "status": "Accepted",
          "code": 202,
          "header": [
            {
              "key": "content-length",
              "value": "155"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              48,
              48,
              48,
              50,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              53,
              99,
              98,
              99,
              51,
              50,
              57,
              56,
              45,
              49,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              80,
              82,
              79,
              67,
              69,
              83,
              83,
              73,
              78,
              71,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              80,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              115,
              116,
              105,
              108,
              108,
              32,
              114,
              117,
              110,
              110,
              105,
              110,
              103,
              44,
              32,
              114,
              101,
              116,
              114,
              121,
              32,
              108,
              97,
              116,
              101,
              114,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 23,
          "responseSize": 155
        },
        "id": "aeaf3d2e-7518-4d7f-a281-009febfd0bee",
        "assertions": [
          {
            "assertion": "Status code is 202",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b124399a-c8d5-44a2-8b9f-871dcb9327be",
          "length": 10,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "742d50ea-622b-4de4-b946-bf032e1d47b3"
        },
        "item": {
          "id": "badd6925-786f-42eb-85c4-e1ca3dab2750",
          "name": "Start process - ERROR ON PROCESS",
          "request": {
            "description": {
              "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "main"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8ef63692-cacd-457f-ad95-2047c7236802",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 209\", function () {",
                  "    pm.response.to.have.status(209);",
                  "});"
                ],
                "_lastExecutionId": "52ae21a4-36cd-4564-8e4a-474225c50664"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "24925b89-082f-4df1-b49e-188b093732a3",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "494",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "35703ed7-e00c-4b3d-afc0-695bdb29fb9d",
          "status": "Success (209)",
          "code": 209,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            },
            {
              "key": "content-length",
              "value": "90"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              80,
              82,
              79,
              67,
              69,
              83,
              83,
              95,
              69,
              82,
              82,
              79,
              82,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              69,
              114,
              114,
              111,
              114,
              32,
              119,
              104,
              105,
              108,
              101,
              32,
              114,
              117,
              110,
              110,
              105,
              110,
              103,
              32,
              116,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              50,
              48,
              57,
              125
            ]
          },
          "cookie": [],
          "responseTime": 26,
          "responseSize": 90
        },
        "id": "badd6925-786f-42eb-85c4-e1ca3dab2750",
        "assertions": [
          {
            "assertion": "Status code is 209",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "05847d74-50af-4791-851c-8fe06be2d0ba",
          "length": 10,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2fad434d-6041-4a00-8344-46cfcea8c2dd"
        },
        "item": {
          "id": "dd9c744b-3ad9-4e41-91d9-60a306ad6d1c",
          "name": "Start process - EXCEPTION ON PROCESS",
          "request": {
            "description": {
              "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "main"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ab301454-6a91-430b-99e5-fcbb2586707a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 500\", function () {",
                  "    pm.response.to.have.status(500);",
                  "});"
                ],
                "_lastExecutionId": "1fc6a722-f622-41d3-97d6-c699da9a4a09"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "main"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "92bb304c-b9c4-45df-8dac-725b3613271c",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "494",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    }\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "44ef4485-97db-4413-9f0c-99a9b42bb2c2",
          "status": "Internal Server Error",
          "code": 500,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            },
            {
              "key": "content-length",
              "value": "80"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              84,
              65,
              83,
              75,
              95,
              69,
              82,
              82,
              79,
              82,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              69,
              114,
              114,
              111,
              114,
              32,
              114,
              101,
              116,
              114,
              105,
              101,
              118,
              101,
              32,
              110,
              101,
              120,
              116,
              32,
              115,
              116,
              101,
              112,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              53,
              48,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 22,
          "responseSize": 80
        },
        "id": "dd9c744b-3ad9-4e41-91d9-60a306ad6d1c",
        "assertions": [
          {
            "assertion": "Status code is 500",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f57b56b4-f43e-4633-830e-5cc32ddf27d7",
          "length": 10,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fa89e18e-a817-4ca2-b60a-1674c6de7d47"
        },
        "item": {
          "id": "70ca5dac-91f2-4ad6-b1eb-1915603d4819",
          "name": "Next - CREATED",
          "request": {
            "description": {
              "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "next",
                "trns",
                "06789-12345-0001-64874412-1698769800000-363cc36d-0"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "92fcc9ba-7a98-4262-9e02-b2e326e00f9d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ],
                "_lastExecutionId": "1e7eef4d-28a1-4dd9-a31a-a9db325603cd"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "06789-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f5a93225-66ff-4dce-9a4e-a2a2edcb6fa1",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "680",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"06789\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "39d0284e-2897-47b7-9890-2a7c5f06006a",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "content-length",
              "value": "2112"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              97,
              115,
              107,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              116,
              101,
              115,
              116,
              49,
              34,
              58,
              34,
              100,
              97,
              116,
              97,
              49,
              34,
              44,
              34,
              118,
              97,
              114,
              105,
              97,
              98,
              108,
              101,
              49,
              34,
              58,
              34,
              49,
              49,
              46,
              53,
              48,
              34,
              44,
              34,
              97,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              34,
              49,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              101,
              34,
              58,
              34,
              49,
              49,
              46,
              53,
              34,
              44,
              34,
              102,
              101,
              101,
              34,
              58,
              34,
              50,
              46,
              51,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              122,
              105,
              111,
              110,
              101,
              34,
              44,
              34,
              99,
              111,
              109,
              112,
              97,
              110,
              121,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              44,
              34,
              111,
              110,
              69,
              114,
              114,
              111,
              114,
              34,
              58,
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              44,
              34,
              116,
              105,
              109,
              101,
              111,
              117,
              116,
              34,
              58,
              53,
              48,
              44,
              34,
              111,
              110,
              84,
              105,
              109,
              101,
              111,
              117,
              116,
              34,
              58,
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              44,
              34,
              116,
              101,
              109,
              112,
              108,
              97,
              116,
              101,
              34,
              58,
              123,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              68,
              57,
              52,
              98,
              87,
              119,
              103,
              100,
              109,
              86,
              121,
              99,
              50,
              108,
              118,
              98,
              106,
              48,
              105,
              77,
              83,
              52,
              119,
              73,
              105,
              66,
              108,
              98,
              109,
              78,
              118,
              90,
              71,
              108,
              117,
              90,
              122,
              48,
              105,
              97,
              88,
              78,
              118,
              76,
              84,
              103,
              52,
              78,
              84,
              107,
              116,
              77,
              83,
              73,
              47,
              80,
              103,
              111,
              56,
              73,
              85,
              82,
              80,
              81,
              49,
              82,
              90,
              85,
              69,
              85,
              103,
              97,
              72,
              82,
              116,
              98,
              67,
              66,
              81,
              86,
              85,
              74,
              77,
              83,
              85,
              77,
              103,
              73,
              105,
              48,
              118,
              76,
              49,
              99,
              122,
              81,
              121,
              56,
              118,
              82,
              70,
              82,
              69,
              73,
              70,
              104,
              73,
              86,
              69,
              49,
              77,
              73,
              68,
              69,
              117,
              77,
              67,
              66,
              85,
              99,
              109,
              70,
              117,
              99,
              50,
              108,
              48,
              97,
              87,
              57,
              117,
              89,
              87,
              119,
              118,
              76,
              48,
              86,
              79,
              73,
              105,
              65,
              105,
              97,
              72,
              82,
              48,
              99,
              68,
              111,
              118,
              76,
              51,
              100,
              51,
              100,
              121,
              53,
              51,
              77,
              121,
              53,
              118,
              99,
              109,
              99,
              118,
              86,
              70,
              73,
              118,
              101,
              71,
              104,
              48,
              98,
              87,
              119,
              120,
              76,
              48,
              82,
              85,
              82,
              67,
              57,
              52,
              97,
              72,
              82,
              116,
              98,
              68,
              69,
              116,
              100,
              72,
              74,
              104,
              98,
              110,
              78,
              112,
              100,
              71,
              108,
              118,
              98,
              109,
              70,
              115,
              76,
              109,
              82,
              48,
              90,
              67,
              73,
              43,
              67,
              106,
              120,
              111,
              100,
              71,
              49,
              115,
              73,
              72,
              104,
              116,
              98,
              71,
              53,
              122,
              80,
              83,
              74,
              111,
              100,
              72,
              82,
              119,
              79,
              105,
              56,
              118,
              100,
              51,
              100,
              51,
              76,
              110,
              99,
              122,
              76,
              109,
              57,
              121,
              90,
              121,
              56,
              120,
              79,
              84,
              107,
              53,
              76,
              51,
              104,
              111,
              100,
              71,
              49,
              115,
              73,
              106,
              52,
              75,
              80,
              71,
              104,
              108,
              89,
              87,
              81,
              43,
              80,
              71,
              120,
              112,
              98,
              109,
              115,
              103,
              99,
              109,
              86,
              115,
              80,
              83,
              74,
              122,
              100,
              72,
              108,
              115,
              90,
              88,
              78,
              111,
              90,
              87,
              86,
              48,
              73,
              105,
              66,
              111,
              99,
              109,
              86,
              109,
              80,
              83,
              74,
              106,
              99,
              51,
              77,
              118,
              90,
              87,
              49,
              49,
              98,
              71,
              70,
              48,
              98,
              51,
              74,
              108,
              76,
              109,
              78,
              122,
              99,
              121,
              73,
              103,
              76,
              122,
              52,
              56,
              76,
              50,
              104,
              108,
              89,
              87,
              81,
              43,
              67,
              106,
              120,
              105,
              98,
              50,
              82,
              53,
              80,
              103,
              111,
              74,
              80,
              71,
              108,
              116,
              90,
              121,
              66,
              112,
              90,
              68,
              48,
              105,
              98,
              71,
              57,
              110,
              98,
              121,
              73,
              103,
              99,
              51,
              74,
              106,
              80,
              83,
              74,
              111,
              100,
              72,
              82,
              119,
              99,
              122,
              111,
              118,
              76,
              50,
              81,
              121,
              101,
              71,
              82,
              49,
              101,
              84,
              100,
              48,
              89,
              109,
              100,
              49,
              77,
              109,
              81,
              122,
              76,
              109,
              78,
              115,
              98,
              51,
              86,
              107,
              90,
              110,
              74,
              118,
              98,
              110,
              81,
              117,
              98,
              109,
              86,
              48,
              76,
              50,
              90,
              112,
              98,
              71,
              86,
              122,
              76,
              48,
              108,
              68,
              84,
              48,
              52,
              118,
              90,
              71,
              86,
              109,
              89,
              88,
              86,
              115,
              100,
              70,
              57,
              115,
              98,
              50,
              100,
              118,
              76,
              110,
              78,
              50,
              90,
              121,
              73,
              103,
              76,
              122,
              52,
              75,
              67,
              84,
              120,
              111,
              77,
              84,
              53,
              84,
              90,
              88,
              74,
              50,
              97,
              88,
              112,
              112,
              73,
              71,
              82,
              112,
              73,
              72,
              66,
              49,
              89,
              109,
              74,
              115,
              97,
              87,
              78,
              104,
              73,
              72,
              86,
              48,
              97,
              87,
              120,
              112,
              100,
              67,
              89,
              106,
              77,
              106,
              73,
              48,
              79,
              122,
              119,
              118,
              97,
              68,
              69,
              43,
              67,
              81,
              111,
              74,
              67,
              103,
              107,
              56,
              97,
              68,
              73,
              43,
              85,
              109,
              108,
              108,
              99,
              71,
              108,
              115,
              98,
              50,
              100,
              118,
              73,
              71,
              82,
              108,
              98,
              67,
              66,
              119,
              89,
              87,
              100,
              104,
              98,
              87,
              86,
              117,
              100,
              71,
              56,
              56,
              76,
              50,
              103,
              121,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              56,
              100,
              71,
              70,
              105,
              98,
              71,
              85,
              103,
              97,
              87,
              81,
              57,
              73,
              110,
              82,
              104,
              89,
              109,
              120,
              108,
              73,
              106,
              52,
              75,
              67,
              84,
              120,
              48,
              97,
              71,
              86,
              104,
              90,
              68,
              52,
              75,
              67,
              83,
              65,
              56,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              74,
              80,
              72,
              82,
              111,
              80,
              103,
              111,
              74,
              67,
              81,
              107,
              56,
              99,
              51,
              66,
              104,
              98,
              106,
              53,
              66,
              100,
              88,
              74,
              112,
              90,
              50,
              69,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              103,
              107,
              74,
              80,
              67,
              57,
              48,
              97,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              103,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              110,
              74,
              112,
              90,
              50,
              104,
              48,
              73,
              106,
              52,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              77,
              84,
              65,
              119,
              77,
              68,
              65,
              103,
              74,
              105,
              77,
              52,
              77,
              122,
              89,
              48,
              79,
              122,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              67,
              81,
              107,
              56,
              76,
              51,
              82,
              111,
              80,
              103,
              107,
              74,
              67,
              103,
              107,
              103,
              73,
              68,
              119,
              118,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              56,
              76,
              51,
              82,
              111,
              90,
              87,
              70,
              107,
              80,
              103,
              111,
              75,
              67,
              84,
              120,
              48,
              89,
              109,
              57,
              107,
              101,
              84,
              52,
              74,
              67,
              103,
              107,
              103,
              73,
              68,
              120,
              48,
              99,
              106,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              81,
              43,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              81,
              50,
              57,
              116,
              98,
              87,
              108,
              122,
              99,
              50,
              108,
              118,
              98,
              109,
              107,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              71,
              81,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              110,
              74,
              112,
              90,
              50,
              104,
              48,
              73,
              106,
              52,
              74,
              67,
              81,
              107,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              77,
              105,
              52,
              122,
              73,
              67,
              89,
              106,
              79,
              68,
              77,
              50,
              78,
              68,
              115,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              103,
              107,
              74,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              74,
              67,
              81,
              111,
              74,
              73,
              67,
              65,
              56,
              76,
              51,
              82,
              121,
              80,
              103,
              107,
              103,
              73,
              65,
              111,
              74,
              73,
              68,
              119,
              118,
              100,
              71,
              74,
              118,
              90,
              72,
              107,
              43,
              67,
              81,
              111,
              74,
              73,
              68,
              120,
              48,
              90,
              109,
              57,
              118,
              100,
              68,
              52,
              75,
              67,
              81,
              107,
              56,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              74,
              67,
              84,
              120,
              48,
              90,
              68,
              52,
              56,
              99,
              51,
              66,
              104,
              98,
              105,
              66,
              106,
              98,
              71,
              70,
              122,
              99,
              122,
              48,
              105,
              98,
              71,
              70,
              121,
              90,
              50,
              85,
              105,
              80,
              108,
              82,
              118,
              100,
              71,
              70,
              115,
              90,
              84,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              74,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              75,
              67,
              81,
              107,
              74,
              80,
              72,
              82,
              107,
              73,
              71,
              78,
              115,
              89,
              88,
              78,
              122,
              80,
              83,
              74,
              121,
              97,
              87,
              100,
              111,
              100,
              67,
              73,
              43,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              109,
              120,
              104,
              99,
              109,
              100,
              108,
              73,
              106,
              52,
              120,
              77,
              83,
              52,
              49,
              73,
              67,
              89,
              106,
              79,
              68,
              77,
              50,
              78,
              68,
              115,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              80,
              67,
              57,
              48,
              90,
              68,
              52,
              74,
              67,
              81,
              111,
              74,
              67,
              84,
              119,
              118,
              100,
              72,
              73,
              43,
              67,
              103,
              107,
              103,
              73,
              68,
              119,
              118,
              100,
              71,
              90,
              118,
              98,
              51,
              81,
              43,
              67,
              103,
              111,
              74,
              73,
              65,
              111,
              74,
              80,
              67,
              57,
              48,
              89,
              87,
              74,
              115,
              90,
              84,
              52,
              74,
              67,
              105,
              65,
              75,
              73,
              67,
              65,
              103,
              73,
              68,
              120,
              105,
              100,
              88,
              82,
              48,
              98,
              50,
              52,
              103,
              89,
              50,
              120,
              104,
              99,
              51,
              77,
              57,
              73,
              109,
              53,
              108,
              90,
              50,
              70,
              48,
              97,
              88,
              90,
              108,
              73,
              105,
              66,
              107,
              89,
              88,
              82,
              104,
              76,
              87,
              90,
              107,
              97,
              122,
              48,
              105,
              85,
              122,
              81,
              105,
              73,
              71,
              108,
              107,
              80,
              83,
              74,
              105,
              89,
              87,
              78,
              114,
              73,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              67,
              65,
              103,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              83,
              87,
              53,
              107,
              97,
              87,
              86,
              48,
              99,
              109,
              56,
              56,
              76,
              51,
              78,
              119,
              89,
              87,
              52,
              43,
              67,
              105,
              65,
              103,
              73,
              67,
              65,
              56,
              76,
              50,
              74,
              49,
              100,
              72,
              82,
              118,
              98,
              106,
              52,
              75,
              67,
              81,
              111,
              74,
              80,
              71,
              74,
              49,
              100,
              72,
              82,
              118,
              98,
              105,
              66,
              106,
              98,
              71,
              70,
              122,
              99,
              122,
              48,
              105,
              98,
              109,
              86,
              110,
              89,
              88,
              82,
              112,
              100,
              109,
              85,
              105,
              73,
              71,
              108,
              107,
              80,
              83,
              74,
              108,
              101,
              71,
              108,
              48,
              73,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              67,
              65,
              103,
              80,
              72,
              78,
              119,
              89,
              87,
              52,
              43,
              82,
              88,
              78,
              106,
              97,
              84,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              73,
              67,
              65,
              103,
              73,
              68,
              119,
              118,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              56,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              73,
              71,
              78,
              115,
              89,
              88,
              78,
              122,
              80,
              83,
              74,
              119,
              98,
              51,
              78,
              112,
              100,
              71,
              108,
              50,
              90,
              83,
              73,
              103,
              90,
              71,
              70,
              48,
              89,
              83,
              49,
              109,
              90,
              71,
              115,
              57,
              73,
              108,
              77,
              52,
              73,
              105,
              66,
              112,
              90,
              68,
              48,
              105,
              89,
              50,
              57,
              117,
              90,
              109,
              108,
              121,
              98,
              83,
              73,
              43,
              67,
              105,
              65,
              103,
              73,
              67,
              65,
              103,
              73,
              68,
              120,
              122,
              99,
              71,
              70,
              117,
              80,
              108,
              66,
              104,
              90,
              50,
              69,
              103,
              73,
              68,
              69,
              120,
              76,
              106,
              85,
              103,
              74,
              105,
              77,
              52,
              77,
              122,
              89,
              48,
              79,
              122,
              119,
              118,
              99,
              51,
              66,
              104,
              98,
              106,
              52,
              75,
              67,
              84,
              119,
              118,
              89,
              110,
              86,
              48,
              100,
              71,
              57,
              117,
              80,
              103,
              111,
              74,
              67,
              103,
              107,
              75,
              67,
              103,
              107,
              56,
              76,
              50,
              74,
              118,
              90,
              72,
              107,
              43,
              67,
              103,
              107,
              75,
              80,
              67,
              57,
              111,
              100,
              71,
              49,
              115,
              80,
              103,
              61,
              61,
              34,
              125,
              44,
              34,
              99,
              111,
              109,
              109,
              97,
              110,
              100,
              34,
              58,
              34,
              80,
              82,
              73,
              78,
              84,
              95,
              82,
              69,
              67,
              69,
              73,
              80,
              84,
              34,
              44,
              34,
              98,
              117,
              116,
              116,
              111,
              110,
              115,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              98,
              117,
              116,
              116,
              111,
              110,
              49,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              114,
              105,
              103,
              97,
              34,
              125,
              125,
              93,
              125,
              44,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              54,
              55,
              56,
              57,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              51,
              54,
              51,
              99,
              99,
              51,
              54,
              100,
              45,
              48,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              79,
              75,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              111,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              32,
              99,
              111,
              109,
              112,
              108,
              101,
              116,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 30,
          "responseSize": 2112
        },
        "id": "70ca5dac-91f2-4ad6-b1eb-1915603d4819",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1ca7f17f-21f7-4605-b3a2-0209ca74bb36",
          "length": 10,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e06f0b6e-0e46-4a25-b1f7-1b294d4a2947"
        },
        "item": {
          "id": "ebd1cb42-21c1-4df5-8bb3-44b07fd44db3",
          "name": "Next - END PROCESS",
          "request": {
            "description": {
              "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "next",
                "trns",
                "00001-12345-0001-64874412-1698769800000-363cc36d-0"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "43117a8e-0a23-45c2-9874-7997b39ded58",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "6fb3a982-fabd-49ec-a217-614e546860b4"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00001-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1aaeb96f-5302-4f9c-9019-6026aa27c2c8",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "680",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00001\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "9b5b3b73-76c5-438b-9a9c-5a427e745c5a",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "content-length",
              "value": "139"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              48,
              48,
              48,
              49,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              51,
              54,
              51,
              99,
              99,
              51,
              54,
              100,
              45,
              48,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              69,
              78,
              68,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              105,
              115,
              32,
              116,
              101,
              114,
              109,
              105,
              110,
              97,
              116,
              101,
              100,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 22,
          "responseSize": 139
        },
        "id": "ebd1cb42-21c1-4df5-8bb3-44b07fd44db3",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "af8dc748-599a-40a7-b014-069e281a7028",
          "length": 10,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "478a9137-7caf-47c5-a124-e0c2047a4b3a"
        },
        "item": {
          "id": "1b1a7081-5e62-41ba-9fe7-73b67553253e",
          "name": "Next - PROCESSING",
          "request": {
            "description": {
              "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "next",
                "trns",
                "00002-12345-0001-64874412-1698769800000-363cc36d-0"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "54b9b8a0-7b52-42d6-838c-b570b71bc35d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 202\", function () {",
                  "    pm.response.to.have.status(202);",
                  "});"
                ],
                "_lastExecutionId": "e9fc2c93-7587-4b47-b584-b65b7b0bbad5"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00002-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b5037e62-3ec3-4f35-8dfb-9df979cc6dbd",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "680",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00002\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "9cac37c1-5d39-4d74-8800-0bc0f183e2bb",
          "status": "Accepted",
          "code": 202,
          "header": [
            {
              "key": "content-length",
              "value": "155"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              48,
              48,
              48,
              48,
              50,
              45,
              49,
              50,
              51,
              52,
              53,
              45,
              48,
              48,
              48,
              49,
              45,
              54,
              52,
              56,
              55,
              52,
              52,
              49,
              50,
              45,
              49,
              54,
              57,
              56,
              55,
              54,
              57,
              56,
              48,
              48,
              48,
              48,
              48,
              45,
              51,
              54,
              51,
              99,
              99,
              51,
              54,
              100,
              45,
              48,
              34,
              44,
              34,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              34,
              58,
              123,
              34,
              114,
              101,
              115,
              117,
              108,
              116,
              34,
              58,
              34,
              80,
              82,
              79,
              67,
              69,
              83,
              83,
              73,
              78,
              71,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              80,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              115,
              116,
              105,
              108,
              108,
              32,
              114,
              117,
              110,
              110,
              105,
              110,
              103,
              44,
              32,
              114,
              101,
              116,
              114,
              121,
              32,
              108,
              97,
              116,
              101,
              114,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 18,
          "responseSize": 155
        },
        "id": "1b1a7081-5e62-41ba-9fe7-73b67553253e",
        "assertions": [
          {
            "assertion": "Status code is 202",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "376fec08-9b6a-41ca-8c4e-79037759413a",
          "length": 10,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "86d0ad36-3079-46a3-9b38-1984a9538ff1"
        },
        "item": {
          "id": "fee6830e-1769-4adb-a2cd-1fbb90e1d8ff",
          "name": "Next - ERROR ON PROCESS",
          "request": {
            "description": {
              "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "next",
                "trns",
                "00003-12345-0001-64874412-1698769800000-363cc36d-0"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "32ecd508-ad4a-42f5-9993-502e20c66efc",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 209\", function () {",
                  "    pm.response.to.have.status(209);",
                  "});"
                ],
                "_lastExecutionId": "89c1b012-063b-4928-b752-06f51277f2f9"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00003-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "fb925a9e-9c9d-43cd-8166-778aa4121a90",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "680",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00003\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "73d1e93f-a390-4d6d-85c9-886ebd53458a",
          "status": "Success (209)",
          "code": 209,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            },
            {
              "key": "content-length",
              "value": "90"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              80,
              82,
              79,
              67,
              69,
              83,
              83,
              95,
              69,
              82,
              82,
              79,
              82,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              69,
              114,
              114,
              111,
              114,
              32,
              119,
              104,
              105,
              108,
              101,
              32,
              114,
              117,
              110,
              110,
              105,
              110,
              103,
              32,
              116,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              50,
              48,
              57,
              125
            ]
          },
          "cookie": [],
          "responseTime": 17,
          "responseSize": 90
        },
        "id": "fee6830e-1769-4adb-a2cd-1fbb90e1d8ff",
        "assertions": [
          {
            "assertion": "Status code is 209",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4b467f69-5682-47fb-a6ce-b278e90f87fa",
          "length": 10,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ce7d8b70-721a-4034-aebf-7fa407a31e5a"
        },
        "item": {
          "id": "aadc5c6c-e6a5-4413-b13b-3f690c12eaaf",
          "name": "Next - EXCEPTION ON PROCESS",
          "request": {
            "description": {
              "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "v1",
                "tasks",
                "next",
                "trns",
                "00004-12345-0001-64874412-1698769800000-363cc36d-0"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d258de0-55b2-4d90-bebd-4ae9679714b6",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 500\", function () {",
                  "    pm.response.to.have.status(500);",
                  "});"
                ],
                "_lastExecutionId": "8f14c58e-a835-4311-90ec-e74a4d4b48ae"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8086",
            "path": [
              "api",
              "v1",
              "tasks",
              "next",
              "trns",
              "00004-12345-0001-64874412-1698769800000-363cc36d-0"
            ],
            "host": [
              "host",
              "testcontainers",
              "internal"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c16f9e9b-6f27-4072-86f2-88c20a7adc68",
              "system": true
            },
            {
              "key": "Host",
              "value": "host.testcontainers.internal:8086",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "680",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"device\": {\r\n        \"bankId\": \"00004\",\r\n        \"branchId\": \"12345\",\r\n        \"code\": \"0001\",\r\n        \"terminalId\": \"64874412\",\r\n        \"opTimestamp\": \"2023-10-31T16:30:00\",\r\n        \"channel\": \"ATM\",\r\n        \"peripherals\": [\r\n            {\r\n                \"id\": \"PRINTER\",\r\n                \"name\": \"Receipt printer\",\r\n                \"status\": \"OK\"\r\n            },\r\n            {\r\n                \"id\": \"SCANNER\",\r\n                \"name\": \"Scanner\",\r\n                \"status\": \"OK\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": {\r\n        \"continue\": true,\r\n        \"functionId\": \"SPONTANEOUS_PAYMENT\"\r\n    },\r\n    \"taskId\": \"5352663e-8a11-11ee-a28e-be1865dc64a3\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "34b5b45b-a5e6-49d0-92ec-f30b932f0c10",
          "status": "Internal Server Error",
          "code": 500,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            },
            {
              "key": "content-length",
              "value": "80"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              84,
              65,
              83,
              75,
              95,
              69,
              82,
              82,
              79,
              82,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              69,
              114,
              114,
              111,
              114,
              32,
              114,
              101,
              116,
              114,
              105,
              101,
              118,
              101,
              32,
              110,
              101,
              120,
              116,
              32,
              115,
              116,
              101,
              112,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              53,
              48,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 16,
          "responseSize": 80
        },
        "id": "aadc5c6c-e6a5-4413-b13b-3f690c12eaaf",
        "assertions": [
          {
            "assertion": "Status code is 500",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 5152
    },
    "failures": [],
    "error": null
  }
}