---
openapi: 3.0.3
info:
  title: Workflow Task API
  description: Run the workflow based on BPMN model
  version: 1.0.0
servers:
- url: http://localhost:8701
  description: Auto generated value
- url: http://0.0.0.0:8701
  description: Auto generated value
paths:
  /api/v1/tasks/main/{functionId}:
    post:
      tags:
      - Task Resource
      summary: Restituisce la scena principale della funzione selezionata
      description: CREATE della scena prinicpale con la lista dei task dato l'ID della
        funzione selezionata.
      parameters:
      - name: functionId
        in: path
        description: ID della funzione selezionata
        required: true
        schema:
          type: string
        example: PAGAMENTO_SPONTANEO
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/State'
      responses:
        "201":
          description: Operazione eseguita con successo. Restituisce l'oggetto Scene
            nel body della risposta.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scene'
  /api/v1/tasks/main/{functionId}/trns/{trnId}:
    post:
      tags:
      - Task Resource
      summary: Restituisce la scena principale della funzione selezionata
      description: CREATE della scena principale con la lista dei task dato l'ID del
        flusso BPMN della funzione selezionata.
      parameters:
      - name: functionId
        in: path
        description: ID della funzione selezionata
        required: true
        schema:
          type: string
        example: PAGAMENTO_SPONTANEO
      - name: trnId
        in: path
        description: ID della transazione. Può essere generato dal Device alla richiesta
          della prima scena oppure generato dal server alla risposta della prima scena.
          Resta invariato fino al termine della funzione.
        required: true
        schema:
          type: string
        example: b197bbd0-0459-4d0f-9d4a-45cdd369c018
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/State'
      responses:
        "201":
          description: Operazione eseguita con successo. Restituisce l'oggetto Scene
            nel body della risposta.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scene'
  /api/v1/tasks/next/trns/{trnId}:
    post:
      tags:
      - Task Resource
      summary: Restituisce la scena successiva con la lista dei task dato l'ID del
        flusso.
      description: CREATE dello step successivo a quello corrente dato l'ID del flusso.
      parameters:
      - name: trnId
        in: path
        description: ID della transazione
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/State'
      responses:
        "201":
          description: Operazione eseguita con successo. restituisce l'oggetto Task
            nel body della risposta.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scene'
components:
  schemas:
    Button:
      description: The button object.
      type: object
      properties:
        id:
          description: The button id.
          type: string
        data:
          type: object
          additionalProperties:
            type: string
    Channel:
      enum:
      - ATM
      - KIOSK
      type: string
    Command:
      enum:
      - AUTHORIZE
      - PRINT_RECEIPT
      - SCAN_BIIL_DATA
      - SCAN_FISCAL_CODE
      - END
      type: string
    CommandTask:
      description: Descrive un task per l'esecuzione di un comando sul Device (ATM
        o Chiosco)
      required:
      - id
      type: object
      properties:
        id:
          description: Identificativo del Task
          type: string
        data:
          description: Mappa delle variabili server --> client
          type: object
          additionalProperties:
            type: string
        onError:
          description: The key/value data map on Error
          type: object
          additionalProperties:
            type: string
        timeout:
          format: int32
          type: integer
        onTimeout:
          description: The key/value data map on Timeout
          type: object
          additionalProperties:
            type: string
        command:
          $ref: '#/components/schemas/Command'
        receipt_template:
          description: Nome del template HTML della ricevuta oppure dell'HTML embedded
            (CDATA ???)
          type: string
        outcome_var_name:
          description: Nome della variabile in cui il Device setterà l'esito del Command
          type: string
    Device:
      description: The Device infos.
      required:
      - bank_id
      - branch_id
      type: object
      properties:
        bank_id:
          description: Il codice identificativo della banca (o codice ABI)
          type: string
          example: "02008"
        branch_id:
          description: Il codice identificativo della filiale (o codice CAB)
          type: string
          example: "12345"
        code:
          description: Il codice identificativo dello sportello ATM (Codice Sportello
            o S.A. del Quadro Informativo. SPE-DEF-200)
          pattern: "^[0-9]{1,4}$"
          type: string
          example: "0001"
        terminal_id:
          description: Il codice identificativo del dispositivo (o Terminal ID)
          pattern: "^[0-9a-zA-Z]{1,10}$"
          type: string
          example: ABCD1234
        channel:
          description: Identificativo del canale del dispositivo
          type: string
          allOf:
          - $ref: '#/components/schemas/Channel'
        peripherals:
          type: array
          items:
            $ref: '#/components/schemas/Peripheral'
    Peripheral:
      description: Oggetto che rappresenta una periferica del Device e il suo stato
      required:
      - id
      - status
      type: object
      properties:
        id:
          description: Label che identifica una specifica periferica
          type: string
          example: PRINTER
        name:
          description: Nome testuale della periferica
          type: string
          example: Receipt printer
        status:
          description: Stato della periferica
          type: string
          allOf:
          - $ref: '#/components/schemas/PeripheralStatus'
    PeripheralStatus:
      enum:
      - OK
      - WARNING
      - KO
      type: string
    Scene:
      description: L'oggetto Scene che rappresenta un Task di tipo ScreenTask o CommandTask
      required:
      - trn_id
      type: object
      properties:
        screen_task:
          $ref: '#/components/schemas/ScreenTask'
        command_task:
          $ref: '#/components/schemas/CommandTask'
        trn_id:
          description: ID della transazione. Può essere generato dal Device alla richiesta
            della prima scena oppure generato dal server alla risposta della prima
            scena. Resta invariato fino al termine della funzione.
          type: string
          example: b197bbd0-0459-4d0f-9d4a-45cdd369c018
    ScreenTask:
      description: Descrive un task di visualizzazione di una pagina HTML
      required:
      - id
      - template
      type: object
      properties:
        id:
          description: Identificativo del Task
          type: string
        data:
          description: Mappa delle variabili server --> client
          type: object
          additionalProperties:
            type: string
        onError:
          description: The key/value data map on Error
          type: object
          additionalProperties:
            type: string
        timeout:
          format: int32
          type: integer
        onTimeout:
          description: The key/value data map on Timeout
          type: object
          additionalProperties:
            type: string
        template:
          description: Nome della template HTML oppure dell'HTML embedded (CDATA ???)
          type: string
        buttons:
          type: array
          items:
            $ref: '#/components/schemas/Button'
    State:
      required:
      - device
      type: object
      properties:
        device:
          $ref: '#/components/schemas/Device'
        task_id:
          description: ID del task che sto chiudendo (non presente nella prima chiamata)
          type: string
        data:
          description: Mappa delle variabili inviate dal Device
          type: object
          additionalProperties:
            type: string
  securitySchemes:
    SecurityScheme:
      type: http
      description: Authentication
      scheme: basic
